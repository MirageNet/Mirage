[{"title":"Overview","type":0,"sectionRef":"#","url":"docs/components/","content":"","keywords":""},{"title":"Core & Foundation​","type":1,"pageTitle":"Overview","url":"docs/components/#core--foundation","content":"Network IdentityThe Network Identity component controls a game object’s unique identity on the network. Network ManagerNetworkManager is a helper class with instance references to the other major parts of the Mirage network. "},{"title":"Visibility & Scene Management​","type":1,"pageTitle":"Overview","url":"docs/components/#visibility--scene-management","content":"Scene Visibility CheckersThese components control the visibility of game objects for network clients based on which scene they're in. Network Proximity CheckerThe Network Proximity Checker component controls the visibility of game objects for network clients, based on proximity to players. Network Match CheckerThe Network Match Checker component controls the visibility of networked objects based on match id. Network Scene ManagerThe Network Scene Manager component controls the Unity Scenes running over the network. "},{"title":"Network Synchronization​","type":1,"pageTitle":"Overview","url":"docs/components/#network-synchronization","content":"Network AnimatorThe Network Animator component allows you to synchronize animation states for networked objects. It synchronizes state and parameters from an Animator Controller. Network TransformThe Network Transform component synchronizes the movement and rotation of game objects across the network. Network Transform ChildThe Network Transform Child component synchronizes the position and rotation of the child game object of a game object with a Network Transform component. "},{"title":"Networking Utilities​","type":1,"pageTitle":"Overview","url":"docs/components/#networking-utilities","content":"Network Manager HUDThe Network Manager HUD is a quick-start tool to help you start building your multiplayer game straight away. Network Ping DisplayNetwork Ping Display shows the ping time for clients using a UI Text component. Network DiscoveryThe Network Discovery component allows clients to find and connect to running servers on the local network. Ready CheckThe Ready Check component manages the ready state of players. "},{"title":"Authentication​","type":1,"pageTitle":"Overview","url":"docs/components/#authentication","content":"Authentication GuideLearn about authentication processes and available authenticators in Mirage. "},{"title":"Logging & Debugging​","type":1,"pageTitle":"Overview","url":"docs/components/#logging--debugging","content":"Network Log SettingsThe Network Log Settings component provides granular control over log levels for different parts of your game. "},{"title":"Network Animator","type":0,"sectionRef":"#","url":"docs/components/network-animator","content":"","keywords":""},{"title":"Details​","type":1,"pageTitle":"Network Animator","url":"docs/components/network-animator#details","content":"The Network Animator ensures the synchronization of game object animation across the network, meaning that all players see the animation happen at the same. There are two kinds of authority for networked animation (see documentation on Network Authority): note Animator Triggers are not synced directly. Call NetworkAnimator.SetTrigger instead. A game object with authority can use the SetTrigger function to fire an animation trigger on other clients. If the game object has authority over the client, you should animate it locally on the client that owns the game object. That client sends the animation state information to the server, which broadcasts it to all the other clients. For example, this may be suitable for player characters with client authority.If the game object has authority on the server, then you should animate it on the server. The server then sends state information to all clients. This is common for animated game objects that are not related to a specific client, such as scene objects and non-player characters, or server-authoritative clients. "},{"title":"Network Identity","type":0,"sectionRef":"#","url":"docs/components/network-identity","content":"","keywords":""},{"title":"Spawn Settings​","type":1,"pageTitle":"Network Identity","url":"docs/components/network-identity#spawn-settings","content":"The SpawnSettings field on the NetworkIdentity component controls which properties of the object are synchronized when it is spawned. You can use these settings to control the initial state of the object on the clients. Send Position: Synchronizes the object's position.Send Rotation: Synchronizes the object's rotation.Send Scale: Synchronizes the object's scale.Send Name: Synchronizes the object's name.Send Active: Synchronizes the object's active state. "},{"title":"Instantiated Network Game Objects​","type":1,"pageTitle":"Network Identity","url":"docs/components/network-identity#instantiated-network-game-objects","content":"With Mirage’s server-authoritative networking system, the server must spawn networked game objects with network identities, using NetworkServer.Spawn. This automatically creates them on clients that are connected to the server and assign them a NetId. You must put a Network Identity component on any Prefabs that spawn at runtime for the network system to use them. See Object Spawning for more information. "},{"title":"Scene-based Network Game Objects​","type":1,"pageTitle":"Network Identity","url":"docs/components/network-identity#scene-based-network-game-objects","content":"You can also network game objects that are saved as part of your Scene (for example, environmental props). Networking game objects makes them behave slightly differently because you need to have them spawn across the network. When building your game, Unity disables all Scene-based game objects with Network Identity components. When a client connects to the server, the server sends spawn messages to tell the client which Scene game objects to enable and what their most up-to-date state information is. This ensures the client’s game does not contain game objects at incorrect locations when they start playing, or that Unity does not spawn and immediately destroy game objects on the connection (for example, if an event removed the game object before that client connected). See Networked Scene Game Objects for more information. "},{"title":"Preview Pane Information​","type":1,"pageTitle":"Network Identity","url":"docs/components/network-identity#preview-pane-information","content":"This component contains network tracking information and displays that information in the preview pane. For example, the scene ID, network ID and asset ID the object has been assigned. This allows you to inspect the information which can be useful for investigation and debugging.  At runtime there is more information to display here (a disabled NetworkBehaviour is displayed non-bold):  "},{"title":"Network Manager","type":0,"sectionRef":"#","url":"docs/components/network-manager","content":"Network Manager NetworkManager is a helper class with instance references to the other major parts of the Mirage network. It provides quick access to: NetworkServerNetworkClientNetworkSceneManagerServerObjectManagerClientObjectManager","keywords":""},{"title":"Network Manager HUD","type":0,"sectionRef":"#","url":"docs/components/network-manager-hud","content":"","keywords":""},{"title":"Using the HUD​","type":1,"pageTitle":"Network Manager HUD","url":"docs/components/network-manager-hud#using-the-hud","content":"The Network Manager HUD allows you to start in Host, Server, or Client-only modes and input a network address. "},{"title":"Host (Server + Client)​","type":1,"pageTitle":"Network Manager HUD","url":"docs/components/network-manager-hud#host-server--client","content":"Click the Host (Server + Client) button to start a game as a host on the local network. This client is both the host and one of the players in the game. It uses the information from the Network Info section in the inspector to host the game. When you have started a game as a host, other players of the game can then connect to the host to join the game. Click the Stop button to disconnect from the host. Clicking Stop also returns to the main HUD menu. "},{"title":"Client​","type":1,"pageTitle":"Network Manager HUD","url":"docs/components/network-manager-hud#client","content":"To connect to a host or standalone server on the internet use the text field to specify the address of the host. The default host address is “localhost”, which means the client looks on its own computer for the game host. In addition to localhost, you can specify an IPv4 address, IPv6 address, or a fully-qualified domain name (FQDN), e.g. game.example.com, and the transport with resolve the name using DNS. Click Client to attempt to connect to the host address you have specified. Use the default “localhost” in this field if you are running multiple instances of your game on one computer, to test multiplayer interactivity. To do this, you can create a standalone build of your game, and then launch it multiple times on your computer. This is a common way to quickly test that your networked game interactions are functioning as you expect, without you needing to deploy your game to multiple computers or devices.  When you want to test your game on multiple machines you need to put the address of the computer acting as the host into the address text field. The computer acting as the host needs to tell their IP address to everyone that wants to connect so that they can type the IP into the box. For local clients on a LAN, that's the local IP address (localhost). For remote clients, that's the WAN IP address of the router of the host. Firewall rules and port-forwarding are generally required for a computer to act as the host and accept connections from other computers, whether they're on the LAN or the internet. Enter the IP address (or leave it as localhost if you are testing it on your own machine), then click Client to attempt to connect to the host. When the client is attempting to connect, the HUD displays a Cancel Connection Attempt button. Click this if you want to stop trying to connect to the host.  If the connection is successful, the HUD displays the Stop button. Click this if you want to stop the game on the client and disconnect from the host:  "},{"title":"Server Only​","type":1,"pageTitle":"Network Manager HUD","url":"docs/components/network-manager-hud#server-only","content":"Click Server Only to start a game that acts as a server that other clients can connect to, but which does not act as a client to the game itself. This type of game is often called a “dedicated server”. A user cannot play the game on this particular instance of your game. All players must connect as clients, and nobody plays on the instance that is running as the server. A dedicated server results in better performance for all connected players because the server doesn't need to process a local player's game play in addition to acting as server. You might also choose this option if you want to host a game that can be played over the internet (rather than just within a local network), but want to maintain control of the server yourself - for example, to prevent cheating by one of the clients, because only the server has authority over the game. To do this, you would need to run the game in Server Only mode on a computer with a public IP address. "},{"title":"Network Discovery","type":0,"sectionRef":"#","url":"docs/components/network-discovery","content":"","keywords":""},{"title":"Quick Start​","type":1,"pageTitle":"Network Discovery","url":"docs/components/network-discovery#quick-start","content":"To use Network Discovery follow these steps: Create a game object with a NetworkManager if you have not done so alreadyDo not add a NetworkManagerHUD. Discovery has a different UI component.Add a NetworkDiscoveryHUD component to the NetworkManager game object. A NetworkDiscovery component will be automatically added and wired up to your HUD.Add a player to the NetworkManager if you have not done so.Build and run a standalone versionClick on Start HostStart play mode in the editor and click on Find ServersThe editor should find the standalone version and display a buttonClick on the button to connect to it. The NetworkDiscoveryHUD is provided as a simple and quick way to get started, but you will probably want to replace it with your own user interface. "},{"title":"Custom Network Discovery​","type":1,"pageTitle":"Network Discovery","url":"docs/components/network-discovery#custom-network-discovery","content":"You can completely replace the user interface by adding your own interface (typically Unity UI based) instead of the default NetworkDiscoveryHUD. You do still need the NetworkDiscovery component to do the heavy lifting. Sometimes you want to provide more information in the discovery messages. Some use cases could include: The client can show if the server is in PvP or PvE modeThe client can show how full the servers are.The client can show the ping to each server so the player can choose the fastest serverThe client can show the languageThe client can show if the server is password protected The message classes define what is sent between the client and server. As long as you keep your messages simple using the Data Types that Mirage can serialize, you won't need to write custom serializers for them. public class DiscoveryRequest { public string language=&quot;en&quot;; // Add properties for whatever information you want sent by clients // in their broadcast messages that servers will consume. } public class DiscoveryResponse { enum GameMode {PvP, PvE}; // you probably want uri so clients know how to connect to the server public Uri uri; public GameMode GameMode; public int TotalPlayers; public int HostPlayerName; // Add properties for whatever information you want the server to return to // clients for them to display or consume for establishing a connection. }  The custom NetworkDiscovery class contains the overrides for handling the messages above. You may want to refer to the NetworkDiscovery.cs script in the Components/Discovery folder to see how these should be implemented. public class NewNetworkDiscovery: NetworkDiscoveryBase&lt;DiscoveryRequest, DiscoveryResponse&gt; { #region Server protected override void ProcessClientRequest(DiscoveryRequest request, IPEndPoint endpoint) { base.ProcessClientRequest(request, endpoint); } protected override DiscoveryResponse ProcessRequest(DiscoveryRequest request, IPEndPoint endpoint) { // TODO: Create your response and return it return new DiscoveryResponse(); } #endregion #region Client protected override DiscoveryRequest GetRequest() { return new DiscoveryRequest(); } protected override void ProcessResponse(DiscoveryResponse response, IPEndPoint endpoint) { // TODO: a server replied, do something with the response such as invoking a unityevent } #endregion }  "},{"title":"Network Match Checker","type":0,"sectionRef":"#","url":"docs/components/network-match-checker","content":"Network Match Checker The Network Match Checker component controls the visibility of networked objects based on match id. Any object with this component on it will only be visible to other objects in the same match. This would be used to isolate players to their respective matches within a single game server instance. When you create a match, generate and store, in a List, for example, a new match id with System.Guid.NewGuid(); and assign the same match id to the Network Match Checker via GetComponent&lt;NetworkMatchChecker&gt;().matchId. Mirage's built-in Observers system will isolate SyncVar's and ClientRpc's on networked objects to only send updates to clients with the same match id.","keywords":""},{"title":"Network Log Settings","type":0,"sectionRef":"#","url":"docs/components/network-log-settings","content":"","keywords":""},{"title":"LogSettings Component (MonoBehaviour)​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#logsettings-component-monobehaviour","content":"The LogSettings component is a MonoBehaviour that you attach to a GameObject in your scene. Its primary role is to load the log level configurations defined in a LogSettingsSO asset into Mirage's LogFactory when your game starts or when the component is enabled. This ensures that your desired logging settings are applied at runtime. When you first add a LogSettings component to a GameObject, you will need to assign a LogSettingsSO asset to its &quot;Settings&quot; field. If no LogSettingsSO asset exists in your project, you will be prompted to create a new one directly from the Inspector.  note If a LogSettingsSO asset already exists in your project, the LogSettings component will automatically assign it to the &quot;Settings&quot; field when it is added to a game object. "},{"title":"LogSettingsSO (ScriptableObject)​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#logsettingsso-scriptableobject","content":"The LogSettingsSO is a ScriptableObject asset that stores the specific log level settings for various loggers within your project. Each logger corresponds to a specific class or namespace in your code. When you first set up a new LogSettingsSO asset, the list of loggers may be empty or incomplete. Running your game will cause Mirage scripts to register their respective loggers with the LogFactory, populating this list so their logging levels can be changed. "},{"title":"Configuring Log Levels in Unity Editor​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#configuring-log-levels-in-unity-editor","content":"You can configure the log levels for various Mirage components and your custom code directly within the Unity Editor. There are two primary ways to access these settings: "},{"title":"Project Settings​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#project-settings","content":"The most common way to manage log settings is through Unity's Project Settings. Navigate to Edit &gt; Project Settings, and then select Mirage &gt; Logging from the left-hand menu. Here, you can assign your LogSettingsSO asset. Once assigned, you will see a detailed interface that allows you to: Set All: Change the log level for all listed loggers at once.Filter by Level: Filter the displayed loggers by their current log level.Individual Logger Settings: Adjust the log level for each specific logger (e.g., Mirage.NetworkServer, Mirage.Client).Namespaces: Loggers are grouped by their namespace, allowing for easier navigation.Find All Type Using Logger: This button will scan your project for types that use Mirage's LogFactory.GetLogger() method and add them to the list, ensuring you can control their log levels.  "},{"title":"Mirage Log Level Window​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#mirage-log-level-window","content":"Alternatively, you can access the log settings through a dedicated window. Go to Window &gt; Analysis &gt; Mirage Log Levels. This window provides the same functionality as the Project Settings interface for managing your log levels.  "},{"title":"Customizing Log Output with MirageLogHandler​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#customizing-log-output-with-mirageloghandler","content":"Mirage provides a custom log handler, MirageLogHandler, which allows you to enhance your log messages with additional information like time prefixes and colored labels. This can be particularly useful for debugging and quickly identifying log entries from different parts of your application. "},{"title":"Setting a Custom Log Handler​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#setting-a-custom-log-handler","content":"You can set MirageLogHandler as the default log handler for all Mirage loggers using the LogFactory.ReplaceLogHandler() method. This is typically done early in your application's lifecycle, for example, in an Awake() method of a MonoBehaviour or a static constructor. Here's an example of how to set MirageLogHandler with default settings: using Mirage.Logging; using UnityEngine; public class CustomLogSetup : MonoBehaviour { void Awake() { // Create default settings for MirageLogHandler var settings = new MirageLogHandler.Settings( timePrefix: MirageLogHandler.TimePrefix.DateTimeMilliSeconds, coloredLabel: true, label: true ); // Replace the default log handler with MirageLogHandler // This will apply to all existing and future loggers LogFactory.ReplaceLogHandler((loggerName) =&gt; new MirageLogHandler(settings, loggerName)); } }  "},{"title":"MirageLogHandler Settings​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#mirageloghandler-settings","content":"The MirageLogHandler.Settings class allows you to configure various aspects of the custom log output: TimePrefix: Determines if and how a timestamp is added to log messages. Options include None, FrameCount, UnscaledTime, DateTimeMilliSeconds, and DateTimeSeconds.ColoredLabel: If true, the label (logger name) will be colored based on a hash of the logger's full name, making it easier to distinguish logs from different sources.Label: If true, a label (the logger's name) will be prepended to the log message.ColorSeed: An integer used to seed the color generation for ColoredLabel. Changing this can alter the colors assigned to loggers.ColorSaturation: Controls the saturation of the generated colors.ColorValue: Controls the brightness (value) of the generated colors. You can customize these settings when creating an instance of MirageLogHandler.Settings to tailor the log output to your preferences. "},{"title":"Using LogFactory in Your Code​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#using-logfactory-in-your-code","content":"Mirage's logging system is designed to be easily integrated into your own game code, allowing you to leverage the same granular control over logging that Mirage's internal components use. You obtain an ILogger instance for your class or module using the LogFactory, and then use this logger to output messages. "},{"title":"Obtaining an ILogger​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#obtaining-an-ilogger","content":"To get an ILogger for your class, you typically declare a static readonly field at the top of your class. LogFactory.GetLogger&lt;T&gt;() (or LogFactory.GetLogger(&quot;YourCustomLoggerName&quot;)) will always return the same ILogger instance for a given logger name, ensuring that any modifications to its settings (e.g., filterLogType) will apply consistently across your application. Here's how: using Mirage.Logging; // Make sure to include this namespace using UnityEngine; public class MyGameManager : MonoBehaviour { // Obtain a logger for this class. // The LogFactory will automatically manage its log level based on your LogSettingsSO. private static readonly ILogger logger = LogFactory.GetLogger&lt;MyGameManager&gt;(); void Start() { // Example usage of the logger logger.Log(&quot;MyGameManager started!&quot;); logger.LogWarning(&quot;Something might be wrong here.&quot;); logger.LogError(&quot;Critical error occurred!&quot;); // You can also check if a log type is enabled before logging to avoid unnecessary string formatting if (logger.LogEnabled()) { logger.Log($&quot;Current time: {Time.time}&quot;); } } }  "},{"title":"Benefits​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#benefits","content":"By using LogFactory.GetLogger(): Centralized Control: All log messages from your code can be controlled via the LogSettingsSO asset in the Unity Editor, just like Mirage's internal logs.Consistency: Ensures a consistent logging approach across your entire project.Performance: You can check logger.LogEnabled() (or WarnEnabled(), ErrorEnabled()) before constructing complex log messages, preventing unnecessary string allocations when the log level is filtered out. "},{"title":"Issues​","type":1,"pageTitle":"Network Log Settings","url":"docs/components/network-log-settings#issues","content":"Mirrors Logging API is currently a work in progress. If there is a bug or a feature you want to be added please make an issue here. "},{"title":"Network Ping Display","type":0,"sectionRef":"#","url":"docs/components/network-ping-display","content":"Network Ping Display Network Ping Display shows the ping time for clients using a UI Text component. The ping time is the moving average of the (RTT) Round-trip delay time. RTT is retrieved from Client.World.Time.Rtt. See Clock Synchronization for more info.","keywords":""},{"title":"Network Proximity Checker","type":0,"sectionRef":"#","url":"docs/components/network-proximity-checker","content":"Network Proximity Checker The Network Proximity Checker component controls the visibility of game objects for network clients, based on proximity to players. Vis Range Define the range that the game object should be visible to observers.Vis Update Interval Define how often (in seconds) the game object should check for observers entering its visible range.Force Hidden Tick this checkbox to hide this object from all players. With the Network Proximity Checker, a game running on a client doesn’t have information about game objects that are not visible. This has two main benefits: it reduces the amount of data sent across the network, and it makes your game more secure against hacking. This component relies on physics to calculate visibility, so observer game objects must also have a collider component on them. A game object with a Network Proximity Checker component must also have a Network Identity component. When you create a Network Proximity Checker component on a game object, Mirage also creates a Network Identity component on that game object if it does not already have one. Scene objects with a Network Proximity Checker component are disabled when they're out of range, and spawned objects are destroyed when they're out of range.","keywords":""},{"title":"Network Scene Manager","type":0,"sectionRef":"#","url":"docs/components/network-scene-manager","content":"","keywords":""},{"title":"How does it work​","type":1,"pageTitle":"Network Scene Manager","url":"docs/components/network-scene-manager#how-does-it-work","content":"When the NetworkServer starts it assumes the initial scene is the one you plan on running the network on. If this is not correct you can either change scenes before starting the network or after. The order on the server will likely only matter to you if you are running in Host mode. Once a NetworkClient connects and passes authentication the NetworkServer will send a message notifying them of the currently active scene and any additive scenes they should load. Once that task is complete then the server will start spawning network objects on the NetworkClient. "},{"title":"How do I change scenes​","type":1,"pageTitle":"Network Scene Manager","url":"docs/components/network-scene-manager#how-do-i-change-scenes","content":"If the scene change involves network objects then it is strongly recommended to make any scene changes via the NetworkSceneManager. Doing so via Unity's SceneManager directly may function but give undesired results with network objects. To do a network scene change you initiate the process via the server NetworkSceneManager via: // For normal scene changes sceneManager.ServerLoadSceneNormal(&quot;Assets/GameScene.unity&quot;); // For additive scene loading sceneManager.ServerLoadSceneAdditively(&quot;Assets/AdditiveScene.unity&quot;, players); // For additive scene unloading sceneManager.ServerUnloadSceneAdditively(scene, players);  note You don't have to provide the full scene path when initiating a scene change. But the 'NetworkSceneName' will be saved as the full path. "},{"title":"Scene Visibility Checkers","type":0,"sectionRef":"#","url":"docs/components/network-scene-checker","content":"","keywords":""},{"title":"Overview​","type":1,"pageTitle":"Scene Visibility Checkers","url":"docs/components/network-scene-checker#overview","content":"Both NetworkSceneChecker and SceneVisibilityChecker control the visibility of game objects for network clients based on which scene they're in. This is particularly useful when the server has multiple additive sub-scenes loaded and needs to isolate networked objects to their respective sub-scenes. By using these checkers, a game running on a client doesn’t receive information about game objects that are not visible. This has two main benefits: it reduces the amount of data sent across the network, and it makes your game more secure against hacking. A game object with either of these components must also have a NetworkIdentity component. When you add one of these components to a game object, Mirage also adds a NetworkIdentity component on that game object if it does not already have one. "},{"title":"SceneVisibilityChecker (Recommended)​","type":1,"pageTitle":"Scene Visibility Checkers","url":"docs/components/network-scene-checker#scenevisibilitychecker-recommended","content":"SceneVisibilityChecker is the recommended component for managing object visibility based on scenes. Unlike NetworkSceneChecker, it does not perform per-frame checks, making it more efficient. To use SceneVisibilityChecker, you should explicitly call its MoveToScene(scene) method when an object changes scenes. This method handles updating observer lists efficiently. "},{"title":"NetworkSceneChecker (Avoid)​","type":1,"pageTitle":"Scene Visibility Checkers","url":"docs/components/network-scene-checker#networkscenechecker-avoid","content":"danger NetworkSceneChecker is inefficient and should generally be avoided. It checks the scene of objects every frame, which can lead to performance issues. The NetworkSceneChecker component controls the visibility of game objects for network clients, based on which scene they're in.  Force HiddenTick this checkbox to hide this object from all players. Scene objects with a NetworkSceneChecker component are disabled when they're not in the same scene, and spawned objects are destroyed when they're not in the same scene. "},{"title":"How to Use SceneVisibilityChecker with Additive Scenes​","type":1,"pageTitle":"Scene Visibility Checkers","url":"docs/components/network-scene-checker#how-to-use-scenevisibilitychecker-with-additive-scenes","content":"In Mirage, the Server and connected Clients are always on the same main scene, however, the server and clients can have various combinations of smaller sub-scenes loaded additively. The server may load all sub-scenes at start, or it may dynamically load and unload sub-scenes where players or other activity is going on as needed. All character objects are always first spawned in the main scene, which may or may not have visual content, networked objects, etc. With SceneVisibilityChecker attached to all networked objects, whenever the character object is moved to a sub-scene (from the main or another sub-scene) using MoveToScene, the observer's lists for objects in both the new scene and the prior scene are updated accordingly. Loading the sub-scene(s) on the server: SceneManager.LoadSceneAsync(subScene, LoadSceneMode.Additive);  Sending a SceneMessage to the client to load a sub-scene additively: SceneMessage msg = new SceneMessage { sceneName = subScene, sceneOperation = SceneOperation.LoadAdditive }; Owner.Send(msg);  Moving the character object to the sub-scene using SceneVisibilityChecker.MoveToScene: // Get the SceneVisibilityChecker component SceneVisibilityChecker sceneChecker = player.GetComponent&lt;SceneVisibilityChecker&gt;(); if (sceneChecker != null) { // Position the character object in world space first (if needed) // This assumes it has a NetworkTransform component that will update clients player.transform.position = new Vector3(100, 1, 100); // Then move the character object to the subscene using the checker's method sceneChecker.MoveToScene(subScene); }  Optionally you can send another SceneMessage to the client with SceneOperation.UnloadAdditive to remove any previous additive scene the client no longer needs. This would apply to a game that has levels after a level change. A short delay may be necessary before removal to allow the client to get fully synced. Depending on the complexity of your game, you may find it helpful when switching a player between sub-scenes to move the character object to the main scene first, yield 100 ms, re-position it, and finally move it to the new sub-scene. "},{"title":"Network Transform","type":0,"sectionRef":"#","url":"docs/components/network-transform","content":"Network Transform danger NetworkTransform is not optimized and should not be used in production. It is recommended to use NetworkPositionSync instead. The Network Transform component synchronizes the position, rotation, and scale of networked game objects across the network. A game object with a Network Transform component must also have a Network Identity component. When you add a Network Transform component to a game object, Mirage also adds a Network Identity component on that game object if it does not already have one. By default, Network Transform is server-authoritative unless you check the box for Client Authority. Client Authority applies to character objects as well as non-character objects that have been specifically assigned to a client but only for this component. With this enabled, position changes are sent from the client to the server. Under Sensitivity, you can set the minimum thresholds of change to the transform values in order for network messages to be generated. This helps minimize network &quot;noise&quot; for minor twitch and jitter. Sync Mode and Sync Interval are controlled by the NetworkBehaviour's SyncSettings.","keywords":""},{"title":"Network Transform Child","type":0,"sectionRef":"#","url":"docs/components/network-transform-child","content":"Network Transform Child danger NetworkTransformChild is not optimized and should not be used in production. It is recommended to use NetworkPositionSync instead. The Network Transform Child component synchronizes the position and rotation of the child game object of a game object with a Network Transform component. You should use this component in situations where you need to synchronize an independently-moving child object with a Networked game object. To use the Network Transform Child component, attach it to the same parent game object as the Network Transform, and use the Target field to define which child game object to apply the component settings to. You can have multiple Network Transform Child components on one parent game object. Under Sensitivity, you can set the minimum thresholds of change to the transform values in order for network messages to be generated. This helps minimize network &quot;noise&quot; for minor twitch and jitter. Sync Mode and Sync Interval are controlled by the NetworkBehaviour's SyncSettings. This component takes authority into account, so local player game objects (which have local authority) synchronize their position from the client to the server, then out to other clients. Other game objects (with server authority) synchronize their position from the server to clients.","keywords":""},{"title":"Additive Scenes Example","type":0,"sectionRef":"#","url":"docs/examples/additive-scenes","content":"Additive Scenes Example IMPORTANT: Make sure you have a layer in project settings called Player for this example to work well. In Build Settings, remove all scenes and add all of the scenes from the Scenes folder in the following order: MainSceneSubScene Open the MainScene in the Editor and make sure the Sub Scenes list in the Network Manager component on the Network scene object contains the SubScene scene. This is already set-up by default, but if the MainScene was opened and saved before putting the scenes in the Build Settings list, the Sub Scenes list may be cleared accidentally. File -&gt; Build and Run Start up to 3 built instances: These will all be client players. Press Play in the Editor and click Host (Server + Client) in the HUD This will be the host and the 1st player of up to 4. You can also use Server Only if you prefer. Click Client in the built instances. WASDQE keys to move &amp; turn your player capsule.There are objects in the corners of the scene hidden by Proximity Checkers.The big area in the middle is where the sub-scene will be loaded when you get near the shelter.There are also networked objects inside the sub-scene, also with Proximity Checkers.Since sub-scenes are only loaded for individual clients, other clients that are outside the middle Zone won't see what those in the sub-scene can see.If you play a built instance as Host or Server and play as a client in the editor, you'll see the sub-scene content load and unload in the hierarchy as you move in and out of the middle Zone.","keywords":""},{"title":"Basic","type":0,"sectionRef":"#","url":"docs/examples/basic","content":"Basic General description of Basic example.","keywords":""},{"title":"Samples Overview","type":0,"sectionRef":"#","url":"docs/examples/","content":"","keywords":""},{"title":"Import samples​","type":1,"pageTitle":"Samples Overview","url":"docs/examples/#import-samples","content":"Sample can be imported using the Unity Package manager. They can be found inside the Samples Dropdown.  "},{"title":"ChangeScene","type":0,"sectionRef":"#","url":"docs/examples/change-scene","content":"ChangeScene","keywords":""},{"title":"Ready Check and Lobby Ready","type":0,"sectionRef":"#","url":"docs/components/ready-check","content":"","keywords":""},{"title":"Setup​","type":1,"pageTitle":"Ready Check and Lobby Ready","url":"docs/components/ready-check#setup","content":"Attach the LobbyReady component to your network manager or other non-networked object.Attach the ReadyCheck component to your player's lobby object.Ensure the ReadyCheck component is configured to synchronize its IsReady state from the owner client to the server, and from the server to all observers. This is typically handled by the SyncVar attributes on the IsReady field within the ReadyCheck script, which ensures the value is set on the owner client and reset on the server when LobbyReady.SetAllClientsNotReady() is called. "},{"title":"Usage​","type":1,"pageTitle":"Ready Check and Lobby Ready","url":"docs/components/ready-check#usage","content":"Setting Player Ready​ To set a player as ready, you can simply update the IsReady field of their ReadyCheck component to true. This can be done either manually through code, or through user input such as a &quot;Ready&quot; button. Mirage will then sync this change to server and other clients. For example: readyCheck.SetReady(true);  Reacting to Ready changes​ When the IsReady field of a player's ReadyCheck component is changed, the OnReadyChanged event is invoked on all clients to reflect the new value. You can subscribe to this event and perform actions based on the player's ready state. For example, you can update UI elements to show the player's current ready status: public class ReadyUI : MonoBehaviour { public ReadyCheck ReadyCheck; public Image Image; public void Start() { ReadyCheck.OnReadyChanged += OnReadyChanged; // invoke right away to set the current value OnReadyChanged(ReadyCheck.IsReady); } private void OnReadyChanged(bool ready) { Image.color = ready ? Color.green : Color.red; } }  Sending Messages to Ready Players​ To send a message to all players that are ready, you can use the LobbyReady.SendToReady function. Here's an example: [NetworkMessage] // Make sure to regieter message on client public struct MyMessage { public string message; } public class LobbyController : MonoBehaviour { public LobbyReady LobbyReady; public void SendToReady() { var myMessage = new MyMessage { message = &quot;Hello, world!&quot; }; // Send message to ready players LobbyReady.SendToReady(myMessage); } }  You can also send messages to not ready players by setting the sendToReady parameter to false. Note that this function only sends messages to players that have ReadyCheck attached to their character and are synced with the server. public void SendToNotReady() { var myMessage = new MyMessage { message = &quot;Hello, world!&quot; }; // Send message to ready players LobbyReady.SendToReady(myMessage, sendToReady: false); }  Resetting Ready​ Resetting Ready State for All Players You can reset the IsReady field for all players by calling LobbyReady.SetAllClientsNotReady(). Here's an example: public void ClearReady() { LobbyReady.SetAllClientsNotReady(); }  This will set the IsReady field to false for all ReadyCheck on the server, the values will then be synced to client. "},{"title":"Chat","type":0,"sectionRef":"#","url":"docs/examples/chat","content":"Chat","keywords":""},{"title":"Configurable NetworkManager Example","type":0,"sectionRef":"#","url":"docs/examples/configurable-network-manager","content":"","keywords":""},{"title":"Setup​","type":1,"pageTitle":"Configurable NetworkManager Example","url":"docs/examples/configurable-network-manager#setup","content":"Create a new GameObject and add the ConfigurableNetworkManager component to it.In the inspector, assign your UdpTransport and SteamTransport socket factory assets to the corresponding fields. "},{"title":"Key Components​","type":1,"pageTitle":"Configurable NetworkManager Example","url":"docs/examples/configurable-network-manager#key-components","content":""},{"title":"ConfigurableNetworkManager.cs​","type":1,"pageTitle":"Configurable NetworkManager Example","url":"docs/examples/configurable-network-manager#configurablenetworkmanagercs","content":"This script extends NetworkManager and provides a way to configure the transport layer before starting the server or client. It includes: Public Methods: StartHost, StartClient, and StartServer methods that take a SocketType enum as an argument. These methods can be easily hooked up to a UI to allow the player to choose their desired connection method.Transport Configuration: The ConfigureNetwork method is called before starting the network to set the SocketFactory and PeerConfig on the NetworkServer and NetworkClient. This is where the core logic for switching transports resides.Offline Mode: The example shows how to implement an offline mode by setting Server.Listening to false. This prevents the server from listening for incoming connections, effectively running it in a single-player mode. "},{"title":"SocketType Enum​","type":1,"pageTitle":"Configurable NetworkManager Example","url":"docs/examples/configurable-network-manager#sockettype-enum","content":"This simple enum defines the available transport options. In this example, it includes Offline, UDP, and Steam. "},{"title":"PeerConfig​","type":1,"pageTitle":"Configurable NetworkManager Example","url":"docs/examples/configurable-network-manager#peerconfig","content":"The PeerConfig object allows you to fine-tune the transport layer's behavior. Setting this is optional, but the default values might be too low for some projects. You can find more details about the available settings in the API reference for the Config class. "},{"title":"How to Use​","type":1,"pageTitle":"Configurable NetworkManager Example","url":"docs/examples/configurable-network-manager#how-to-use","content":"Create a UI: In your scene, create a UI with buttons that call the public methods on the ConfigurableNetworkManager script. For example, you could have a &quot;Start Host (UDP)&quot; button that calls StartHost(SocketType.UDP).Assign Transports: In the inspector for your ConfigurableNetworkManager GameObject, assign your UdpTransport and SteamTransport assets to the corresponding fields.Run the Game: When you run the game, you can use your UI to start the server, client, or host with the desired transport layer. This example provides a clean and reusable way to manage multiple transport layers in your game, giving you the flexibility to support different networking backends. "},{"title":"Multiple Additive Scenes Example","type":0,"sectionRef":"#","url":"docs/examples/multiple-additive-scenes","content":"","keywords":""},{"title":"MultiScene Network Manager​","type":1,"pageTitle":"Multiple Additive Scenes Example","url":"docs/examples/multiple-additive-scenes#multiscene-network-manager","content":"The MultiScene Network Manager is derived from the base Network Manager and is responsible for additively loading the sub-scene instances and placing the players in their respective sub-scene instances and initializing player SyncVars. It has a Game Scene field where the Game sub-scene is assigned, and an Instances field to set how many instances are loaded on the server. In this example, the sub-scene instances are additively loaded on the server with localPhysicsMode = LocalPhysicsMode.Physics3D. Physics sub-scenes do not auto-simulate, so each scene has a game object with a generic PhysicsSimulator script on it. This script does nothing on the client, only on the server. Clients only ever have one instance of the sub-scene additively loaded (without localPhysicsMode), while the server has them all. All networked objects have a NetworkSceneChecker component which is what isolates them to their specific sub-scene. "},{"title":"Playing in the Instances​","type":1,"pageTitle":"Multiple Additive Scenes Example","url":"docs/examples/multiple-additive-scenes#playing-in-the-instances","content":"File -&gt; Build and Run Start at least 3 built instances: These will all be client players. Press Play in the Editor and click Host (Server + Client) in the HUD - This will be the host and the 1st player. You can also use Server Only if you prefer. Click Client in the built instances. WASDQE keys to move &amp; turn your player capsule, Space to jump. Colliding with the small colored spheres scores points based on their color. Colliding with the larger tumblers sends them rolling around...they're server-side non-kinematic rigidbodies. Only scores for the players in the same sub-scene are shown at the top of the game window.  "},{"title":"Tanks","type":0,"sectionRef":"#","url":"docs/examples/tanks","content":"Tanks General description of Tanks example.","keywords":""},{"title":"Room","type":0,"sectionRef":"#","url":"docs/examples/room","content":"Room General description of Room example.","keywords":""},{"title":"Pong","type":0,"sectionRef":"#","url":"docs/examples/pong","content":"","keywords":""},{"title":"Setting the number of players​","type":1,"pageTitle":"Pong","url":"docs/examples/pong#setting-the-number-of-players","content":"First of all, let's have a look at the NetworkManager object in the main scene. When adding the NetworkManager component to a game object, a few default settings are already set (Don't destroy on Load, Run in Background, ...) For playing Pong the maximum number of players is 2, so the setting Network Info/Max connections will also be 2. As there are no other scenes (room, online or offline scene) in this sample the properties for Offline Scene andOnline Scene will stay empty. "},{"title":"Creating the player​","type":1,"pageTitle":"Pong","url":"docs/examples/pong#creating-the-player","content":"Furthermore, every player needs a racket to play with. Each player who joins the game will have his own controllable object, which represents him within the game. This game object is called PlayerObject. For spawning the PlayerObjecta prefab has to be created, containing at least a NetworkIdentity component withLocal Player Authority checked. The Local Player Authority allows the player to control and modify the game objects properties (e.g. for movement). The NetworkManager needs a reference to this prefab, which is located in Spawn Info/Player Prefab. To have the player movement synchronized over the network, the player prefab also contains a NetworkTransform.  "},{"title":"Player start position​","type":1,"pageTitle":"Pong","url":"docs/examples/pong#player-start-position","content":"The main scene contains 2 game objects with only a NetworkStartPosition component (game objects RacketSpawnLeft, RacketSpawnRight in the scene). These transforms will be automatically registered by the NetworkManager as spawning positions.  "},{"title":"Setting up the network​","type":1,"pageTitle":"Pong","url":"docs/examples/pong#setting-up-the-network","content":"A very convenient component for establishing/testing connections is the NetworkManagerHUD. It provides basic functionality for starting a game as a Client, Server, or Host (Client and Server at the same time). It requires the NetworkManager component.  "},{"title":"The ball of Pong​","type":1,"pageTitle":"Pong","url":"docs/examples/pong#the-ball-of-pong","content":"The ball is the main focus of Pong, as this is the object needed to score points. Its NetworkIdentity component has neither Server Only nor Local Player Authority checked, as it's moved by the server physics engine and can be influenced by the players. As with the PlayerObject the position is synchronized via NetworkTransform. When having multiple scenes, the ball can be spawned by the NetworkManager, but to keep this sample simple, it's placed directly within the main scene. "},{"title":"Overview","type":0,"sectionRef":"#","url":"docs/general/overview","content":"","keywords":""},{"title":"Socket Layer​","type":1,"pageTitle":"Overview","url":"docs/general/overview#socket-layer","content":"The Socket Layer is concerned about sending and receiving bytes. It does not know what it is sending. There are several socket factory implementations. The default socket factory in Mirage is UDPSocketFactory. If you want to implement a socket factory, create a class that extends Mirage.SocketLayer.SocketFactory. Its primary responsibility is to send and receive data. You will also need to create a class that represents a link between Mirage and the outside world by implementing Mirage.SocketLayer.ISocket. Reliability is handled on top of the factory by Mirage. "},{"title":"Message Layer​","type":1,"pageTitle":"Overview","url":"docs/general/overview#message-layer","content":"The message layer is concerned with sending and receiving messages. If you wish to use this functionality, you will need to have a Mirage.NetworkClient in the client and a Mirage.NetworkServer for the server. These classes provide events you can subscribe to for the life cycle of connections. A connection is an implementation of Mirage.INetworkPlayer, and can send and receive messages. "},{"title":"Object Layer​","type":1,"pageTitle":"Overview","url":"docs/general/overview#object-layer","content":"This layer is the highest level layer, the classes in this layer are concerned about synchronizing state between objects, as well as sending RPC calls. The client needs a Mirage.ClientObjectManager, the server needs a Mirage.ServerObjectManager. It will spawn and destroy objects and keep the objects in the client in sync with the objects in the server Clients and Servers Mirage supports 2 modes of operation which can work at the same time. "},{"title":"Host mode​","type":1,"pageTitle":"Overview","url":"docs/general/overview#host-mode","content":"In host mode, the server and client are running in the same application and share all networked objects. There is a direct in-memory channel of communication between the Mirage.NetworkServer and Mirage.NetworkClient. Since the objects are shared, there is no need to synchronize data. Note that the host mode bypasses the Transport Layer. "},{"title":"Client / Server mode​","type":1,"pageTitle":"Overview","url":"docs/general/overview#client--server-mode","content":"In this mode, the client is connected to a separate server, which is normally in another machine and reachable through the network. In client/server mode, the objects are duplicated in the server and client. For every networked object in the server, there is a corresponding object in the client with a matching network id. Note a server can be in both host mode as well as a server for other clients.  "},{"title":"Showcase","type":0,"sectionRef":"#","url":"docs/general/showcase","content":"Showcase Cubica | Showcase video | The multiplayer version of Block Story Alteros Online | Science-Fantasy Post Apo 3D MMORPG Block'Em! | Block'Em! is an action-filled block-building party game for 2 to 4 players! Hacker Field | Discord | HackerField is a multiplayer strategy tower defense in a futuristic scenario. Wolves | Wolves is a 3rd person action shooter based on MechAssault","keywords":""},{"title":"Getting Started","type":0,"sectionRef":"#","url":"docs/general/getting-started","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#installation","content":"Before everything, to install Mirage we need to add a new package manager repository to our project. To do this, we can go into Edit menu and then Project Settings. This will open a new Editor Window with multiple tabs. The one we are looking for is Package Manager, so click there. Once you click there, you should add a new Package Manager, so complete the fields as we show next and click apply Name: OpenUPM Url: https://package.openupm.com Scopes: - com.cysharp.unitask - com.openupm - com.miragenet   Once everything is ready, the next step is to close the Project Settings window, and jump into the Package Manager. So for this, we click on Window menu and then Package Manager. At this window, we will click on a small button that says (probably, at today date on Unity Editor 2021.13f) Packages: In Project, here we have to select My registries. Once, you've done that, we should be able to see Mirage and a few transport and also plugins in that list. After selecting, you can choose the version on the list below the name, otherwise, you can just click install on the bottom right part of the window and after a loading bar, that's it. You already have Mirage API on your code, congrats!  "},{"title":"Video Tutorials​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#video-tutorials","content":"Currently, there are no Mirage-specific videos. You can use Mirror's existing videos alongside our Mirror to Mirage Conversion guide. "},{"title":"Networking Set-Up​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#networking-set-up","content":"Right click in the Scene, select Network → NetworkManager. This will create a new GameObject with all the necessary networking components set up for you.Add the NetworkManagerHUD component to the game object. This provides an out-of-the-box canvas UI system that you can use and create your own UI. Assign the variables to properly set up the UI so everything will interact with network code. In the future, we will be providing out-of-the-box UI that auto sets up. See Using the NetworkManager. "},{"title":"Player Prefab​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#player-prefab","content":"Create a new prefab in your project.Add a NetworkIdentity component to the player prefabSet the playerPrefab field on the CharacterSpawner component to the player prefab. You can find this component on the GameObject you created in the first setup. See character objects for more information. "},{"title":"Player Movements​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#player-movements","content":"note Attach the correct type of movement script you intended to use. NetworkTransform will move the transform component without physics calculations. If you require physics to be also part of your normal movement calculations suggestion would be to attach a NetworkRigidBody component instead. caution Currently network transform and network rigid body components cannot handle various lag and drop of packets. Jitter or lag behind may occur. We are working to improve these components and have better lag and jitter control in the future. Add the correct movement component you require.Check box client authority under the component if you want the player to be able to fully control movement without the server controlling it. caution If client authority is checked then hacking can occur due to trusting clients and accepting their movement. if you do not want this do not check client authority under the component and you will require to send commands to the server to allow movement to occur. Update input and control scripts to reflect what type of control you want. See below for different examples. note If you require a camera to run on player prefab subscribe to Identity.OnStartLocalPlayer event to take control of the Main Camera in the scene for the player. You do not need a camera on every player prefab. For example, if client authority has been checked and you trust clients. Never trust clients though. using UnityEngine; using Mirage; public class Controls : NetworkBehaviour { void Update() { if (!IsLocalPlayer) { // exit from update if this is not the local player return; } // handle player input for movement } }  For example, if server authority is going to be used. using UnityEngine; using Mirage; public class Controls : NetworkBehaviour { void Update() { if (!IsLocalPlayer) { // exit from update if this is not the local player return; } // handle player input for movement // You would call this command after handling input or you can send inputs directly to // server and let server buffer inputs up and do movements based on the buffered inputs. MovePlayer(); } [ServerRpc] void MovePlayer() { // We are now firing off some kind of movement all done by server. } }  "},{"title":"Basic Player Game State​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#basic-player-game-state","content":"Make scripts that contain important data into NetworkBehaviours instead of MonoBehavioursYou can sync different types of data depending on what you need to sync. See State Synchronization. "},{"title":"Remote Actions​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#remote-actions","content":"Make scripts that perform important actions into NetworkBehaviours instead of MonoBehavioursUpdate functions that perform important player actions to have an attribute of [ServerRpc] See Remote Actions. "},{"title":"Non-player game objects​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#non-player-game-objects","content":"Fix non-player prefabs such as enemies: Add the NetworkIdentify componentAdd the correct component needed to sync movement as the state above with player movement.Once all objects have a network identity. Find ClientObjectManager under the NetworkManager game object in the scene and hit register prefabs.Update scripts with game state and actions "},{"title":"Spawners​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#spawners","content":"Potentially change spawner scripts to be NetworkBehavioursModify spawners to only run on the server (use IsServer property or the OnStartServer callback)Call ServerObjectManager.Spawn() for created game objects "},{"title":"Spawn positions for players​","type":1,"pageTitle":"Getting Started","url":"docs/general/getting-started#spawn-positions-for-players","content":"Add a new game object and place it at the player's start locationAdd this GameObject to the CharacterSpawner's Positions list. "},{"title":"Support","type":0,"sectionRef":"#","url":"docs/general/support","content":"","keywords":""},{"title":"Discord​","type":1,"pageTitle":"Support","url":"docs/general/support#discord","content":"You can find us on Discord. "},{"title":"GitHub​","type":1,"pageTitle":"Support","url":"docs/general/support#github","content":"You can create an issue on GitHubYou can also contribute with Pull Requests...see Contributing "},{"title":"Troubleshooting","type":0,"sectionRef":"#","url":"docs/general/troubleshooting","content":"","keywords":""},{"title":"No Writer found for X​","type":1,"pageTitle":"Troubleshooting","url":"docs/general/troubleshooting#no-writer-found-for-x","content":"Mirage normally generates readers and writers for any Data TypeIn order to do so, it needs to know what types you want to read or write. You are getting this error because Mirage did not know you wanted to read or write this type. Mirage scans your code looking for calls to Send, ReceiveHandler, Write or Read. It will also recognize SyncVars and parameters of Remote Calls. If it does not find one, it assumes you are not trying to serialize the type so it does not generate the reader and writer. For example, you might get this error with this code when trying to sync the SyncList. public struct MyCustomType { public int id; public string name; } class MyBehaviour : NetworkBehaviour { private readonly SyncList&lt;MyCustomType&gt; myList = new SyncList&lt;MyCustomType&gt;(); }  In this case, there is no direct invocation to send or receive. So Mirage does not know about it. There is a simple workaround: add an [NetworkMessage] attribute to your class or struct. [NetworkMessage] // Added attribute public struct MyCustomType { public int id; public string name; }  "},{"title":"Sockets","type":0,"sectionRef":"#","url":"docs/general/sockets","content":"","keywords":""},{"title":"Available sockets​","type":1,"pageTitle":"Sockets","url":"docs/general/sockets#available-sockets","content":"The table below shows a list of available sockets and their features. \tUDP (built-in)\tSteam (Steamworks.NET, Facepunch)\tWebsocketCCU\t1000+\t?\t? Protocol\tUDP\tUDP\tTCP Unreliable\t✅\t✅\t❌ Mobile\t✅\t❌\t✅ WebGL\t❌\t❌\t✅ CPU\tLOW\tLOW\t? NAT Punch\t❌\t✅\t❌ Encryption\t❌\t✅\t✅ IPv6\t✅\t?\t? Managed\t✅\t✅\t✅ Native\t✅\t❌\t❌ Based on\tNanoSockets (native), .NET (managed)\tSteam Game Networking Sockets\tSimpleWebTransport "},{"title":"Changing a socket​","type":1,"pageTitle":"Sockets","url":"docs/general/sockets#changing-a-socket","content":"To change a socket, follow the steps below: Install the desired socket. Instructions are available on each socket's repository.Add the socket's SocketFactory as a new component on the object where you have the other Mirage components.Assign a reference to this component in the Socket Factory field of NetworkServer and NetworkClient components.Check if the socket has any required additional steps.Done. Mirage should now be using the newly added socket. "},{"title":"Implementing new socket​","type":1,"pageTitle":"Sockets","url":"docs/general/sockets#implementing-new-socket","content":"To create a new socket, you have to implement two classes - one that implements the Mirage.SocketLayer.ISocketinterface, which will represent the low-level socket and one that extends the Mirage.SocketLayer.SocketFactoryclass, which will act as the MonoBehaviour component creating new instances of the low-level class. You can check out our built-in UDP socket implementation as an inspiration: Mirage.Sockets.Udp.UdpSocket andMirage.Sockets.Udp.UdpSocketFactory. "},{"title":"Attributes","type":0,"sectionRef":"#","url":"docs/guides/attributes","content":"","keywords":""},{"title":"RPC Attributes​","type":1,"pageTitle":"Attributes","url":"docs/guides/attributes#rpc-attributes","content":"Full details on RPC can be found on the Remote Actions page. Both Rpc attributes support setting the channel to Reliable or Unreliable. note When using abstract or virtual methods, the attributes need to be applied to the override methods too. ClientRpcAttribute The ClientRpcAttribute allows the server to use a Remote Procedure Call (RPC) to run a function on specific clients, with options to target the owner, all observers, or a specified player. See also: ClientRpc ServerRpcAttribute The ServerRpcAttribute is used when you want to call a function on the server from a client. Make sure to validate the input on the server. Note that you cannot call this attribute from the server itself. You can use this attribute as a wrapper around another function, allowing you to call it from the server as well. Additionally, you can return values from functions marked with this attribute. See also: ServerRpc "},{"title":"Block Methods Invokes​","type":1,"pageTitle":"Attributes","url":"docs/guides/attributes#block-methods-invokes","content":"These attributes can be added to methods to block them from being invoked in the wrong place. These attributes can only be used in NetworkBehaviour classes and when the object is spawned. If the object is not spawned, all the flags like IsServer will be false so will block the methods even if the server is running. By default, methods with these attributes will throw a MethodInvocationException if invoked improperly. However, you can add error = false to return instead of throwing an exception. note When a method returns early due to a blocked invocation, the method will return default values for the return value or out parameters. These attributes can be used for Unity game loop methods like Start, Update or OnCollisionEnter, as well as other implemented methods that need to be restricted to certain contexts. Available Attributes:​ ServerAttribute: Methods can only be invoked on the server.ClientAttribute: Methods can only be invoked on the client.HasAuthorityAttribute: Methods can only be invoked on the client when the player has authority of the object. See: AuthorityLocalPlayerAttribute: Methods can only be invoked on the client when the object is the local player. See: AuthorityNetworkMethodAttribute: Methods can only be invoked based on the flags set in the attribute. For example, NetworkFlags.Server | NetworkFlags.HasAuthority allows the method to be called on the server OR on the client with authority. Examples:​ [Server] void SpawnCoin() { // This method is only allowed to be invoked on the server. }  [NetworkMethod(NetworkFlags.Server | NetworkFlags.NotActive)] public void StartGame() { // This method will run on the server or in single-player mode. // It will only be blocked if the client is active. }  "},{"title":"About IDs","type":0,"sectionRef":"#","url":"docs/guides/about-ids","content":"","keywords":""},{"title":"NetId​","type":1,"pageTitle":"About IDs","url":"docs/guides/about-ids#netid","content":"Mirage uses uint for NetId. Every NetworkIdentity is assigned a NetId when it is being spawned. Mirage uses the ID when passing messages between client and server to tell which object is the recipient of the message. "},{"title":"Prefab Hash​","type":1,"pageTitle":"About IDs","url":"docs/guides/about-ids#prefab-hash","content":"The prefab hash is used to uniquely identify each prefab so that it can be spawned over the network. Mirage will create the prefab hash by taking a 32-bit hash of the Asset path. The path is found using AssetDatabase.GetAssetPath "},{"title":"Scene ID​","type":1,"pageTitle":"About IDs","url":"docs/guides/about-ids#scene-id","content":"Mirage uses ulong for Scene IDss. Every game object with a NetworkIdentity in the scene (hierarchy) is assigned a scene ID in OnPostProcessScene. Mirage needs that to distinguish scene objects from each other because Unity has no unique ID for different game objects in the scene. "},{"title":"Authenticator Settings","type":0,"sectionRef":"#","url":"docs/guides/authentication/authenticator-settings","content":"","keywords":""},{"title":"Server Side​","type":1,"pageTitle":"Authenticator Settings","url":"docs/guides/authentication/authenticator-settings#server-side","content":"The list of authenticators on the server represents the options available for client authentication. Clients can choose any of these authenticators to become authenticated. To determine which authenticator the player used, you can check the NetworkPlayer.Authentication.Authenticator property. "},{"title":"Client Side​","type":1,"pageTitle":"Authenticator Settings","url":"docs/guides/authentication/authenticator-settings#client-side","content":"On the client side, you need to use the SendAuthentication method provided by the authenticator to send a message to the server. This is necessary because most authenticators require additional information, such as player login details. The SendAuthentication method ensures that the authentication message is properly wrapped and sent to the server. It should be used instead of directly calling player.Send, as the authenticator message is wrapped in an internal AuthMessage message. However, it's important to note that authenticators typically should not call the SendAuthentication method automatically themselves. Instead, you can create an additional component, such as the CreateSession component for the SessionIdAuthenticator class, to handle the automatic invocation of SendAuthentication. The CreateSession component can be responsible for initiating the authentication process and automatically calling the SendAuthentication method when needed. This allows the authenticator to automatically use the session token provided by the server for seamless reconnection. Keep in mind that it is recommended to use only one authenticator with this automatic behavior, as the server processes only one authentication per player. By separating the responsibility of calling SendAuthentication to an extra component, you can have more flexibility and control over the authentication flow, while ensuring that authenticators focus on their core functionality. "},{"title":"Basic Authenticator","type":0,"sectionRef":"#","url":"docs/guides/authentication/basic-authenticator","content":"Basic Authenticator Mirage includes a Basic Authenticator in the Mirage/Authenticators folder, which provides a simple authentication mechanism using a server code. To use the Basic Authenticator, follow the setup steps described in the Authenticator Settings page. After performing these steps, the inspector should look like this: You can authenticate with the server by calling the SendCode method provided by the authenticator. This method allows you to send a server code to the server for authentication. public void SendCode(NetworkClient client, string serverCode = null) If the serverCode parameter is null, the method will use the value specified in the public ServerCode field of the Basic Authenticator component.","keywords":""},{"title":"Authentication","type":0,"sectionRef":"#","url":"docs/guides/authentication/","content":"","keywords":""},{"title":"Built-in Authenticators​","type":1,"pageTitle":"Authentication","url":"docs/guides/authentication/#built-in-authenticators","content":"Mirage provides two built-in authenticators that you can use out of the box. These authenticators offer a convenient way to handle common authentication scenarios: Basic Authenticator: This authenticator uses a simple password to authenticate users. It is useful when you want to restrict access to your game to only those who know the password. Session ID Authenticator: This authenticator leverages a session token provided by the server to automatically reconnect clients. It is suitable for cases where you want to enable seamless reconnection for players. For instructions on how to set up and use these built-in authenticators, please refer to their respective documentation pages. "},{"title":"Encryption Notice​","type":1,"pageTitle":"Authentication","url":"docs/guides/authentication/#encryption-notice","content":"By default, Mirage does not provide encryption. However, if you want to secure your authentication process, you can use the WebSocket or Relay transports, which support encryption. Please refer to the transport documentation for more information. Note: The default UDP transport does not support encryption. "},{"title":"Authenticator Setup​","type":1,"pageTitle":"Authentication","url":"docs/guides/authentication/#authenticator-setup","content":"To set up an authenticator, please refer to the Authenticator Settings page, which provides detailed instructions on configuring the authenticator for your game. Now that you have a comprehensive understanding of authentication methods, you can choose the one that best fits your requirements. If none of the built-in methods suit your needs, you can create a custom authenticator following the guidelines provided in the Custom Authenticator page. If you develop a robust and reusable authenticator, consider sharing it with the Mirage community or contributing it to the Mirage project. "},{"title":"Custom Authenticator","type":0,"sectionRef":"#","url":"docs/guides/authentication/custom-authenticator","content":"Custom Authenticator To create a custom Authenticator, follow these steps: Inherit from the NetworkAuthenticatorBase&lt;T&gt; class.Create a network message that your authenticator will receive from the client. Clients should use the SendAuthentication(NetworkClient client, T msg) method provided by the authenticator to correctly send the authentication message. Implement your authenticator to process this message and return a success or failure result.Optionally, your authenticator can return additional data that you want to set on INetworkPlayer.Authentication.Use the GetData&lt;T&gt;() method to retrieve the custom data on the server-side. Step 1: Inherit from NetworkAuthenticatorBase&lt;T&gt; public class CustomAuthenticator : NetworkAuthenticator&lt;CustomAuthMessage&gt; { Step 2: Create a Network Message [NetworkMessage] public struct CustomAuthMessage { // token used to validate user public string token; } Clients should use the SendAuthentication(NetworkClient client, T msg) method to correctly send the authentication message. note Using player.Send directly will not work because the authenticator message is wrapped in an internal AuthMessage message. Step 3: Implement the Authenticator public class CustomAuthenticator : NetworkAuthenticator&lt;CustomAuthMessage&gt; { protected override async UniTask&lt;AuthenticationResult&gt; AuthenticateAsync(INetworkPlayer player, CustomAuthMessage msg, CancellationToken cancellationToken) { // check user sent token, if they didn't then return fail if (string.IsNullOrEmpty(msg.token)) return AuthenticationResult.CreateFail(&quot;No token&quot;); // send token to api to validate it var result = await ValidateToken(msg.token); // return success or fail if (result.Success) { // create auth data, this will be set on NetworkPlayer.Authentication.Data var data = new CustomAuthenticationData { UserId = result.UserId, Username = result.UserName, }; return AuthenticationResult.CreateSuccess(this, data); } else { return AuthenticationResult.CreateFail(&quot;Validate failed&quot;); } } private static async UniTask&lt;ValidateResultJson&gt; ValidateToken(string token) { var sendJson = JsonUtility.ToJson(new ValidateTokenJson { token = token }); // make sure to send token over https #if UNITY_2022_3_OR_NEWER var webRequest = UnityWebRequest.PostWwwForm(&quot;https://example.com/api/validate&quot;, sendJson); #else var webRequest = UnityWebRequest.Post(&quot;https://example.com/api/validate&quot;, sendJson); #endif // wait for result var op = await webRequest.SendWebRequest(); var text = op.downloadHandler.text; var result = JsonUtility.FromJson&lt;ValidateResultJson&gt;(text); return result; } private struct ValidateTokenJson { public string token; } private struct ValidateResultJson { public bool Success; public string UserId; public string UserName; } } Step 4: Return Additional Data (Optional) public class CustomAuthenticationData { public string UserId; public string Username; } Step 5: Retrieve Custom Data public string GetPlayerName(INetworkPlayer player) { // get the data and cast it to customAuth type var data = player.Authentication.GetData&lt;CustomAuthenticationData&gt;(); // use the data to get the value you want from it return data.Username; } ","keywords":""},{"title":"Best Practices","type":0,"sectionRef":"#","url":"docs/guides/best-practices","content":"","keywords":""},{"title":"Custom Messages​","type":1,"pageTitle":"Best Practices","url":"docs/guides/best-practices#custom-messages","content":"If you send custom message regularly then the message should be a struct so that there is no GC/allocations. struct CreateVisualEffect { public Vector3 position; public Guid prefabId; }  "},{"title":"Session Id Authenticator","type":0,"sectionRef":"#","url":"docs/guides/authentication/session-id","content":"","keywords":""},{"title":"CreateSession component​","type":1,"pageTitle":"Session Id Authenticator","url":"docs/guides/authentication/session-id#createsession-component","content":"CreateSession will automatically send a message to the server if the client has valid session id when they connect.  "},{"title":"Network Authority","type":0,"sectionRef":"#","url":"docs/guides/authority","content":"","keywords":""},{"title":"Server Authority​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#server-authority","content":"Server authority means that the server has control of an object. The server has authority over an object by default. This means the server would manage and control all of the collectible items, moving platforms, NPCs, and any other networked objects that aren't the player. "},{"title":"Client Authority​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#client-authority","content":"Client authority means that the client has control of an object. When a client has authority over an object it means that they can call ServerRpc and that the object will automatically be destroyed when the client disconnects. Even if a client has authority over an object the server still controls SyncVar and controls other serialization features. A component will need to use a ServerRpc to update the state on the server for it to sync to other clients. "},{"title":"How to give authority​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#how-to-give-authority","content":"By default, the server has authority over all objects. The server can give authority to objects that a client needs to control, like the character object. If you spawn a character object using ServerObjectManager.AddCharacter then it will automatically be given authority. "},{"title":"Using NetworkServer.Spawn​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#using-networkserverspawn","content":"You can give authority to a client when an object is spawned. This is done by passing in the connection to the spawn message GameObject go = Instantiate(prefab); ServerObjectManager.Spawn(go, owner);  "},{"title":"Using identity.AssignClientAuthority​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#using-identityassignclientauthority","content":"You can give authority to a client at any time using AssignClientAuthority. This can be done by calling AssignClientAuthority on the object you want to give authority too Identity.AssignClientAuthority(conn);  You may want to do this when a player picks up an item // Command on character object [ServerRpc] void PickupItem(NetworkIdentity item) { item.AssignClientAuthority(connectionToClient); }  "},{"title":"How to remove authority​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#how-to-remove-authority","content":"You can use Identity.RemoveClientAuthority to remove client authority from an object. Identity.RemoveClientAuthority();  Authority can't be removed from the character object. Instead, you will have to replace the character object using NetworkServer.ReplaceCharacter. "},{"title":"On Authority​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#on-authority","content":"When authority is given to or removed from an object a message will be sent to that client to notify them. This will cause the OnAuthorityChanged(bool) functions to be called. "},{"title":"On Destroy​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#on-destroy","content":"If the client has authority, then OnAuthorityChanged(false) will be called on the object when it is destroyed. "},{"title":"Check Authority​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#check-authority","content":""},{"title":"Client Side​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#client-side","content":"The Identity.HasAuthority property can be used to check if the local player has authority over an object. "},{"title":"Server Side​","type":1,"pageTitle":"Network Authority","url":"docs/guides/authority#server-side","content":"The Identity.Owner property can be used to check to see which client has authority over an object. If it is null then the server has authority. "},{"title":"Bit Packing","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/","content":"","keywords":""},{"title":"Bit Packing in Mirage​","type":1,"pageTitle":"Bit Packing","url":"docs/guides/bit-packing/#bit-packing-in-mirage","content":"Mirage has many attributes that can be applied to SyncVars and Rpc parameters BitCount Sets the number of bits on an integerBitCountFromRange Sets the number of bits from a given range, rounding up.ZigZagEncode Encodes a value using ZigZag Encoding. Only useable with BitCount or VarIntBlocksVarInt Packs int to different sizes based on their size. Allows for 3 configurable size rangesVarIntBlocks Packs int to different sizes based on their size. Uses block size so can be used over a large range of valuesFloatPack Compresses a float valueVectorPack Compresses a Vector valueQuaternionPack Compresses a Quaternion value "},{"title":"Bit Count From Range","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/bit-count-from-range","content":"","keywords":""},{"title":"Use cases​","type":1,"pageTitle":"Bit Count From Range","url":"docs/guides/bit-packing/bit-count-from-range#use-cases","content":"A Value with a minimum and maximum value "},{"title":"Supported Types​","type":1,"pageTitle":"Bit Count From Range","url":"docs/guides/bit-packing/bit-count-from-range#supported-types","content":"ByteShortUShortIntUintLongULongEnum "},{"title":"Example 1​","type":1,"pageTitle":"Bit Count From Range","url":"docs/guides/bit-packing/bit-count-from-range#example-1","content":"A modifier that can add to a character value to increase or decrease it public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, BitCountFromRange(-100, 100)] public int modifier; }  Range = 200 so bit count is 8, causing the real range to be -100 to 155 modifier = 57 will serialize to 1001_1101 modifier = -57 will serialize to 0010_1011 modifier = -110 (out of range) will serialize to 1111_0110 modifier = 130 will serialize to 1110_0110, even tho 130 is out of range there is enough range because bit count rounds up. modifier = 170 (out of range) will serialize to 0000_1110 "},{"title":"Example 2​","type":1,"pageTitle":"Bit Count From Range","url":"docs/guides/bit-packing/bit-count-from-range#example-2","content":"A Direction enum to say which way a model is facing public enum MyDirection { Backwards = -1, None = 0, Forwards = 1, } public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, BitCount(-1, 1)] public MyDirection direction; }  Range = 3 so bit count is 2, causing the real range to be -1 to 2 direction = -1 will serialize to 00 direction = 1 will serialize to 10 "},{"title":"Generated Code​","type":1,"pageTitle":"Bit Count From Range","url":"docs/guides/bit-packing/bit-count-from-range#generated-code","content":"Source: [SyncVar, BitCountFromRange(-100, 100)] public int myValue;  Generated: public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { ulong syncVarDirtyBits = base.SyncVarDirtyBits; bool result = base.SerializeSyncVars(writer, initialize); if (initialState) { writer.Write((ulong)(this.myValue - (-100)), 8); return true; } writer.Write(syncVarDirtyBits, 1); if ((syncVarDirtyBits &amp; 1UL) != 0UL) { writer.Write((ulong)(this.myValue - (-100)), 8); result = true; } return result; } public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { base.DeserializeSyncVars(reader, initialState); if (initialState) { this.myValue = reader.Read(8) + (-100); return; } ulong dirtyMask = reader.Read(1); if ((dirtyMask &amp; 1UL) != 0UL) { this.myValue = reader.Read(8) + (-100); } }  last updated for Mirage v101.8.0 "},{"title":"Bit Count","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/bit-count","content":"","keywords":""},{"title":"Use cases​","type":1,"pageTitle":"Bit Count","url":"docs/guides/bit-packing/bit-count#use-cases","content":"A Value with a maximum valueAn index in an array of known size eg array with 10 elements, the index can be sent as 4 bits A Random int hash where you only need to send 16 bits "},{"title":"Supported Types​","type":1,"pageTitle":"Bit Count","url":"docs/guides/bit-packing/bit-count#supported-types","content":"ByteShortUShortIntUintLongULongEnum "},{"title":"Example 1​","type":1,"pageTitle":"Bit Count","url":"docs/guides/bit-packing/bit-count#example-1","content":"Health which is between 0 and 100 public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, BitCount(7)] public int Health; }  BitCount = 7 so max value of Health is 127 health = 57 will serialize to 011_1001 health = -1 (out of range) will serialize to 111_1111 health = 130 (out of range) will serialize to 000_0010 "},{"title":"Example 2​","type":1,"pageTitle":"Bit Count","url":"docs/guides/bit-packing/bit-count#example-2","content":"Weapon index in a list of 6 weapons public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, BitCount(3)] public int WeaponIndex; }  BitCount = 3 so max value of Health is 7 WeaponIndex = 5 will serialize to 101 "},{"title":"Generated Code​","type":1,"pageTitle":"Bit Count","url":"docs/guides/bit-packing/bit-count#generated-code","content":"Source: [SyncVar, BitCount(7)] public int myValue;  Generated: public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { ulong syncVarDirtyBits = base.SyncVarDirtyBits; bool result = base.SerializeSyncVars(writer, initialize); if (initialState) { writer.Write((ulong)this.myValue, 7); return true; } writer.Write(syncVarDirtyBits, 1); if ((syncVarDirtyBits &amp; 1UL) != 0UL) { writer.Write((ulong)this.myValue, 7); result = true; } return result; } public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { base.DeserializeSyncVars(reader, initialState); if (initialState) { this.myValue = reader.Read(7); return; } ulong dirtyMask = reader.Read(1); if ((dirtyMask &amp; 1UL) != 0UL) { this.myValue = reader.Read(7); } }  Last updated for Mirage v101.8.0. "},{"title":"Float Pack","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/float-pack","content":"","keywords":""},{"title":"Use cases​","type":1,"pageTitle":"Float Pack","url":"docs/guides/bit-packing/float-pack#use-cases","content":"A Value with a maximum value "},{"title":"Supported Types​","type":1,"pageTitle":"Float Pack","url":"docs/guides/bit-packing/float-pack#supported-types","content":"Float "},{"title":"Example 1​","type":1,"pageTitle":"Float Pack","url":"docs/guides/bit-packing/float-pack#example-1","content":"Health which is between 0 and 100 public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, FloatPack(100f, 0.02f)] public int Health; }  Max = 100, resolution = 0.02f so bit count is 14 health = 57.2f will serialize to 01_0010_0100_1101 and deserialize to 57.197f health = -13.5f will serialize to 11_1011_1010_1110 and deserialize to -13.503f health = 120f will be clamped to 100f "},{"title":"Example 2​","type":1,"pageTitle":"Float Pack","url":"docs/guides/bit-packing/float-pack#example-2","content":"A Percent that where you only want to send 8 bits public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, FloatPack(1f, 8)] public int Percent; }  Max = 1f, bitCount = 8 so resolution will be 0.00787f "},{"title":"Generated Code​","type":1,"pageTitle":"Float Pack","url":"docs/guides/bit-packing/float-pack#generated-code","content":"Source: [SyncVar, FloatPack(100f, 0.02f)] public int myValue;  Generated:  private FloatPacker myValue__Packer = new FloatPacker(100f, 0.02f); public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { ulong syncVarDirtyBits = base.SyncVarDirtyBits; bool result = base.SerializeSyncVars(writer, initialize); if (initialState) { myValue__Packer.Pack(writer, this.myValue); return true; } writer.Write(syncVarDirtyBits, 1); if ((syncVarDirtyBits &amp; 1UL) != 0UL) { myValue__Packer.Pack(writer, this.myValue); result = true; } return result; } public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { base.DeserializeSyncVars(reader, initialState); if (initialState) { this.myValue = myValue__Packer.Unpack(reader); return; } ulong dirtyMask = reader.Read(1); if ((dirtyMask &amp; 1UL) != 0UL) { this.myValue = myValue__Packer.Unpack(reader); } }  last updated for Mirage v101.8.0 "},{"title":"Variable Sized Integer","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/var-int","content":"Variable Sized Integer Work In Progress This page is a work in progress","keywords":""},{"title":"Variable Sized Integer Blocks","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/var-int-blocks","content":"","keywords":""},{"title":"Supported Types​","type":1,"pageTitle":"Variable Sized Integer Blocks","url":"docs/guides/bit-packing/var-int-blocks#supported-types","content":"ByteShortUShortIntUintLongULongEnum "},{"title":"Example 1​","type":1,"pageTitle":"Variable Sized Integer Blocks","url":"docs/guides/bit-packing/var-int-blocks#example-1","content":"A modifier that can be added to a character value to increase or decrease it public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, VarIntBlocks(-100, 100)] public int modifier; }  Range = 200 so bit count is 8, causing the real range to be -100 to 155 modifier = 57 will serialize to 1001_1101 modifier = -57 will serialize to 0010_1011 modifier = -110 (out of range) will serialize to 1111_0110 modifier = 130 will serialize to 1110_0110, even tho 130 is out of range there is enough range because bit count rounds up. modifier = 170 (out of range) will serialize to 0000_1110 "},{"title":"Example 2​","type":1,"pageTitle":"Variable Sized Integer Blocks","url":"docs/guides/bit-packing/var-int-blocks#example-2","content":"A Direction enum to say which way a model is facing public enum MyDirection { Backwards = -1, None = 0, Forwards = 1, } public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, BitCount(-1, 1)] public MyDirection direction; }  Range = 3 so bit count is 2, causing the real range to be -1 to 2 direction = -1 will serialize to 00 direction = 1 will serialize to 10 "},{"title":"Generated Code​","type":1,"pageTitle":"Variable Sized Integer Blocks","url":"docs/guides/bit-packing/var-int-blocks#generated-code","content":"Source: [SyncVar, BitCountFromRange(-100, 100)] public int myValue;  Generated: public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { ulong syncVarDirtyBits = base.SyncVarDirtyBits; bool result = base.SerializeSyncVars(writer, initialize); if (initialState) { writer.Write((ulong)(this.myValue - (-100)), 8); return true; } writer.Write(syncVarDirtyBits, 1); if ((syncVarDirtyBits &amp; 1UL) != 0UL) { writer.Write((ulong)(this.myValue - (-100)), 8); result = true; } return result; } public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { base.DeserializeSyncVars(reader, initialState); if (initialState) { this.myValue = reader.Read(8) + (-100); return; } ulong dirtyMask = reader.Read(1); if ((dirtyMask &amp; 1UL) != 0UL) { this.myValue = reader.Read(8) + (-100); } }  last updated for Mirage v101.8.0 "},{"title":"Quaternion Pack","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/quaternion-pack","content":"","keywords":""},{"title":"Quaternion Rules​","type":1,"pageTitle":"Quaternion Pack","url":"docs/guides/bit-packing/quaternion-pack#quaternion-rules","content":"Quaternions can be packed using some of the mathematical rules they follow Quaternions should be normalized​ x^2 + y^2 + z^2 + w^2 = 1 Because of this we only need to send the smallest 3 values as we can calculate the largest one again on the other side. We also need to send the index to say which of the 4 elements was the largest largest = sqrt(1 - a^2 + b^2 + c^2) Positive and Negative Quaternions represent the same rotation​ Q(x,y,z,w) === Q(-x,-y,-z,-w) If the largest element is negative we would have to send its sign in order to calculate the correct rotation. However, because Q=-Q, if the largest element is negative we can just flip the sign of all 4 elements instead. Max of the second largest element​ The value of the 2nd largest element is when it is also equal to the largest so we have L^2 + L^2 = 1 From this, we can find the max value for the 2nd largest is L = +- 1 / sqrt(2) = +- ~0.707 This allows us to pack the smallest 3 elements in the range -0.707 to +0.707 instead of -1 to +1 Result​ Combining all this we can send each of the smallest 3 elements with 9 bits, and 2 bits for the index of the largest element. Which reduces the size of a Quaternion from 128 bits unpacked to only 29 bits. The precision of the smallest 3 can in increased or decreased to change the bit counts by multiples of 3. eg 10 bits per element will result in 32 bits total. "},{"title":"Supported Types​","type":1,"pageTitle":"Quaternion Pack","url":"docs/guides/bit-packing/quaternion-pack#supported-types","content":"Quaternion "},{"title":"Example 1​","type":1,"pageTitle":"Quaternion Pack","url":"docs/guides/bit-packing/quaternion-pack#example-1","content":"public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, QuaternionPack(9)] public Quaternion direction; }  "},{"title":"Generated Code​","type":1,"pageTitle":"Quaternion Pack","url":"docs/guides/bit-packing/quaternion-pack#generated-code","content":"Source: [SyncVar, QuaternionPack(9)] public int myValue;  Generated:  private QuaternionPacker myValue__Packer = new QuaternionPacker(9); public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { ulong syncVarDirtyBits = base.SyncVarDirtyBits; bool result = base.SerializeSyncVars(writer, initialize); if (initialState) { myValue__Packer.Pack(writer, this.myValue); return true; } writer.Write(syncVarDirtyBits, 1); if ((syncVarDirtyBits &amp; 1UL) != 0UL) { myValue__Packer.Pack(writer, this.myValue); result = true; } return result; } public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { base.DeserializeSyncVars(reader, initialState); if (initialState) { this.myValue = myValue__Packer.Unpack(reader); return; } ulong dirtyMask = reader.Read(1); if ((dirtyMask &amp; 1UL) != 0UL) { this.myValue = myValue__Packer.Unpack(reader); } }  last updated for Mirage v101.8.0 "},{"title":"Vector Pack","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/vector-pack","content":"","keywords":""},{"title":"Use cases​","type":1,"pageTitle":"Vector Pack","url":"docs/guides/bit-packing/vector-pack#use-cases","content":"A Vector value with a maximum value "},{"title":"Supported Types​","type":1,"pageTitle":"Vector Pack","url":"docs/guides/bit-packing/vector-pack#supported-types","content":"Vector2 Vector2PackAttributeVector3 Vector3PackAttribute "},{"title":"Example 1​","type":1,"pageTitle":"Vector Pack","url":"docs/guides/bit-packing/vector-pack#example-1","content":"A Position in bounds +-100 in all XYZ with 0.05 precision for all axis public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, Vector3Pack(100f, 100f, 100f, 0.05f)] public Vector3 Position; }  "},{"title":"Example 2​","type":1,"pageTitle":"Vector Pack","url":"docs/guides/bit-packing/vector-pack#example-2","content":"A Position in bounds +-100 in all XZ with 0.05 precision, but with +-20 and precision 0.1 in y-axis public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, Vector3Pack(100f, 20f, 100f, 0.05f, 0.1f, 0.05f)] public Vector3 Position; }  "},{"title":"Example 3​","type":1,"pageTitle":"Vector Pack","url":"docs/guides/bit-packing/vector-pack#example-3","content":"A position in a 2D map public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, Vector2Pack(1000f, 80f, 0.05f)] public Vector2 Position; }  "},{"title":"Generated Code​","type":1,"pageTitle":"Vector Pack","url":"docs/guides/bit-packing/vector-pack#generated-code","content":"Source: [SyncVar, Vector3Pack(100f, 20f, 100f, 0.05f, 0.1f, 0.05f)] public int myValue1; [SyncVar, Vector2Pack(1000f, 80f, 0.05f)] public int myValue2;  Generated:  private Vector3Packer myValue1__Packer = new Vector3Packer(1100f, 20f, 100f, 0.05f, 0.1f, 0.05f); private Vector2Packer myValue2__Packer = new Vector2Packer(1000f, 80f, 0.05f, 0.05f); public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { ulong syncVarDirtyBits = base.SyncVarDirtyBits; bool result = base.SerializeSyncVars(writer, initialize); if (initialState) { myValue1__Packer.Pack(writer, this.myValue1); myValue2__Packer.Pack(writer, this.myValue2); return true; } writer.Write(syncVarDirtyBits, 2); if ((syncVarDirtyBits &amp; 1UL) != 0UL) { myValue1__Packer.Pack(writer, this.myValue1); result = true; } if ((syncVarDirtyBits &amp; 2UL) != 0UL) { myValue2__Packer.Pack(writer, this.myValue2); result = true; } return result; } public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { base.DeserializeSyncVars(reader, initialState); if (initialState) { this.myValue1 = myValue1__Packer.Unpack(reader); this.myValue2 = myValue2__Packer.Unpack(reader); return; } ulong dirtyMask = reader.Read(2); if ((dirtyMask &amp; 1UL) != 0UL) { this.myValue1 = myValue1__Packer.Unpack(reader); } if ((dirtyMask &amp; 2UL) != 0UL) { this.myValue2 = myValue2__Packer.Unpack(reader); } }  last updated for Mirage v101.8.0 "},{"title":"ZigZag Encode","type":0,"sectionRef":"#","url":"docs/guides/bit-packing/zig-zag-encode","content":"","keywords":""},{"title":"Use cases​","type":1,"pageTitle":"ZigZag Encode","url":"docs/guides/bit-packing/zig-zag-encode#use-cases","content":"A value that can be negative or positive "},{"title":"Supported Types​","type":1,"pageTitle":"ZigZag Encode","url":"docs/guides/bit-packing/zig-zag-encode#supported-types","content":"ByteShortIntLongEnum "},{"title":"Example 1​","type":1,"pageTitle":"ZigZag Encode","url":"docs/guides/bit-packing/zig-zag-encode#example-1","content":"A modifier that can be added to a character value to increase or decrease it public class MyNetworkBehaviour : NetworkBehaviour { [SyncVar, BitCount(8), ZigZagEncode] public int modifier; }  Range = 200 so bit count is 8, causing the real range to be -128 to 127 modifier = 57 will serialize to 0111_0010 modifier = -57 will serialize to 0111_0001 modifier = -110 will serialize to 1101_1011, even tho -110 is out of range there is enough range because bit count rounds up. modifier = 130 (out of range) will serialize to 0000_0100 "},{"title":"Generated Code​","type":1,"pageTitle":"ZigZag Encode","url":"docs/guides/bit-packing/zig-zag-encode#generated-code","content":"Source: [SyncVar, BitCount(8), ZigZagEncode] public int myValue;  Generated: public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { ulong syncVarDirtyBits = base.SyncVarDirtyBits; bool result = base.SerializeSyncVars(writer, initialize); if (initialState) { writer.Write((ulong)ZigZag.Encode(this.myValue), 8); return true; } writer.Write(syncVarDirtyBits, 1); if ((syncVarDirtyBits &amp; 1UL) != 0UL) { writer.Write((ulong)ZigZag.Encode(this.myValue), 8); result = true; } return result; } public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { base.DeserializeSyncVars(reader, initialState); if (initialState) { this.myValue = ZigZag.Decode(reader.Read(8)); return; } ulong dirtyMask = reader.Read(1); if ((dirtyMask &amp; 1UL) != 0UL) { this.myValue = ZigZag.Decode(reader.Read(8)); } }  last updated for Mirage v101.8.0 "},{"title":"Network Manager Callbacks","type":0,"sectionRef":"#","url":"docs/guides/callbacks/network-manager","content":"Network Manager Callbacks See also NetworkManager in the API Reference. NetworkManager is a helper class with instance references to the other major parts of the Mirage network.","keywords":""},{"title":"Callbacks Overview","type":0,"sectionRef":"#","url":"docs/guides/callbacks/","content":"","keywords":""},{"title":"Remote Actions​","type":1,"pageTitle":"Callbacks Overview","url":"docs/guides/callbacks/#remote-actions","content":"Remote actions allow you to call a method in your script across the network. You can make the server call methods on all clients or individual clients specifically. You can also make clients call methods on the server. Using remote actions, you can pass data as parameters to your methods in a very similar way to how you call methods in local (non-multiplayer) projects. "},{"title":"Networking Callbacks​","type":1,"pageTitle":"Callbacks Overview","url":"docs/guides/callbacks/#networking-callbacks","content":"Networking callbacks allow you to hook into built-in Mirage events which occur during the course of the game, such as when players join or leave, when game objects are created or destroyed, or when a new Scene is loaded. There are two types of networking callbacks that you can implement: Network manager callbacks, for callbacks relating to the network manager itself (such as when clients connect or disconnect)Network behaviour callbacks, for callbacks relating to individual networked game objects (such as when its Start function is called, or what this particular game object should do if a new player joins the game) "},{"title":"Network Messages​","type":1,"pageTitle":"Callbacks Overview","url":"docs/guides/callbacks/#network-messages","content":"Network messages are a “lower level” approach to sending messages (although they are still classed as part of the networking &quot;High-level API&quot;). They allow you to send data directly between clients and the server using scripting. You can send basic types of data (int, string, etc) as well as most common Unity types (such as Vector3). Since you implement this yourself, these messages are not associated directly with any particular game objects or Unity events - it is up to you to decide their purpose and implement them! "},{"title":"Clock Synchronization","type":0,"sectionRef":"#","url":"docs/guides/clock-sync","content":"Clock Synchronization For many features, you need the clock to be synchronized between the client and the server. Mirage does that automatically for you. To get the current time use this code: double now = NetworkTime.Time; It will return the same value on the client and the server. It starts at 0 when the server starts. note The time is a double and should never be cast to a float. Casting this down to a float means the clock will lose precision after some time: after 1 day, the accuracy goes down to 8 msafter 10 days, the accuracy is 62 msafter 30 days, the accuracy is 250 msafter 60 days, the accuracy is 500 ms Mirage will also calculate the Return Trip Time as seen by the application: double rtt = NetworkTime.Rtt; note Return RTT will also be affected by the frame rate. A higher frame rate will mean less delay before the server reads the ping message and replies. You can check the precision using: double timeStandardDeviation = NetworkTime.TimeSd; For example, if this returns 0.2, it means the time measurements swing up and down roughly 0.2 seconds. Network time is smoothing out the values using Exponential moving average. You can configure how often you want the client to send pings using: NetworkTime.PingInterval = 2.0f; You can configure how quickly results will change using: NetworkTime.PingWindowSize = 10; A higher number will result in smoother results, but a longer time to adjust to changes.","keywords":""},{"title":"Network Behaviour Callbacks","type":0,"sectionRef":"#","url":"docs/guides/callbacks/network-behaviour","content":"","keywords":""},{"title":"Server Only​","type":1,"pageTitle":"Network Behaviour Callbacks","url":"docs/guides/callbacks/network-behaviour#server-only","content":"OnStartServer called when behaviour is spawned on the server OnStopServer called when behaviour is destroyed or unspawned on the server OnSerialize called when behaviour is serializing before it is sent to a client, when overriding make sure to call base.OnSerialize "},{"title":"Client only​","type":1,"pageTitle":"Network Behaviour Callbacks","url":"docs/guides/callbacks/network-behaviour#client-only","content":"OnStartClient called when behaviour is spawned on a client OnStartAuthority called when behaviour has authority when it is spawned (eg local player)called when behaviour is given authority by the sever OnStartLocalPlayer called when the behaviour is on the local character object OnStopAuthority called when authority is taken from the object (eg local player is replaced but not destroyed) OnStopClient called when an object is destroyed on a client by the ObjectDestroyMessage or ObjectHideMessage messages Example flows Below is some example call order for different modes note Start is called by Unity before the first frame, while normally this happens after Mirage's callbacks. But if you don't call NetworkServer.Spawn the same frame as Instantiate then start may be called first "},{"title":"Server mode​","type":1,"pageTitle":"Network Behaviour Callbacks","url":"docs/guides/callbacks/network-behaviour#server-mode","content":"When NetworkServer.Spawn is called (eg when new client connections and a player is created) OnStartServerOnRebuildObserversStart "},{"title":"Client mode​","type":1,"pageTitle":"Network Behaviour Callbacks","url":"docs/guides/callbacks/network-behaviour#client-mode","content":"When the local player is spawned for the client OnStartAuthorityOnStartClientOnStartLocalPlayerStart "},{"title":"Host mode​","type":1,"pageTitle":"Network Behaviour Callbacks","url":"docs/guides/callbacks/network-behaviour#host-mode","content":"These are only called on the Player Game Objects when a client connects: OnStartServerOnRebuildObserversOnStartAuthorityOnStartClientOnSetHostVisibilityOnStartLocalPlayerStart "},{"title":"Community Guides","type":0,"sectionRef":"#","url":"docs/guides/community-guides/","content":"Community Guides This section contains guides written by the community rather than by the developers themselves Mirage Quick Start Guide by StephenAllenGames.co.uk tip If you want to submit a guide either create a pull request or ask in the Discord server.","keywords":""},{"title":"Development Servers Overview","type":0,"sectionRef":"#","url":"docs/guides/development-servers/","content":"","keywords":""},{"title":"Introduction​","type":1,"pageTitle":"Development Servers Overview","url":"docs/guides/development-servers/#introduction","content":"During your development with Mirage, you will need to test your project as a client and as a server. There are a few possible ways to test your project: Default build: Host/client as one and connect with another build/editor to the host locally on 1 computer.Server build: Server is a separate executable. You can place it on your computer run it and connect to it as a client.Dedicated Server: Same as the server build but placed on an external machine, you connect to it with the server's external IP. This guide will focus on the &quot;Dedicated Server&quot; option. There are multiple providers and even self-hosted dedicated machines. All possibilities still go through the same process to ensure connectivity to clients. A few requirements for a dedicated server: Port forwarding (Not strictly necessary but makes everything a lot easier without needing NAT punch-through)Firewall exceptionsComputer/machine that stays online and accessible whenever you need it. In the upcoming sections, we will go through setting up a provider with the free tier. Always double-check that you do not select a paid feature as this is purely meant as a short-term period to test out basic functionality during the development of your project. "},{"title":"Amazon Web Services (AWS)​","type":1,"pageTitle":"Development Servers Overview","url":"docs/guides/development-servers/#amazon-web-services-aws","content":"See this guide: AWS setup "},{"title":"Google Compute Engine​","type":1,"pageTitle":"Development Servers Overview","url":"docs/guides/development-servers/#google-compute-engine","content":"See this guide: Google cloud setup "},{"title":"Microsoft Azure​","type":1,"pageTitle":"Development Servers Overview","url":"docs/guides/development-servers/#microsoft-azure","content":"Microsoft Azure (as of the time of writing) allows setting up a windows instance during the free trial without an active payment method. To be added "},{"title":"Self-Hosted Dedicated Server​","type":1,"pageTitle":"Development Servers Overview","url":"docs/guides/development-servers/#self-hosted-dedicated-server","content":"A self-hosted dedicated server is the same as the other providers but you provide the hardware, internet connection, and costs for running the computer. Most of the time this is the cheapest option during development if you already have an extra machine. Preferably you would put the machine on a different network (to simulate the conditions as the other providers). This would mean you could connect to the machine and put your server build on whenever you need and have access to the router and security settings of the machine for port forwarding and firewall exceptions. In essence, this is the simplest setup but does require extra hardware. "},{"title":"Amazon Web Services (AWS)","type":0,"sectionRef":"#","url":"docs/guides/development-servers/aws","content":"","keywords":""},{"title":"1. Account Creation​","type":1,"pageTitle":"Amazon Web Services (AWS)","url":"docs/guides/development-servers/aws#1-account-creation","content":"Go to the Account creation page and sign up with your details and payment method (e.g. credit card). Adding the payment method is necessary to run a Windows instance on AWS. "},{"title":"2. Setting up an instance with the EC2 Management Console​","type":1,"pageTitle":"Amazon Web Services (AWS)","url":"docs/guides/development-servers/aws#2-setting-up-an-instance-with-the-ec2-management-console","content":"After setting up your account you should be logged in. Always make sure you're in your correct region so it's a good habit to check in the top right corner. Change it to the closest location to you now. After this click on Services in the top left corner and click on EC2. This will bring you to the EC2 instance dashboard and ready to Launch your instance! Click on &quot;Launch Instance&quot;. There are 7 steps to creating your AWS Instance: Choose an Amazon Machine Image (AMI)Choose Instance TypeConfigure InstanceAdd StorageAdd TagsConfigure Security GroupReview Step 1: Choose an Amazon Machine Image​ Scroll down until you see the Microsoft Windows Server 2019 Base (take the newest one if this is outdated). Make sure that the option you select has the &quot;Free Tier Eligible&quot; under the icon and click on &quot;Select&quot;. Step 2: Choose Instance Type​ Make sure you choose the instance type with the &quot;free tier eligible&quot;, at the time of writing this is the t2.micro instance. Click on &quot;Next: Configure Instance Details&quot;. Do not click on Review and Launch.  Step 3: Configure Instance​ Nothing has to be changed at this step. Keep it default. Click on &quot;Next: Add Storage&quot;. Step 4: Add Storage​ Nothing has to be changed. Keep it default. The 30GB is more than you need but there will be an error if you choose a lower amount. Keep in mind that you can always click &quot;Previous&quot; if you need to return, you do not need to repeat the entire process if you make a mistake (unless you click Launch at the end). Click on &quot;Next: Add Tags&quot; to continue. Step 5: Add Tags​ Nothing has to be changed. Keep it default. Click on &quot;Next: Configure Security Groups&quot; Step 6: Configure Security Groups​ IMPORTANT STEP This makes it possible to connect to your instance from outside for: RDP (needed for this example)For clients connecting through port 7777 for your Mirage Project.SSH (if needed) Create a new security group and you can give it your own name and description. Add the following rules: RDP with source &quot;Anywhere&quot;, Description can be whatever but put it as Remote Desktop Program.Custom UDP Rule with port 7777 and source &quot;Anywhere&quot;, Description can be whatever but put it as Mirage.SSH with source &quot;Anywhere&quot;, Description can be whatever but put it as SSH. SSH is not strictly necessary but can be used to remotely connect to it through other means than the RDP. You can ignore the warning about the source as this is just a testing environment. In the future, you might wish to restrict this but you will almost never know the clients' connection IP's beforehand. Click on &quot;Next: Review and Launch&quot;  Step 7: Review​ Almost there! Make sure everything is correct and you are using the free tier, then click on &quot;Launch&quot;.  One more thing: A window will pop up asking for your key pair. Just create a new one by selecting the dropdown: &quot;Create a new key pair&quot; and give it a name, click on &quot;Download Key Pair&quot;. Keep the key file (.PEM File) somewhere secure (To be 100% certain, back it up somewhere). IMPROTANT NOTICE You cannot access the created instance without this key!  Now you can (finally) click on &quot;Launch Instances&quot;! Go back to your EC2 dashboard by clicking on &quot;Services&quot; at the top left and clicking on EC2. Now you see you have &quot;Running Instances: 1&quot;. Click on &quot;Running Instances&quot; to continue.  info A new instance might take around 5-10 minutes to set up. Refresh the page after 10 minutes if nothing changes. Now you did all this but you want to get ON the dedicated server right? Perfect! The next step will get you up and running! "},{"title":"3. Configuring the server via RDP (Remote Desktop)​","type":1,"pageTitle":"Amazon Web Services (AWS)","url":"docs/guides/development-servers/aws#3-configuring-the-server-via-rdp-remote-desktop","content":"Time to get the RDP file so you can start connecting. There are a few things we'll need: RDP file with the key pair added to itConfigure RDP file once downloaded to allow getting files from our C: drive or other drives (so you can easily get your zip project)Enter the Windows Admin password once you start the RDP file Once you've done this, you should be able to continue using the same RDP file. RDP file with the key pair added to it​ caution Get the password before clicking Download!  Copy the Password for later  Now click on &quot;Download Remote Desktop File&quot;. The RDP file will be downloaded.  Configure RDP file for easy file access​ Go to your freshly downloaded RDP file and right-click it and then click &quot;Edit&quot;. Go to the third tab &quot;Local sources&quot;, at the bottom click &quot;more&quot; under local devices and sources. On the new window select your C: drive or any other drive. This is your own computer your connecting from. For easy file exchange.  Perfect! Now you can run the RDP file! The RDP file will ask for a password. If you forgot your password you can get it back by right-clicking the instance and clicking on &quot;Get Windows Password&quot;. You will be asked to re-enter your key pair (.PEM) file and decrypt the message. Once done you will be able to copy the password.   There you have it! Now you have your password and Remote Desktop should show you logging into your dedicated server! Setting up the firewall to allow connections through​ Go to the windows firewall settings, go to the advanced firewall settings, and go to inbound rules. Add a new rule and choose the port type. Select UDP and enter the 7777 port (or any other if you use another port in Mirage). Continue clicking next and keep things default. Close all the windows when done.  AWESOME! You now have everything set up to accept incoming requests on port 7777. "},{"title":"4. Testing the connection​","type":1,"pageTitle":"Amazon Web Services (AWS)","url":"docs/guides/development-servers/aws#4-testing-the-connection","content":"Before you can (finally) test out the server build of your project you need to get it on the dedicated server! Place your (zipped) server build at the root of your added drive (C: or another) to make it easier to find it fast. Go to &quot;My Computer&quot; and because of our previous changes to the RDP we should now see your local drive under &quot;Devices and Drives&quot;. Double click it and because you placed your zipped server build on that drive, you should see it immediately when it's done loading.  Now unzip the project in a new folder on the dedicated server's desktop and run it. Want to test if it sees the 7777 port is open after you started your Mirage server? Get your IPv4 public IP from the EC2 Management Console from your instance and use it on your client to connect to that IP. Go to PortChecker and enter the Dedicated Server IP address and enter port 7777. note If you are not running your game/project then the port will be closed. It's only open when the server is running. "},{"title":"Google Cloud Services","type":0,"sectionRef":"#","url":"docs/guides/development-servers/google-cloud","content":"","keywords":""},{"title":"Before you begin​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#before-you-begin","content":"1) In the Cloud Console, on the project selector page, select or create a Cloud project. note If you don't plan to keep the resources that you create in this procedure, create a project instead of selecting an existing project. After you finish these steps, you can delete the project, removing all resources associated with the project. Go to the project selector page 2) You may need to enable billing for your Google Cloud project. If you have free credits (see above) then these will be used first. Learn how to confirm billing is enabled for your project. "},{"title":"Setting up a new Server​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#setting-up-a-new-server","content":"Start by creating and configuring a new Compute Engine instance. 1) In the Cloud Console, go to the VM instances page: Go to the VM instances page If this is your first instance you will see a dialog prompting you to create a new virtual machine  2) Click Create to get started. 3) On the Create an instance page, configure your instance as follows: - Name your instance. This tutorial uses the instance name `mirror-instance-demo` throughout. - Select the region and zone in which you want your instance to be hosted. This tutorial uses the region `us-central1 (Iowa)` and the zone `us-central1-a` throughout. - Machine configuration depends on the size of your game. For a simple example, we can use a small server. - select `N1` for series - select `f1-micro` for machine type - In the Boot disk section, click Change. The Boot disk dialog will pop up. - Change the disk type to SSD Persistent Disk.   4) Boot disk can be left as default 10gb standard persistent disk with Debian GNU/Linux 9 (stretch) for this tutorial. You may want to change it to best fit your needs. You can instead use an SSD or increase its size, however, this will increase the monthly cost.  note The monthly estimate should be shown at the top right next to Name. 5) To configure Network settings first example the Management, security, disks, networking, solo tenancy section, then click on the Networking tab.  6) Set a Network tag, this will allow you to set up firewall rules later on. This tutorial use mirror-demo as the tag  7) Set up a static IP address for your instance a) Under **Network interfaces** click on `default` and it will bring up a config menu b) Select the **External IP** dropdown and select `Create IP address` c) Enter a name for this IP and press **Reserve**. For this tutorial, we will use `mirror-demo-ip`   8) Create your instance. Press the Create button at the bottom of the page to finish set-up and create your instance "},{"title":"Configure Firewall​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#configure-firewall","content":"This will allow other people to connect to your server using its IP and port 1) In the Cloud Console, go to the Firewall page. Go to the Firewall page 2) Click Create firewall rule. 3) On the Create a firewall rule page, fill out the form as follows: - Name: `mirror-demo-rule` - Target tags: `mirror-demo` - Source filter: IP ranges - Source IP ranges: 0.0.0.0/0 - Protocols or ports: Select UDP, and then enter port 7777 into the field provided.  note UDP and port 7777 are the default settings for the socket, if you are using a different socket you will need to find out what settings that uses.  4) Press Create to confirm the setting and create the rule. "},{"title":"Connect to your new instance​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#connect-to-your-new-instance","content":"Once your instance has finished being created you can press the SSH button to connect to your instance in your web browser  "},{"title":"Setting up the Linux instance​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#setting-up-the-linux-instance","content":"When you first connect you will need to set up a few things 1) First, update the list of packages sudo apt-get update  2) Install screen and unzip sudo apt-get install -y screen unzip  screen allows you to have multiple terminals, allows you to do other stuff while your game is running unzip unzips can be used to extract files from a ZIP file after you upload it to the instance  "},{"title":"Build your game​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#build-your-game","content":"Build your game with Target Platform Linux and Server Build ticked  "},{"title":"Upload and extract your game​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#upload-and-extract-your-game","content":"Once you have built your game zip the folder so that you can upload it to your server. In the SSH connection window click on the settings cogwheel and select Upload File then find and select your zipped build folder.  This should upload the game folder to the home directory. If you need to go to the home directory you can use: cd ~  note The destination will be /home/username where the username should be the cloud account you are logged into.  Once your file has finished the upload you can extract the files unzip ./mirror-demo.zip  "},{"title":"Run server​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#run-server","content":"1) Move into the game folder cd mirror-demo  2) Mark game as executable chmod +x ./mirror-demo.x86_64  You should now be able to run your game server! The following is optional but will most likely be useful 3) Start your server in a detached screen screen -d -m -S mirrorServer ./mirror-demo.x86_64 -logfile ~/server.log  The parts of the command above: screen -d -m will create the new terminal in detached mode-S mirrorServer name of the screen./mirror-demo.x86_64 your game server file-logfile ~/server.log unity argument for log file location, this will create a log file in the home directory 4) Create a start file so you can start your server the same way each time a) create `start.sh` ``` echo &quot;screen -d -m -S mirrorServer ./mirror-demo.x86_64 -logfile ~/server.log&quot; &gt; ./start.sh ``` b) mark as executable ```sh chmod +x ./start.sh ```  5) Run your server ./start.sh  "},{"title":"Using Screen​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#using-screen","content":"Here are a few useful commands for using screen List active screens screen -ls  Attach to existing screen, process-id is shown when calling screen -lsscreen name is given by -S when creating the screen, for this tutorial it was mirrorServer screen -r &lt;process-id | screen name&gt;  Detach from screen press CTRL A + D Stop your game Once attached to a screen you can press CTRL + C to stop the process, this will stop your game and close the screen "},{"title":"View log files​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#view-log-files","content":"You can use the -logfile ~/path/to/log.log argument for Unity when starting your game server. This will cause the logs to be written to a file instead of to the terminal. This will means recent logs won't show up in screen -r. you can use the tail command to view the end of the log file tail -n 50 ./server.log  you can use the -n argument to set how many lines to show you can use the -f argument to follow the end of the file stream showing you any new logs that are written to the file in real-time. You will need to press CTRL + C to exit follow mode "},{"title":"Clean up after tutorial​","type":1,"pageTitle":"Google Cloud Services","url":"docs/guides/development-servers/google-cloud#clean-up-after-tutorial","content":"If you used an existing project you will need to delete the following: VM instanceFirewall rule If you have created a new project you should be able to just delete the project. Go to the Manage resources page "},{"title":"FAQ","type":0,"sectionRef":"#","url":"docs/guides/faq","content":"","keywords":""},{"title":"How do I use this feature?​","type":1,"pageTitle":"FAQ","url":"docs/guides/faq#how-do-i-use-this-feature","content":"How to send/sync custom data types? Mirage can automatically create serialization functions for many custom data types when your scripts are compiled. For example, Mirage will automatically create a function for MyCustomStruct so that it can be sent without any extra work. [ClientRpc] public void RpcDoSomething(MyCustomStruct data) { // do stuff here } struct MyCustomStruct { int someNumber; Vector3 somePosition; } For More details Data TypesSerialization "},{"title":"How to Connect​","type":1,"pageTitle":"FAQ","url":"docs/guides/faq#how-to-connect","content":"How to connect to games on same PC Make sure the Network Address field on NetworkManager or the Hud is set up localHost How to connect to a different PC/Device on same network Set the Network Address field to the LAN IP of the host 192.168.x.x In some cases, you may need additional steps, check below To check IP on Windows you can open PowerShell and use the ipconfig command, then under your current adapter (ethernet/wifi/etc) look for IPv4 Address IPv4 Address. . . . . . . . . . . : 192.168.x.x How to connect to a different PC/Device over the internet Set the Network Address field to be the IP address of the host (google 'whats my IP') This section does not cover relays/dedicated vps/headless features For this to work, you will need to do some of the following, most of these depend on your set-up and router Port forward: You'll have to log in to your router. Forward your game port (default is 7777) for your PC's local IP. (192.168.1.20 for example) PC Firewalls: You can turn it off for a quick test (And turn it back on later)manually allow the editor and any builds you create in firewalls settings. Try from a build rather than the Unity Editor Some anti-virus/phones may have additional blocking. You can turn it off for a quick test (And turn it back on later) In rare cases ISPs or companies/schools block ports and connections, this is harder to adjust yourself. If you need more help it is best to google for a guide for your setup and router. An alternative to the above is to use a dedicated server (VPS) or use a relay. "},{"title":"Networked Game Objects","type":0,"sectionRef":"#","url":"docs/guides/game-objects/","content":"Networked Game Objects Networked game objects are game objects which are controlled and synchronized by Mirage’s networking system. Using synchronized networked game objects, you can create a shared experience for all the players who are playing an instance of your game. They see and hear the same events and actions - even though that may be from their own unique viewpoints within your game. Multiplayer games in Mirage are typically built using Scenes that contain a mix of networked game objects and regular (non-networked) game objects. The networked game objects are those which move or change during gameplay in a way that needs to be synchronized across all users who are playing the game together. Non-networked game objects are those that either don't move or change at all during gameplay (for example, static obstacles like rocks or fences) or game objects which have movement or changes that don’t need to be synchronized across players (for example, a gently swaying tree or clouds passing by in the background of your game). A networked game object is one that has a Network Identity component attached. However, a Network Identity component alone is not enough for your game object to be functional and active in your multiplayer game. The Network Identity component is the starting point for synchronization, and it allows the Network Manager to synchronize the creation and destruction of the game object, but other than that, it does not specify which properties of your game object should be synchronized. What exactly should be synchronized on each networked game object depends on the type of game you are making, and what each game object’s purpose is. Some examples of what you might want to synchronize are: The position and rotation of moving game objects such as the players and non-player characters.The animation state of an animated game objectThe value of a variable, for example, how much time is left in the current round of a game, or how much energy a player has. As a convenience, the initial position, rotation, and scale of the object are automatically synchronized by the NetworkIdentity. Any other state you wish to synchronize across the network needs to go in a NetworkBehaviour inside your GameObject. When an object is created in the server, you must tell Mirage to create it in the clients and keep track of it. This is known as Spawning.","keywords":""},{"title":"Mirage Quick Start Guide V0.1","type":0,"sectionRef":"#","url":"docs/guides/community-guides/mirage-quick-start-guide","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#installation","content":"Before everything, to install Mirage we need to add a new package manager repository to our project. To do this, we can go into Edit menu and then Project Settings. This will open a new Editor Window with multiple tabs. The one we are looking for is Package Manager, so click there. Once you click there, you should add a new Package Manager, so complete the fields as we show next and click apply Name: OpenUPM Url: https://package.openupm.com Scopes: - com.cysharp.unitask - com.openupm - com.miragenet   Once everything is ready, the next step is to close the Project Settings window, and jump into the Package Manager. So for this, we click on Window menu and then Package Manager. At this window, we will click on a small button that says (probably, at today date on Unity Editor 2021.13f) Packages: In Project, here we have to select My registries. Once, you've done that, we should be able to see Mirage and a few transport and also plugins in that list. After selecting, you can choose the version on the list below the name, otherwise, you can just click install on the bottom right part of the window and after a loading bar, that's it. You already have Mirage API on your code, congrats!  note Mirage already includes a UDP transport, so for this guide is not necessary to download anything else than Mirage. "},{"title":"Creating A Network Manager​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#creating-a-network-manager","content":"Here we will be following a couple of steps, so it is easier to follow me. Right-click on your Scenes folder, then click on Create new scene, save it as Main Scene, and add it to build settingsMirage already has a menu for creating a base network manager, so right-click on your Scene hierarchy then go to Create =&gt; Network =&gt; NetworkManagerNow you will see a pre-configured GameObject called NetworkManager  Important stuff about these objects CharacterSpawner is the one will be in charge of spawning your player later, so this is very important object. Since we are not changing scenes between server open or close, we could disable the NetworkSceneManager, but we can leave it as it is. UdpSocketFactory is the one that does the connection, so you can change the IP and port if necessary there. Now let's set up a few things on the scene, to make it look more like a game Add a simple Plane floor with: positions (0, -1, 0)scale (2, 2, 2) Next, we add a GameObject, name with the name StartPosition1 set position (1, 1, 1) We go back to our NetworkManager GO, over Character Spawner component we will change the Player Spawn Method from Random to Round Robin. As a second step, we will add to the Start Positions list the one we created in the previous step. (Optional) you can create more positions if you want, and you can add them to the list, is not necessary but maybe looks nice. "},{"title":"Player Movement​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#player-movement","content":"So after we configure the basics, we need to create our player prefab in order to be able to spawn ourselves in the network. As before, we will follow a couple of easy steps. Create a capsule in the scene hierarchy and name it PlayerAttach a NetworkIdentity and NetworkTransform component into the capsule.Tick Client Authority on the NetworkTransform This is how our Player GO components should look right now  NOTE: Is not needed to set anything else here, Server Object Manager and Client Object Manager will be set dynamically by Mirage later. Next steps: Add a new Script, call it PlayerScriptThen drag this GO with the mouse into the assets folder (You should probably create a Prefabs folder later as a good practice) and release the mouse there. That will create a Prefab for us. (You can notice this was successful because your GO icon in the scene hierarchy will be blue now)Then delete Player from the scene At this stage, our player is done, so right now we need to tell Mirage who is our player in order to spawn it. So this is very easy, just go to your NetworkManager GO and open (if it is not) Character Spawner, then drag the player prefab we created before in the Player Prefab field.  The last step we will need to do is simple: go to the script we created before (you can go into the assets folder and it will be there) and double click it and it will open your IDE. So what we will need to do is simple: tell how we are moving the user, and also to set the camera as a child of the player. We can do that simply like this: using Mirage; using UnityEngine; namespace GettingStarted { public class PlayerScript : NetworkBehaviour { private void Awake() { Identity.OnStartLocalPlayer.AddListener(OnStartLocalPlayer); } private void OnStartLocalPlayer() { Camera.main.transform.SetParent(transform); Camera.main.transform.localPosition = new Vector3(0, 0, 0); } private void Update() { if (!IsLocalPlayer) { return; } float moveX = Input.GetAxis(&quot;Horizontal&quot;) * Time.deltaTime * 110.0f; float moveZ = Input.GetAxis(&quot;Vertical&quot;) * Time.deltaTime * 4f; transform.Rotate(0, moveX, 0); transform.Translate(0, 0, moveZ); } } }  Press play in Unity editor and... what happened? Why is our player don't spawning? Well, the question is very simple. You need to start the server somehow, and that's what coming next, but before... "},{"title":"Types of servers​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#types-of-servers","content":"On Mirage has two types of servers: You can create a server-only game, which runs as an Authoritative kind, and takes decisions for every player and you must join always as a client (For more info you can click here).You can create a host server. Which will work as client + server and will take decisions for every other client in the network Which one is the best? That depends on your game, we can't know certainly in this guide. "},{"title":"Why are you telling me this now?​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#why-are-you-telling-me-this-now","content":"Because in this guide we will be working on Server + Client type, so we want you to know that there are other ways to connect to the Server besides this guide. "},{"title":"Continuing with the guide​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#continuing-with-the-guide","content":"Now, we need to connect to our server, so for this, we have two roads, write down a script and make the server start, or just use the HUD. "},{"title":"Initiate Server By Scripting​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#initiate-server-by-scripting","content":"This one is pretty simple, we just need to go to our NetworkManager GO then Create a new script, we can call it StartServerThen server starts should look like this: using Mirage; using UnityEngine; namespace GettingStarted { public class StartServer : MonoBehaviour { [SerializeField] private NetworkManager networkManager; private void Start() { if (!networkManager) { return; } networkManager.Server.StartServer(networkManager.Client); } } }  After we save the file, we go back into our NetworkManager GO, and assign the NetworkManager field to the script.  "},{"title":"Understanding Network Hud​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#understanding-network-hud","content":"TODO From here: This guide was written for Mirror so some information might be out-of-date for Mirage "},{"title":"Names And Colours​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#names-and-colours","content":"Player name above heads Inside your player Prefab, create an empty GameObjectname it something like FloatingInfo position Y to 1.5 scale X to -1 Inside that FloatingInfo, create a 3D text using Unity menu (GameObject - 3D Object - 3D Text),Set it up as shown in the picture below  Update your PlayerScript.cs with this: using Mirage; using UnityEngine; namespace QuickStart { public class PlayerScript : NetworkBehaviour { public TextMesh playerNameText; public GameObject floatingInfo; private Material playerMaterialClone; [SyncVar(hook = nameof(OnNameChanged))] public string playerName; [SyncVar(hook = nameof(OnColorChanged))] public Color playerColor = Color.white; [ServerRpc] public void CmdSetupPlayer(string _name, Color _col) { // player info sent to server, then server updates sync vars which handles it on all clients playerName = _name; playerColor = _col; } private void Awake() { Identity.OnStartLocalPlayer.AddListener(OnStartLocalPlayer); } private void OnStartLocalPlayer() { Camera.main.transform.SetParent(transform); Camera.main.transform.localPosition = new Vector3(0, 0, 0); floatingInfo.transform.localPosition = new Vector3(0, -0.3f, 0.6f); floatingInfo.transform.localScale = new Vector3(0.1f, 0.1f, 0.1f); string name = &quot;Player&quot; + Random.Range(100, 999); Color color = new Color(Random.Range(0f, 1f), Random.Range(0f, 1f), Random.Range(0f, 1f)) CmdSetupPlayer(name, color); } private void OnNameChanged(string _Old, string _New) { playerNameText.text = playerName; } private void OnColorChanged(Color _Old, Color _New) { playerNameText.color = _New; playerMaterialClone = new Material(GetComponent&lt;Renderer&gt;().material); playerMaterialClone.color = _New; GetComponent&lt;Renderer&gt;().material = playerMaterialClone; } private void Update() { if (!IsLocalPlayer) { // make non-local players run this floatingInfo.transform.LookAt(Camera.main.transform); return; } float moveX = Input.GetAxis(&quot;Horizontal&quot;) * Time.deltaTime * 110.0f; float moveZ = Input.GetAxis(&quot;Vertical&quot;) * Time.deltaTime * 4f; transform.Rotate(0, moveX, 0); transform.Translate(0, 0, moveZ); } } }  Add the PlayerNameText and FloatingInfo objects into the script on the player prefab, as shown below.  Now if you build and run, host on one, and join on the other, you will see player names and colors synced across the network! Well done, 5 stars to you!  "},{"title":"Part 11​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#part-11","content":"A scene networked object all can access and adjust. Create a SceneScript.cs, and add it onto an empty GameObject in the scene called SceneScript. Then create a Canvas with text and a button, similar to the image below.  Add the sceneScript variable, Awake function, and CmdSendPlayerMessage to PlayerScript.cs Also add the new playerName joined line to CmdSetupPlayer(); private SceneScript sceneScript; void Awake() { //allow all players to run this sceneScript = GameObject.FindObjectOfType&lt;SceneScript&gt;(); Identity.OnStartLocalPlayer.AddListener(OnStartLocalPlayer); } [ServerRpc] public void CmdSendPlayerMessage() { if (sceneScript) { sceneScript.statusText = $&quot;{playerName} says hello {Random.Range(10, 99)}&quot;; } } [ServerRpc] public void CmdSetupPlayer(string _name, Color _col) { //player info sent to server, then server updates sync vars which handles it on all clients playerName = _name; playerColor = _col; sceneScript.statusText = $&quot;{playerName} joined.&quot;; } public void OnStartLocalPlayer() { sceneScript.playerScript = this; //. . . . ^ new line to add here  Add this code to SceneScript.cs using Mirage; using UnityEngine; using UnityEngine.UI; namespace QuickStart { public class SceneScript : NetworkBehaviour { public Text canvasStatusText; public PlayerScript playerScript; [SyncVar(hook = nameof(OnStatusTextChanged))] public string statusText; void OnStatusTextChanged(string _Old, string _New) { //called from sync var hook, to update info on screen for all players canvasStatusText.text = statusText; } public void ButtonSendMessage() { if (playerScript != null) { playerScript.CmdSendPlayerMessage(); } } } }  Attach the ButtonSendMessage function to your Canvas Button.Attach Canvas Scene Text to SceneScript variable. ignore SceneScript’s, playerScript variable, it automatically sets this!  Now if you build and run, host, and join, you can send messages, and have a text log for actions! Wahooo!  Experiment and adjust, have fun!  "},{"title":"Weapon Switching​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#weapon-switching","content":"Weapon switching! The code bits. Add the following to your PlayerScript.cs private int selectedWeaponLocal = 1; public GameObject[] weaponArray; [SyncVar(hook = nameof(OnWeaponChanged))] public int activeWeaponSynced; void OnWeaponChanged(int _Old, int _New) { // disable old weapon // in range and not null if (0 &lt; _Old &amp;&amp; _Old &lt; weaponArray.Length &amp;&amp; weaponArray[_Old] != null) { weaponArray[_Old].SetActive(false); } // enable new weapon // in range and not null if (0 &lt; _New &amp;&amp; _New &lt; weaponArray.Length &amp;&amp; weaponArray[_New] != null) { weaponArray[_New].SetActive(true); } } [ServerRpc] public void CmdChangeActiveWeapon(int newIndex) { activeWeaponSynced = newIndex; } void Awake() { // disable all weapons foreach (var item in weaponArray) { if (item != null) { item.SetActive(false); } } }  Add the weapon switch button in Update. Only the local player switches its own weapon, so it goes below the !IsLocalPlayer check. void Update() { if (!IsLocalPlayer) { // make non-local players run this floatingInfo.transform.LookAt(Camera.main.transform); return; } float moveX = Input.GetAxis(&quot;Horizontal&quot;) * Time.deltaTime * 110.0f; float moveZ = Input.GetAxis(&quot;Vertical&quot;) * Time.deltaTime * 4f; transform.Rotate(0, moveX, 0); transform.Translate(0, 0, moveZ); if (Input.GetButtonDown(&quot;Fire2&quot;)) //Fire2 is mouse 2nd click and left alt { selectedWeaponLocal += 1; if (selectedWeaponLocal &gt; weaponArray.Length) { selectedWeaponLocal = 1; } CmdChangeActiveWeapon(selectedWeaponLocal); } }  Weapon models Add the basic cube weapons first, change these later. Double click your player prefab to enter itAdd a &quot;WeaponsHolder&quot; empty GameObject, with position and rotation at 0,0,0.Inside that GameObject, create a cube from the Unity menu, (GameObject, 3D object, cube)- Remove the box colliders.Rename this Weapon1, change position and scale to match the below pictures.  Duplicate weapon 1 for Weapon 2, and change its scale and position, now you should have 2 different looking ‘weapons’!  "},{"title":"Part 14​","type":1,"pageTitle":"Mirage Quick Start Guide V0.1","url":"docs/guides/community-guides/mirage-quick-start-guide#part-14","content":"Weapon switch finale. Add these 2 GameObjects to your PlayerScript.cs weapons array.Disable weapon 2, so only weapon 1 shows when spawning.  Build and run! You should see each player switching weapons, and whatever your player has equipped, will auto show on new joining players (sync var and hook magic!)  "},{"title":"Network Behaviour","type":0,"sectionRef":"#","url":"docs/guides/game-objects/network-behaviour","content":"","keywords":""},{"title":"Synchronized variables​","type":1,"pageTitle":"Network Behaviour","url":"docs/guides/game-objects/network-behaviour#synchronized-variables","content":"Your component can have data that is automatically synchronized from the server to the client. You can use SyncVars as well as SyncLists, SyncHashSet, and SyncDictionary inside a NetworkBehaviour. They will be automatically propagated to the clients whenever their value changes in the server. "},{"title":"Server and Client functions​","type":1,"pageTitle":"Network Behaviour","url":"docs/guides/game-objects/network-behaviour#server-and-client-functions","content":"You can tag member functions in NetworkBehaviour scripts with custom attributes to designate them as server-only or client-only functions. ServerAttributewill check that the function is called in the server. Likewise, ClientAttribute will check if the function is called in the client. For more information, see Attributes. "},{"title":"Server RPC Calls​","type":1,"pageTitle":"Network Behaviour","url":"docs/guides/game-objects/network-behaviour#server-rpc-calls","content":"To execute code on the server, you must use Server RPC calls. The high-level API is a server-authoritative system, so ServerRpc is the only way for a client to trigger some code on the server. Only player game objects can send ServerRpcs. When a client player game object sends a ServerRpc, that ServerRpc runs on the corresponding player game object on the server. This routing happens automatically, so it is impossible for a client to send a ServerRpc for a different player. To define a Server RPC Call in your code, your function must have a ServerRpc attribute. Server RPC Calls are called just by invoking the function normally on the client. Instead of the ServerRpc function running on the client, it is automatically invoked on the corresponding player game object on the server. Server RPC Calls are type-safe, have built-in security and routing to the player, and use an efficient serialization mechanism for the arguments to make calling them fast. See Server RPC and related sections for more information. "},{"title":"Client RPC Calls​","type":1,"pageTitle":"Network Behaviour","url":"docs/guides/game-objects/network-behaviour#client-rpc-calls","content":"Client RPC calls are a way for server game objects to make things happen on client game objects. Client RPC calls are not restricted to player game objects and may be called on any game object with a Network Identity component. To define a Client RPC call in your code, your function must have a ClientRpc attribute. See Client RPC and related sections for more information. "},{"title":"Network Callbacks​","type":1,"pageTitle":"Network Behaviour","url":"docs/guides/game-objects/network-behaviour#network-callbacks","content":"Callbacks can be used to make sure code is executed at the right time. The network callbacks are found inside NetworkIdentity so they can also be used outside of a NetworkBehaviour. See NetworkBehaviour Callbacks and related sections for more information. "},{"title":"Lifecycle of a GameObject","type":0,"sectionRef":"#","url":"docs/guides/game-objects/lifecycle","content":"","keywords":""},{"title":"Spawning​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#spawning","content":"Server\tClientInstantiate Start Server NetworkWorld.onSpawn Instantiate StartAuthority StartClient StartLocalPlayer NetworkWorld.onSpawn "},{"title":"Destroying​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#destroying","content":"Server\tClientNetworkWorld.onUnspawn StopAuthority StopClient Destroy NetworkWorld.onUnspawn StopServer Destroy\t note In Mirror and UNet, you can add logic to lifecycle events by overriding methods in NetworkBehaviour. In Mirage you do it by subscribing to events in NetworkIdentity "},{"title":"Server Instantiate​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#server-instantiate","content":"This is usually done by you using Unity's GameObject.InstantiateThis goes through the regular GameObject Lifecycle events such as Awake, Start, Enabled, etc... Basically this is outside Mirage's control. Scene Objects are normally instantiated as part of the scene. "},{"title":"Server Start​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#server-start","content":"To start a server object, spawn it. If you wish to perform some logic when the object starts in the server, add a component in your gameObject with our own method and subscribe to NetworkIdentity.OnStartServer For example: public class MyComponent : MonoBehaviour { public void Awake() { GetComponent&lt;NetworkIdentity&gt;.OnStartServer.AddListener(OnStartServer); } public void OnStartServer() { Debug.Log(&quot;The object started on the server&quot;) } }  You can also simply drag your OnStartServer method in the NetworkIdentity.OnStartServer event in the inspector. During the spawn, a message will be sent to all the clients telling them to spawn the object. The message will include all the data in SyncVars, SyncLists, SyncHashSet, SyncDictionary "},{"title":"NetworkWorld onSpawn and onUnspawn​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#networkworld-onspawn-and-onunspawn","content":"The NetworkWorld class is what holds the list of all spawned Identities. This class is used for both server and client, and can be found on NetworkServer.World and NetworkClient.World. NetworkWorld has event that are called when Network objects are spawned or unspawn, they can be used when you need to do this on all network objects, but dont want to add listeners to each one individually. public class MyComponent : MonoBehaviour { public NetworkServer Server; public NetworkClient Client; public void Awake() { // Client/Server.World is only set after server is started, // so wait for start, then add event listener to OnSpawn Server.Started.AddListener(ServerStarted); Client.Started.AddListener(ClientStarted); } private void ServerStarted() { Server.World.onSpawn += OnServerSpawn; Server.World.onUnspawn += OnServerUnspawn; } private void OnServerSpawn(NetworkIdentity identity) { Debug.Log($&quot;The object {identity} was spawned on the server&quot;); } private void OnServerUnspawn(NetworkIdentity identity) { Debug.Log($&quot;The object {identity} was unspawned on the server&quot;); } private void ClientStarted() { Client.World.onSpawn += OnClientSpawn; Client.World.onUnspawn += OnClientUnspawn; } private void OnClientSpawn(NetworkIdentity identity) { Debug.Log($&quot;The object {identity} was spawned on the client&quot;); } private void OnClientUnspawn(NetworkIdentity identity) { Debug.Log($&quot;The object {identity} was unspawned on the client&quot;); } }  "},{"title":"Client Instantiate​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#client-instantiate","content":"When an object is spawned, the server will send a message to the clients telling it to spawn a GameObject and provide an asset id. By default, Mirage will look up all the known prefabs looking for that asset id. Make sure to add your prefabs to the NetworkClient list of prefabs. Then Mirage will instantiate the prefab, and it will go through the regular Unity Lifecycle events. You can customize how objects are instantiated using Spawn Handlers. Do not add Network logic to these events. Instead, use these events to subscribe to network events in NetworkIdentity. Immediately after the object is instantiated, all the data is updated to match the data in the server. "},{"title":"Client Start Authority​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#client-start-authority","content":"If the object is owned by this client, then NetworkIdentity will invoke the NetworkIdentity.OnAuthorityChangedSubscribe to this event either by using AddListener, or adding your method to the event in the inspector. Note the Authority can be revoked, and granted again. Every time the client gains authority, this event will be invoked again. "},{"title":"Start Client​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#start-client","content":"The event NetworkIdentity.OnStartClient will be invoked. Subscribe to this event by using AddListener or adding your method in the event in the inspector "},{"title":"Start Local Player​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#start-local-player","content":"If the object spawned is the character object, the event NetworkIdentity.OnStartLocalPlayeris invoked. Subscribe to this event by using AddListener or adding your method in the event in the inspector "},{"title":"Stop Authority​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#stop-authority","content":"If the object loses authority over the object, then NetworkIdentity will invoke the NetworkIdentity.OnAuthorityChangedSubscribe to this event either by using AddListener, or adding your method to the event in the inspector. Note the Authority can be revoked, and granted again. Every time the client loses authority, this event will be invoked again. "},{"title":"Server Stop​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#server-stop","content":"Either because the client disconnected, the server stopped, you called ServerObjectManager.Destroy(GameObject, Boolean) the object may stop in the server. During this state, a message is sent to all the clients to unspawn the object. The event NetworkIdentity.OnStopServer will be invoked. Subscribe to this event either by using AddListener, or by adding your method to the event in the inspector. "},{"title":"Server Destroy​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#server-destroy","content":"By default, the server will call GameObject.Destroy to destroy the object. Note that if it is a Scene Object the server will invoke GameObject.SetActive(false) instead. The regular unity lifecycle events apply. Note that the server will destroy the object, and will not wait for the clients to unspawn their objects. "},{"title":"Stop Client​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#stop-client","content":"This can be triggered either because the client received an Unspawn message or the client was disconnected The event NetworkIdentity.OnStopClient will be invoked. Subscribe to this event either by using AddListener, or by adding your method to the event in the inspector. Use it to clean up any network-related resource used by this object. "},{"title":"Client Destroy​","type":1,"pageTitle":"Lifecycle of a GameObject","url":"docs/guides/game-objects/lifecycle#client-destroy","content":"After an object is stopped on the client, by default unity will call GameObject.Destroy if it is a prefab Spawned ObjectOr it will call GameObject.SetActive(false) if it is a Scene ObjectYou can customize how objects are destroying using Spawn Handlers The normal Unity lifecycle events still apply. "},{"title":"Scene Game Objects","type":0,"sectionRef":"#","url":"docs/guides/game-objects/scene-objects","content":"Scene Game Objects There are two types of networked game objects in Mirage’s multiplayer system: Those that are spawned from prefabs at runtimeThose that are saved as part of a Scene Game objects that are spawned from prefabs at runtime must have their prefabs registered in the ClientObjectManager and are instantiated on client when they are spawned on the server. See Spawn objects for more on spawning from prefabs. Networked game objects that you save as part of a Scene are handled differently, as they already exist in the Scene when it is loaded. After loading a new scene PrepareToSpawnSceneObjects must be called on the client and SpawnSceneObjects on the server. These functions will cause Mirage to find all scene objects and then spawn them for networking. These objects will then have their netId and other network values set once the server has send the SpawnMessage for that object. You may want to disable scene objects to avoid them being in the scene until they are spawned. Saving networked game objects in your Scene has some benefits: They are loaded with the levelThey can be modify in the scene, rather than requiring multiple prefabs for small changesOther game object instances in the Scene can reference them, which can avoid you having to use code to find the game objects and make references to them up at runtime. Networked scene objects are spawned by the ClientObjectManager and ServerObjectManager and act like any other dynamically spawned game objects. Mirage synchronizes them with updates ClientRPC calls. If a Scene game object is destroyed on the server before a client joins the game, then it is never spawned on new clients. It will be left in the state it is when you were editing the scene. After a client has connected and you have called AddCharacter or SpawnVisibleObjects, the client is sent a spawn message for each of the Scene objects that exist on the server, that are visible to that client. This message causes the game object on the client to be enabled and has the latest state of that game object from the server in it. This means that only game objects that are visible to the client and not destroyed on the server, are spawned on the client. Like regular non-Scene objects, these Scene objects are started with the latest state when the client joins the game.","keywords":""},{"title":"Pickups, Drops, and Child Objects","type":0,"sectionRef":"#","url":"docs/guides/game-objects/pickup-drop-child","content":"","keywords":""},{"title":"Child Objects​","type":1,"pageTitle":"Pickups, Drops, and Child Objects","url":"docs/guides/game-objects/pickup-drop-child#child-objects","content":"Let's start with the simple case of a single attachment point that is somewhere down the hierarchy of our Player, such as a hand at the end of an arm. In a script that inherits from NetworkBehaviour on the Player Prefab, we'd have a GameObject reference where the attachment point can be assigned in the inspector, a SyncVar enum with various choices of what the player is holding, and a Hook for the SyncVar to swap out the art of the held item based on the new value. In the image below, Kyle has an empty game object, RightHand, added to the wrist, and some prefabs to be equipped (Ball, Box, Cylinder), and a Player Equip script to handle them. The inspector shows RightHand assigned in 2 places, the Player Equip script, as well as the target of the Network Transform Child component, so we could adjust the relative position of the attachment point (not the art) for all clients as needed.  Below is the Player Equip script to handle the changing of the equipped item, and some notes for consideration: While we could just have all the art items attached at design time and just enable/disable them based on the enum, this doesn't scale well to a lot of items and if they have scripts on them for how they behave in the game, such as animations, special effects, etc. it could get ugly pretty fast, so this example locally instantiates and destroys instead as a design choice.The example makes no effort to deal with position offset between the item and the attach point, e.g. having the grip or handle of an item aligns with the hand. This is best dealt with in a MonoBehaviour script on the item that has public fields for the local position and rotation that can be set in the designer and a bit of code in Start to apply those values in local coordinates relative to the parent attach point. using UnityEngine; using System.Collections; using Mirage; public enum EquippedItem : byte { nothing, ball, box, cylinder } public class PlayerEquip : NetworkBehaviour { public GameObject sceneObjectPrefab; public GameObject rightHand; public GameObject ballPrefab; public GameObject boxPrefab; public GameObject cylinderPrefab; [SyncVar(hook = nameof(OnChangeEquipment))] public EquippedItem equippedItem; void OnChangeEquipment(EquippedItem oldEquippedItem, EquippedItem newEquippedItem) { StartCoroutine(ChangeEquipment(newEquippedItem)); } // Since Destroy is delayed to the end of the current frame, we use a coroutine // to clear out any child objects before instantiating the new one IEnumerator ChangeEquipment(EquippedItem newEquippedItem) { while (rightHand.transform.childCount &gt; 0) { Destroy(rightHand.transform.GetChild(0).gameObject); yield return null; } switch (newEquippedItem) { case EquippedItem.ball: Instantiate(ballPrefab, rightHand.transform); break; case EquippedItem.box: Instantiate(boxPrefab, rightHand.transform); break; case EquippedItem.cylinder: Instantiate(cylinderPrefab, rightHand.transform); break; } } void Update() { if (!IsLocalPlayer) return; if (Input.GetKeyDown(KeyCode.Alpha0) &amp;&amp; equippedItem != EquippedItem.nothing) CmdChangeEquippedItem(EquippedItem.nothing); if (Input.GetKeyDown(KeyCode.Alpha1) &amp;&amp; equippedItem != EquippedItem.ball) CmdChangeEquippedItem(EquippedItem.ball); if (Input.GetKeyDown(KeyCode.Alpha2) &amp;&amp; equippedItem != EquippedItem.box) CmdChangeEquippedItem(EquippedItem.box); if (Input.GetKeyDown(KeyCode.Alpha3) &amp;&amp; equippedItem != EquippedItem.cylinder) CmdChangeEquippedItem(EquippedItem.cylinder); } [ServerRpc] void CmdChangeEquippedItem(EquippedItem selectedItem) { equippedItem = selectedItem; } }  "},{"title":"Dropping Items​","type":1,"pageTitle":"Pickups, Drops, and Child Objects","url":"docs/guides/game-objects/pickup-drop-child#dropping-items","content":"Now that we can equip the items, we need a way to drop the current item into the world as a networked item. Remember that, as child art, the item prefabs have no networking components on them at all. First, let's add one more Input to the Update method above and a CmdDropItem method: void Update() { if (!IsLocalPlayer) return; if (Input.GetKeyDown(KeyCode.Alpha0) &amp;&amp; equippedItem != EquippedItem.nothing) CmdChangeEquippedItem(EquippedItem.nothing); if (Input.GetKeyDown(KeyCode.Alpha1) &amp;&amp; equippedItem != EquippedItem.ball) CmdChangeEquippedItem(EquippedItem.ball); if (Input.GetKeyDown(KeyCode.Alpha2) &amp;&amp; equippedItem != EquippedItem.box) CmdChangeEquippedItem(EquippedItem.box); if (Input.GetKeyDown(KeyCode.Alpha3) &amp;&amp; equippedItem != EquippedItem.cylinder) CmdChangeEquippedItem(EquippedItem.cylinder); if (Input.GetKeyDown(KeyCode.X) &amp;&amp; equippedItem != EquippedItem.nothing) CmdDropItem(); }  [ServerRpc] void CmdDropItem() { // Instantiate the scene object on the server Vector3 pos = rightHand.transform.position; Quaternion rot = rightHand.transform.rotation; GameObject newSceneObject = Instantiate(sceneObjectPrefab, pos, rot); // set the RigidBody as non-kinematic on the server only (isKinematic = true in prefab) newSceneObject.GetComponent&lt;Rigidbody&gt;().isKinematic = false; SceneObject sceneObject = newSceneObject.GetComponent&lt;SceneObject&gt;(); // set the child object on the server sceneObject.SetEquippedItem(equippedItem); // set the SyncVar on the scene object for clients sceneObject.equippedItem = equippedItem; // set the player's SyncVar to nothing so clients will destroy the equipped child item equippedItem = EquippedItem.nothing; // Spawn the scene object on the network for all to see ServerObjectManager.Spawn(newSceneObject); }  In the image above, there's a sceneObjectPrefab field that is assigned to a prefab that will act as a container for our item prefabs. The SceneObject prefab has a SceneObject script with a SyncVar like the Player Equip script, and a SetEquippedItem method that takes the shared enum value as a parameter. using UnityEngine; using System.Collections; using Mirage; public class SceneObject : NetworkBehaviour { [SyncVar(hook = nameof(OnChangeEquipment))] public EquippedItem equippedItem; public GameObject ballPrefab; public GameObject boxPrefab; public GameObject cylinderPrefab; void OnChangeEquipment(EquippedItem oldEquippedItem, EquippedItem newEquippedItem) { StartCoroutine(ChangeEquipment(newEquippedItem)); } // Since Destroy is delayed to the end of the current frame, we use a coroutine // to clear out any child objects before instantiating the new one IEnumerator ChangeEquipment(EquippedItem newEquippedItem) { while (transform.childCount &gt; 0) { Destroy(transform.GetChild(0).gameObject); yield return null; } // Use the new value, not the SyncVar property value SetEquippedItem(newEquippedItem); } // SetEquippedItem is called on the client from OnChangeEquipment (above), // and on the server from CmdDropItem in the PlayerEquip script. public void SetEquippedItem(EquippedItem newEquippedItem) { switch (newEquippedItem) { case EquippedItem.ball: Instantiate(ballPrefab, transform); break; case EquippedItem.box: Instantiate(boxPrefab, transform); break; case EquippedItem.cylinder: Instantiate(cylinderPrefab, transform); break; } } }  In the run-time image below, the Ball(Clone) is attached to the RightHand object, and the Box(Clone) is attached to the SceneObject(Clone), which is shown in the inspector. The art prefabs have simple colliders on them (sphere, box, capsule). If your art item has a mesh collider, it must be marked as Convex to work with the RigidBody on the SceneObject container.  "},{"title":"Pickup Items​","type":1,"pageTitle":"Pickups, Drops, and Child Objects","url":"docs/guides/game-objects/pickup-drop-child#pickup-items","content":"Now that we have a box dropped in the scene, we need to pick it up again. To do that, a CmdPickupItem method is added to the Player Equip script: // CmdPickupItem is public because it's called from a script on the SceneObject [ServerRpc] public void CmdPickupItem(GameObject sceneObject) { // set the player's SyncVar so clients can show the equipped item equippedItem = sceneObject.GetComponent&lt;SceneObject&gt;().equippedItem; // Destroy the scene object ServerObjectManager.Destroy(sceneObject); }  This method is simply called from OnMouseDown in the Scene Object script: private void OnMouseDown() { Client.Player.Identity.GetComponent&lt;PlayerEquip&gt;().CmdPickupItem(gameObject); }  Since the SceneObject(Clone) is networked, we can pass it directly through to CmdPickupItem on the character object to set the equipped item SyncVar and destroy the scene object. For this entire example, the only prefab that needs to be registered with Network Manager besides the Player is the SceneObject prefab.  "},{"title":"Custom Spawn Functions","type":0,"sectionRef":"#","url":"docs/guides/game-objects/spawn-object-custom","content":"","keywords":""},{"title":"Setting Up a Game Object Pool with Custom Spawn Handlers​","type":1,"pageTitle":"Custom Spawn Functions","url":"docs/guides/game-objects/spawn-object-custom#setting-up-a-game-object-pool-with-custom-spawn-handlers","content":"you can use custom spawn handlers in order set up object pooling so you dont need to instantiate and destroy objects each time you use them. A full guide on pooling can be found here: Spawn Object Pooling void ClientConnected() { clientObjectManager.RegisterPrefab(prefab, PoolSpawnHandler, PoolUnspawnHandler); } // used by clientObjectManager.RegisterPrefab NetworkIdentity PoolSpawnHandler(SpawnMessage msg) { return GetFromPool(msg.position, msg.rotation); } // used by clientObjectManager.RegisterPrefab void PoolUnspawnHandler(NetworkIdentity spawned) { PutBackInPool(spawned); }  "},{"title":"Dynamic spawning​","type":1,"pageTitle":"Custom Spawn Functions","url":"docs/guides/game-objects/spawn-object-custom#dynamic-spawning","content":"Some times you may want to create objects at runtime and you might not know the prefab hash ahead of time. For this you can use Dynamic Spawn Handlers to return a spawn handler for a prefab hash. Below is an example where client pre-spawns objects while loading, and then network spawns them when receiving a SpawnMessage from server. Dynamic Handler avoid the need to add 1 spawn handler for each prefab hash. Instead you can just add a single dynamic handler that can then be used to find and return objects. public class DynamicSpawning : MonoBehaviour { public ServerObjectManager ServerObjectManager; public ClientObjectManager ClientObjectManager; // store handler in field so that you dont need to allocate a new one for each DynamicSpawn call private SpawnHandler _handler; private List&lt;NetworkIdentity&gt; _preSpawnedObjects = new List&lt;NetworkIdentity&gt;(); // call this on server to spawn objects and send spawn message to client public void SpawnOnServer() { // set up local objects SpawnLocal(); // send spawn message for (var i = 0; i &lt; _preSpawnedObjects.Count; i++) { // send index as prefabHash ServerObjectManager.Spawn(_preSpawnedObjects[i], prefabHash: i); } } // call this on client to spawn object and set up handler to receive spawn message public void SpawnOnClient() { // set up local objects SpawnLocal(); // register handler so client can find objects when server sends spawn message _handler = new SpawnHandler(FindPreSpawnedObject, null); ClientObjectManager.RegisterDynamicSpawnHandler(DynamicSpawn); } private void SpawnLocal() { // fill _preSpawnedObjects here with objects // these can be prefabs or other objects you want to find _preSpawnedObjects.Add(new GameObject(&quot;object 1&quot;).AddComponent&lt;NetworkIdentity&gt;()); _preSpawnedObjects.Add(new GameObject(&quot;object 2&quot;).AddComponent&lt;NetworkIdentity&gt;()); } private SpawnHandler DynamicSpawn(int prefabHash) { // this will run for all SpawnMessages, so we must first check if this prefabHash is one we want to handle if (IsPreSpawnedId(prefabHash)) // return a handler that is using FindPreSpawnedObject return _handler; else return null; } private bool IsPreSpawnedId(int prefabHash) { // prefabHash starts with 16 bits of 0, then it an id we are using for spawning // this chance of this happening randomly is very low // you can do more validation on the hash based on use case return (prefabHash &amp; 0xFFFF) == 0; } // finds object based on hash and returns it public NetworkIdentity FindPreSpawnedObject(SpawnMessage spawnMessage) { var prefabHash = spawnMessage.PrefabHash.Value; // we stored index in last 16 bits on hash var index = prefabHash &gt;&gt; 16; var identity = _preSpawnedObjects[index]; return identity; } }  "},{"title":"Spawning Game Objects","type":0,"sectionRef":"#","url":"docs/guides/game-objects/spawn-object","content":"","keywords":""},{"title":"Spawning Without Network Manager​","type":1,"pageTitle":"Spawning Game Objects","url":"docs/guides/game-objects/spawn-object#spawning-without-network-manager","content":"For more advanced users, you may find that you want to register Prefabs and spawn game objects without using the Network Manager component. To spawn game objects without using the Network Manager, you can handle the Prefab registration yourself via script. Use the ClientScene.RegisterPrefab method to register Prefabs to the Network Manager. using UnityEngine; using Mirage; public class MyNetworkManager : MonoBehaviour { public GameObject treePrefab; public ClientObjectManager; public NetworkClient; public NetworkServer; public ServerObjectManager; void Start() { ClientObjectManager = FindObjectOfType&lt;ClientObjectManager&gt;(); NetworkClient = FindObjectOfType&lt;NetworkClient&gt;(); NetworkServer = FindObjectOfType&lt;NetworkServer&gt;(); ServerObjectManager = FindObjectOfType&lt;NetworkServer&gt;(); } // Register prefab and connect to the server public void ClientConnect() { ClientObjectManager.spawnPrefabs.Add(treePrefab); NetworkClient.Connect(&quot;localhost&quot;); NetworkClient.MessageHandler.RegisterHandler&lt;ConnectMessage&gt;(OnClientConnect); } void OnClientConnect(NetworkConnection conn, ConnectMessage msg) { Debug.Log(&quot;Connected to server: &quot; + conn); } }  In this example, you create an empty game object to act as the Network Manager, then create and attach the MyNetworkManager script (above) to that game object. Create a prefab that has a Network Identity component attached to it, and drag that onto the treePrefab slot on the MyNetworkManager component in the Inspector. This ensures that when the server spawns the tree game object, it also creates the same kind of game object on the clients. Registering prefabs ensures that there is no stalling or loading time for creating the Asset. For the script to work, you also need to add code for the server. Add this to the MyNetworkManager script: public void ServerListen() { // start listening, and allow up to 4 connections NetworkServer.StartServer(); NetworkServer.MessageHandler.RegisterHandler&lt;ConnectMessage&gt;(OnServerConnect); NetworkServer.MessageHandler.RegisterHandler&lt;ReadyMessage&gt;(OnClientReady); } // When client is ready spawn a few trees void OnClientReady(NetworkConnection conn, ReadyMessage msg) { Debug.Log(&quot;Client is ready to start: &quot; + conn); SpawnTrees(); } void SpawnTrees() { int x = 0; for (int i = 0; i &lt; 5; ++i) { GameObject treeGo = Instantiate(treePrefab, new Vector3(x++, 0, 0), Quaternion.identity); ServerObjectManager.Spawn(treeGo); } } void OnServerConnect(NetworkConnection conn, ConnectMessage msg) { Debug.Log(&quot;New client connected: &quot; + conn); }  The server does not need to register anything, as it knows what game object is being spawned (and the asset ID is sent in the spawn message). The client needs to be able to look up the game object, so it must be registered on the client. When writing your own network manager, it’s important to make the client ready to receive state updates before calling the spawn command on the server, otherwise, they won’t be sent. If you’re using Mirage’s built-in Network Manager component, this happens automatically. For more advanced uses, such as object pools or dynamically created Assets, you can use the ClientObjectManager.RegisterSpawnHandler method, which allows callback functions to be registered for client-side spawning. See the documentation on Custom Spawn Functions for an example of this. If the game object has a network state like synchronized variables, then that state is synchronized with the spawn message. In the following example, this script is attached to the tree Prefab: using UnityEngine; using Mirage; public class Tree : NetworkBehaviour { [SyncVar] public int numLeaves; void Start() { Identity.OnStartClient.AddLisenter(OnStartClient); } public override void OnStartClient() { Debug.Log(&quot;Tree spawned with leaf count &quot; + numLeaves); } }  With this script attached, you can change the numLeaves variable and modify the SpawnTrees function to see it accurately reflected on the client: void SpawnTrees() { int x = 0; for (int i = 0; i &lt; 5; ++i) { GameObject treeGo = Instantiate(treePrefab, new Vector3(x++, 0, 0), Quaternion.identity); Tree tree = treeGo.GetComponent&lt;Tree&gt;(); tree.numLeaves = Random.Range(10,200); Debug.Log(&quot;Spawning leaf with leaf count &quot; + tree.numLeaves); ServerObjectManager.Spawn(treeGo); } }  Attach the Tree script to the treePrefab script created earlier to see this in action. "},{"title":"Constraints​","type":1,"pageTitle":"Spawning Game Objects","url":"docs/guides/game-objects/spawn-object#constraints","content":"A NetworkIdentity must be on the root game object of a spawnable Prefab. Without this, the Network Manager can’t register the Prefab. "},{"title":"Game Object Creation Flow​","type":1,"pageTitle":"Spawning Game Objects","url":"docs/guides/game-objects/spawn-object#game-object-creation-flow","content":"The actual flow of internal operations that takes place for spawning game objects is: Prefab with Network Identity component is registered as spawnable.A game object is instantiated from the Prefab on the server.The game code sets initial values on the instance (note that 3D physics forces applied here do not take effect immediately).ServerObjectManager.Spawn is called with the instance.The state of the SyncVars on the instance on the server is collected by calling OnSerialize on [Network Behaviour] components.A network message of the type ObjectSpawn is sent to connected clients that include the SyncVar data.OnStartServer is called on the instance on the server, and IsServer is set to trueClients receive the ObjectSpawn message and create a new instance from the registered Prefab.The SyncVar data is applied to the new instance on the client by calling OnDeserialize on Network Behaviour components.OnStartClient is called on the instance on each client, and IsClient is set to trueAs game-play progresses, changes to SyncVar values are automatically synchronized to clients. This continues until the game ends.ServerObjectManager.Destroy is called on the instance on the server.A network message of the type ObjectDestroy is sent to clients.OnNetworkDestroy is called on the instance on clients, then the instance is destroyed. "},{"title":"Player Game Objects​","type":1,"pageTitle":"Spawning Game Objects","url":"docs/guides/game-objects/spawn-object#player-game-objects","content":"Player game objects in the HLAPI work slightly differently from non-player game objects. The flow for spawning player game objects with the Network Manager is: Prefab with NetworkIdentity is registered as the PlayerPrefabThe client connects to the serverClient calls AddPlayer, network message of type MsgType.AddPlayer is sent to the serverThe server receives the message and calls CharacterSpawner.OnServerAddPlayerA game object is instantiated from the Player Prefab on the serverServerObjectManager.AddCharacter is called with the new player instance on the serverThe player instance is spawned - you do not have to call ServerObjectManager.Spawn for the player instance. The spawn message is sent to all clients like on a normal spawn.A network message of type Owner is sent to the client that added the player (only that client!)The original client receives the network messageOnStartLocalPlayer is called on the player instance on the original client, and IsLocalPlayer is set to true note OnStartLocalPlayer is called after OnStartClient, because it only happens when the ownership message arrives from the server after the player game object is spawned, so IsLocalPlayer is not set in OnStartClient. Because OnStartLocalPlayer is only called for the client’s local player game object, it is a good place to perform initialization that should only be done for the local player. This could include enabling input processing and enabling camera tracking for the player game object. "},{"title":"Spawning Game Objects with Client Authority​","type":1,"pageTitle":"Spawning Game Objects","url":"docs/guides/game-objects/spawn-object#spawning-game-objects-with-client-authority","content":"To spawn game objects and assign authority of those game objects to a particular client, use ServerObjectManager.Spawn, which takes as an argument the INetworkPlayer of the client that is to be made the authority. For these game objects, the property HasAuthority is true on the client with authority, and OnStartAuthority is called on the client with authority. That client can issue Server RPCs for that game object. On other clients (and on the host), HasAuthority is false. For example, the tree spawn example above can be modified to allow the tree to have client authority like this (note that we now need to pass in a Network Player game object for the owning client’s connection): void SpawnTrees(INetworkPlayer player) { int x = 0; for (int i = 0; i &lt; 5; ++i) { GameObject treeGo = Instantiate(treePrefab, new Vector3(x++, 0, 0), Quaternion.identity); Tree tree = treeGo.GetComponent&lt;Tree&gt;(); tree.numLeaves = Random.Range(10,200); Debug.Log(&quot;Spawning leaf with leaf count &quot; + tree.numLeaves); ServerObjectManager.Spawn(treeGo, player); } }  The Tree script can now be modified to send a Server RPC Call to the server:  public void ClientConnect() { ClientObjectManager.spawnPrefabs.Add(treePrefab); NetworkClient.Connect(&quot;localhost&quot;); NetworkClient.MessageHandler.RegisterHandler&lt;ConnectMessage&gt;(OnClientConnect); NetworkClient.Player.Identity.OnAuthorityChanged.AddListener(OnStartAuthority); } public override void OnStartAuthority(bool changed) { CmdMessageFromTree(&quot;Tree with &quot; + numLeaves + &quot; reporting in&quot;); } [ServerRpc] void CmdMessageFromTree(string msg) { Debug.Log(&quot;Client sent a tree message: &quot; + msg); }  Note that you can’t just add the CmdMessageFromTree call into OnStartClient, because at that point the authority has not been set yet, so the call would fail. "},{"title":"Player Game Objects","type":0,"sectionRef":"#","url":"docs/guides/game-objects/spawn-player","content":"Player Game Objects Mirage’s multiplayer HLAPI system handles player game objects differently than non-player game objects. When a new player joins the game (when a new client connects to the server), that player’s game object becomes a &quot;local player&quot; game object on the client of that player, and Unity associates the player’s connection with the player’s game object. Unity associates one player game object for each person playing the game, and routes networking Server RPC Calls to that individual game object. A player cannot invoke a Server RPC Call on another player’s game object, only their own. The NetworkBehaviour class (which you derive from to create your network scripts) has a property called IsLocalPlayer. On each client’s player game object, Mirage sets that property to true on the NetworkBehaviour script and invokes the OnStartLocalPlayer callback on the object's NetworkIdentity. This means each client has a different game object set up like this because on each client a different game object is the one that represents the local player. The diagram below shows two clients and their local players. Only the player game object that is &quot;yours&quot; (from your point of view as the player) has the IsLocalPlayer flag set. Usually, you should set this flag in the script to determine whether to process input, whether to make the camera track the game object or do any other client-side things that should only occur for the player belonging to that client. Player game objects represent the player (that is, the person playing the game) on the server, and run Server RPC Calls from the player’s client. These Server RPC Calls are secure client-to-server remote procedure calls. In this server-authoritative system, other non-player server-side game objects cannot receive Server RPC Calls directly from client-side game objects. This is both for security, and to reduce the complexity of building your game. By routing all incoming Server RPC Calls from users through the player game object, you can ensure that these messages come from the right place, the right client, and can be handled in a central location. The CharacterSpawner component adds a player every time a client connects to the server. In some situations though, you might want it not to add players until an input event happens - such as a user pressing a “start” button on the controller. To disable automatic player creation, you may want to write your own CharacterSpawner component and wait for the AddPlayerMessage message to be sent from the client.","keywords":""},{"title":"Spawn Object - Pooling","type":0,"sectionRef":"#","url":"docs/guides/game-objects/spawn-object-pooling","content":"","keywords":""},{"title":"Setting Up a Game Object Pool with Custom Spawn Handlers​","type":1,"pageTitle":"Spawn Object - Pooling","url":"docs/guides/game-objects/spawn-object-pooling#setting-up-a-game-object-pool-with-custom-spawn-handlers","content":"Here is an example of how you might set up a simple game object pooling system with custom spawn handlers. Spawning and unspawning then puts game objects in or out of the pool. using System.Collections.Generic; using Mirage; using UnityEngine; namespace Mirage.Examples { public class PrefabPoolManager : MonoBehaviour { [Header(&quot;Settings&quot;)] public ClientObjectManager clientObjectManager; public int startSize = 5; public int maxSize = 20; public NetworkIdentity prefab; [Header(&quot;Debug&quot;)] [SerializeField] int currentCount; Queue&lt;NetworkIdentity&gt; pool; void Start() { InitializePool(); clientObjectManager.RegisterPrefab(prefab, SpawnHandler, UnspawnHandler); } // used by clientObjectManager.RegisterPrefab NetworkIdentity SpawnHandler(SpawnMessage msg) { return GetFromPool(msg.position, msg.rotation); } // used by clientObjectManager.RegisterPrefab void UnspawnHandler(NetworkIdentity spawned) { PutBackInPool(spawned); } void OnDestroy() { clientObjectManager.UnregisterPrefab(prefab); } private void InitializePool() { pool = new Queue&lt;NetworkIdentity&gt;(); for (int i = 0; i &lt; startSize; i++) { NetworkIdentity next = CreateNew(); pool.Enqueue(next); } } NetworkIdentity CreateNew() { if (currentCount &gt; maxSize) { Debug.LogError($&quot;Pool has reached max size of {maxSize}&quot;); return null; } // use this object as parent so that objects dont crowd hierarchy NetworkIdentity next = Instantiate(prefab, transform); next.name = $&quot;{prefab.name}_pooled_{currentCount}&quot;; next.gameObject.SetActive(false); currentCount++; return next; } /// &lt;summary&gt; /// Used to take Object from Pool. /// &lt;para&gt;Should be used on server to get the next Object&lt;/para&gt; /// &lt;/summary&gt; /// &lt;param name=&quot;position&quot;&gt;&lt;/param&gt; /// &lt;param name=&quot;rotation&quot;&gt;&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public NetworkIdentity GetFromPool(Vector3 position, Quaternion rotation) { NetworkIdentity next = pool.Count &gt; 0 ? pool.Dequeue() // take from pool : CreateNew(); // create new because pool is empty // CreateNew might return null if max size is reached if (next == null) { return null; } // set position/rotation and set active next.transform.position = position; next.transform.rotation = rotation; next.gameObject.SetActive(true); return next; } /// &lt;summary&gt; /// Used to put object back into pool so they can b /// &lt;para&gt;Should be used on server after unspawning an object&lt;/para&gt; /// &lt;/summary&gt; /// &lt;param name=&quot;spawned&quot;&gt;&lt;/param&gt; public void PutBackInPool(NetworkIdentity spawned) { // disable object spawned.gameObject.SetActive(false); // add back to pool pool.Enqueue(spawned); } } }  To use this manager, create a new empty game object and add the PrefabPoolManager component (code above). Next, drag a prefab you want to spawn multiple times to the Prefab field, and set startSize and maxSize fields. startSize is how many will be spawned when your game starts. maxSize is the max number that can be spawned, if this number is reached then an error will be given when trying to more new objects. Finally, set up a reference to the PrefabPoolManager in the script you are using for player movement: PrefabPoolManager prefabPoolManager; void Start() { prefabPoolManager = FindObjectOfType&lt;PrefabPoolManager&gt;(); }  Your player logic might contain something like this, which moves and fires coins: void Update() { if (!isLocalPlayer) return; // move var x = Input.GetAxis(&quot;Horizontal&quot;) * 0.1f; var z = Input.GetAxis(&quot;Vertical&quot;) * 0.1f; transform.Translate(x, 0, z); // shoot if (Input.GetKeyDown(KeyCode.Space)) { // Server RPC Call function is called on the client, but invoked on the server CmdFire(); } }  In the firing logic on the player, make it use the game object pool: [ServerRpc] void CmdFire() { // Set up bullet on server NetworkIdentity bullet = prefabPoolManager.GetFromPool(transform.position + transform.forward, Quaternion.identity); Rigidbody rigidBody = bullet.GetComponent&lt;Rigidbody&gt;(); rigidBody.velocity = transform.forward * 4; // tell server to send SpawnMessage, which will call SpawnHandler on client ServerObjectManager.Spawn(bullet); // destroy bullet after 2 seconds StartCoroutine(DestroyDelay(bullet, 2.0f)); } IEnumerator DestroyDelay(NetworkIdentity go, float delay) { yield return new WaitForSeconds(delay); // return object to pool on server prefabPoolManager.PutBackInPool(go); // tell server to send ObjectDestroyMessage, which will call UnspawnHandler on client ServerObjectManager.Destroy(go, destroyServerObject: false); }  The Destroy method above shows how to return game objects to the pool so that they can be re-used when you fire again "},{"title":"Network Visibility","type":0,"sectionRef":"#","url":"docs/guides/network-visibility","content":"","keywords":""},{"title":"Network Proximity Checker Component​","type":1,"pageTitle":"Network Visibility","url":"docs/guides/network-visibility#network-proximity-checker-component","content":"Mirage’s Network Proximity Checker component is the simplest way to implement network visibility for players. It works in conjunction with the physics system to determine whether game objects are close enough (that is, &quot;visible&quot; to send network messages in your multiplayer game). "},{"title":"Network Scene Checker Component​","type":1,"pageTitle":"Network Visibility","url":"docs/guides/network-visibility#network-scene-checker-component","content":"Mirage's Network Scene Checker component can be used to isolate players and networked objects on the server in additive scene instances. "},{"title":"Network Visibility on Remote Clients​","type":1,"pageTitle":"Network Visibility","url":"docs/guides/network-visibility#network-visibility-on-remote-clients","content":"When a player on a remote client joins a networked game, only game objects that are network-visible to the player will be spawned on that remote client. This means that even if the player enters a large world with many networked game objects, the game can start quickly because it does not need to spawn every game object that exists in the world. Note that this applies to networked game objects in your scene, but does not affect the loading of Assets. Unity still takes time to load the Assets for registered Prefabs and Scene game objects. When a player moves within the world, the set of network-visible game objects changes. The player’s client is told about these changes as they happen. The ObjectHide message is sent to clients when a game object becomes no longer network-visible. By default, Mirage destroys the game object when it receives this message. When a game object becomes visible, the client receives an ObjectSpawn message, as if Mirage has spawned the game object for the first time. By default, the game object is instantiated like any other spawned game object. "},{"title":"Network Visibility on the Host​","type":1,"pageTitle":"Network Visibility","url":"docs/guides/network-visibility#network-visibility-on-the-host","content":"The host shares the same Scene as the server because it acts as both the server and the client to the player hosting the game. For this reason, it cannot destroy game objects that are not visible to the local player. Instead, there is the virtual method OnSetLocalVisibility in the NetworkVisibility class that is invoked. This method is invoked on all scripts that inherit from NetworkVisibility on game objects that change the visibility state on the host. The default implementation of OnSetLocalVisibility disables or enables all renderer components on the game object. If you want to customize this implementation, you can override the method in your script, and provide new behavior for how the host (and therefore the local client) should respond when a game object becomes network-visible or invisible (such as disabling HUD elements or renderers). "},{"title":"Customizing Network Visibility​","type":1,"pageTitle":"Network Visibility","url":"docs/guides/network-visibility#customizing-network-visibility","content":"Sometimes you might want to use other kinds of visibility checks, such as grid-based rules, line-of-sight tests, navigation path tests, or any other type of test that suits your game. It may be helpful to understand how the Network Proximity Checker works. The Network Proximity Checker is implemented using the public visibility interface of Mirage’s HLAPI. Using this same interface, you can implement any kind of visibility rules you desire. Each NetworkIdentity keeps track of the set of players that it is visible to. The players that a NetworkIdentity game object is visible to are called the “observers” of the NetworkIdentity. The Network Proximity Checker calls the RebuildObservers method on the Network Identity component at a fixed interval (set using the “Vis Update Interval” value in the inspector), so that the set of network-visible game objects for each player is updated as they move around. In the NetworkVisibility class (which your custom observer scripts inherit from), there are some virtual functions for determining visibility. These are: OnCheckObserver This method is called on the server, on each networked game object when a new player enters the game. If it returns true, that player is added to the object’s observers. The Network Proximity Checker does a simple distance check in its implementation of this function and uses Physics.OverlapSphereNonAlloc to find the players that are within the visibility distance for this object.OnRebuildObservers This method is called on the server when RebuildObservers is invoked. This method expects the set of observers to be populated with the players that can see the object. The NetworkServer then handles sending ObjectHide and ObjectSpawn messages based on the differences between the old and new visibility sets.OnSetHostVisibility This method is called on the server by the visibility system for objects on a host. Objects on a host (with a local client) cannot be disabled or destroyed when they are not visible to the local client. So this function is called to allow custom code to hide these objects. A typical implementation will disable renderer components on the object. This is only called on local clients on a host. You can check whether any given networked game object is a player by checking if its NetworkIdentity has a valid Owner. For example: int hitCount = Physics.OverlapSphereNonAlloc(transform.position, visRange, hitsBuffer3D, castLayers); for (int i = 0; i &lt; hitCount; i++) { Collider hit = hitsBuffer3D[i]; NetworkIdentity identity = hit.GetComponent&lt;NetworkIdentity&gt;(); if (identity != null &amp;&amp; identity.Owner != null) observers.Add(identity.Owner); }  "},{"title":"Networking Concepts Overview","type":0,"sectionRef":"#","url":"docs/guides/overview","content":"","keywords":""},{"title":"High-level scripting API​","type":1,"pageTitle":"Networking Concepts Overview","url":"docs/guides/overview#high-level-scripting-api","content":"Mirage’s networking has a &quot;high-level&quot; scripting API (which we’ll refer to as the HLAPI). Using this means you get access to commands which cover most of the common requirements for multiuser games without needing to worry about the &quot;lower level&quot; implementation details. The HLAPI allows you to: Control the networked state of the game using a &quot;Network Manager&quot;Operate &quot;client hosted&quot; games, where the host is also a player clientSerialize data using a general-purpose serializerSend and receive network messagesSend networked commands from clients to serversMake remote procedure calls (RPCs) from servers to clientsSend networked events from servers to clients "},{"title":"Engine and Editor integration​","type":1,"pageTitle":"Networking Concepts Overview","url":"docs/guides/overview#engine-and-editor-integration","content":"Mirage’s networking is integrated into the engine and the editor, allowing you to work with components and visual aids to build your multiplayer game. It provides: A NetworkIdentity component for networked objectsA NetworkBehaviour for networked scriptsConfigurable automatic synchronization of object transformsAutomatic synchronization of script variablesSupport for placing networked objects in Unity scenesNetwork components "},{"title":"Custom Character Spawning","type":0,"sectionRef":"#","url":"docs/guides/game-objects/spawn-player-custom","content":"","keywords":""},{"title":"Ready State​","type":1,"pageTitle":"Custom Character Spawning","url":"docs/guides/game-objects/spawn-player-custom#ready-state","content":"Out of date! This is out of date and needs to be updated! In addition to characters, players also have a &quot;scene is ready&quot; state. The server sends clients that are ready information about spawned game objects and state synchronization updates; clients which are not ready are not sent these updates. When a client initially connects to a server, their SceneIsReady property will be true. However initial spawning will not happen until a character has been added or you manually tell the server to send spawned objects. Once a client has completed all its pre-game setup, and all its Assets are loaded, it can send a character message. As seen in the example above this will tell the server to spawn the player's character using ServerObjectManager.AddCharacter. After the character is spawned mirage will automatically send a spawn message for the other spawned object to the client. "},{"title":"Switching Characters​","type":1,"pageTitle":"Custom Character Spawning","url":"docs/guides/game-objects/spawn-player-custom#switching-characters","content":"To replace the character game object for a player, use ServerObjectManager.ReplaceCharacter. This is useful for having different game objects for the player at different times, such as in-game and a pregame lobby. The function takes the same arguments as AddCharacter, but allows there to already be a character for that player. The old character game object is not destroyed when ReplaceCharacter is called. The NetworkRoomManager uses this technique to switch from the NetworkRoomPlayer game object to a game-play player game object when all the players in the room are ready. You can also use ReplaceCharacter to respawn a player or change the object that represents the player. In some cases, it is better to just disable a game object and reset its game attributes on respawn. The following code sample demonstrates how to replace the player game object with a new game object: public class CustomCharacterSpawner : MonoBehaviour { public NetworkServer Server; public ServerObjectManager ServerObjectManager; public void Respawn(NetworkPlayer player, GameObject newPrefab) { // Cache a reference to the current character object GameObject oldPlayer = player.Identity.gameObject; var newCharacter = Instantiate(newPrefab); // Instantiate the new character object and broadcast to clients // NOTE: here we can use `keepAuthority: true` because we are calling Destroy on the old prefab immediately after. ServerObjectManager.ReplaceCharacter(player, newCharacter, keepAuthority: true); // Remove the previous character object that's now been replaced Server.Destroy(oldPlayer); } }  "},{"title":"Destroying Characters​","type":1,"pageTitle":"Custom Character Spawning","url":"docs/guides/game-objects/spawn-player-custom#destroying-characters","content":"Once the character is finished (eg game over, or player died) you can remove the character using ServerObjectManager.DestroyCharacter. public void OnPlayerDeath(INetworkPlayer player) { ServerObjectManager.DestroyCharacter(player); }  Alternatively, you can use ServerObjectManager.RemoveCharacter to remove it as the player's character without destroying it. "},{"title":"Remote Actions Overview","type":0,"sectionRef":"#","url":"docs/guides/remote-actions/","content":"","keywords":""},{"title":"Arguments to Remote Actions​","type":1,"pageTitle":"Remote Actions Overview","url":"docs/guides/remote-actions/#arguments-to-remote-actions","content":"Mirage serializes RPC arguments to send them over the network. You can use any supported Mirage type. There are limits to what can be arguments. GameObject, NetworkIdentity, and NetworkBehaviour can be sent because they have a Network ID. But, Mirage can't send other Unity Objects by itself because it will have no way to find them on the other side. It is also possible to create serializer functions for unsupported types. You can find out more information here. "},{"title":"Mirror Migration Guide","type":0,"sectionRef":"#","url":"docs/guides/mirror-migration","content":"","keywords":""},{"title":"Namespace​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#namespace","content":"First of all, Mirror namespace needs to be changed to Mirage. So in your code, replace all: using Mirror;  with using Mirage;  "},{"title":"Components​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#components","content":"Many roles that NetworkManager fulfilled in Mirror were split into multiple simpler components in Mirage, such as NetworkClient, NetworkServer, and NetworkSceneManager. Those classes are no longer static singletons, they are MonoBehaviours instead, so you need to add them to your scene and reference them. NetworkManager in Mirage only serves as a reference holder for server and client. tip The easiest way to get started is to right-click in the Hierarchy &gt; Network &gt; NetworkManager. This will create a GameObject with all the necessary components and references already set up. "},{"title":"Accessing Mirage components from NetworkBehaviour​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#accessing-mirage-components-from-networkbehaviour","content":"Despite Mirage removing all static states, you can still access the important networking components from within NetworkBehaviour easily. This table shows how to access different components in comparison to Mirror: Mirror (static)\tMirage (property of NetworkBehaviour)NetworkServer\tServer NetworkClient\tClient NetworkTime\tNetworkTime doesn't exist\tClientObjectManager doesn't exist\tServerObjectManager "},{"title":"Network Events Lifecycle​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#network-events-lifecycle","content":"Lifecycle management is no longer based on overrides. Instead, there are many UnityEvents that can be hooked into without direct coupling. They can also be used to hook callbacks via Unity Inspector. tip This guide only shows the Mirror counterpart events, but Mirage has more events available, so be sure to check them out as they might be useful. "},{"title":"Server and client events​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#server-and-client-events","content":"The table below shows the override method names from Mirror's NetworkManager and the corresponding events from Mirage. Mirror (override)\tMirage (event)OnStartServer\tNetworkServer.Started OnServerConnect\tNetworkServer.Authenticated OnServerDisconnect\tNetworkServer.Disconnected OnStopServer\tNetworkServer.Stopped OnClientConnect\tNetworkClient.Authenticated OnClientDisconnect\tNetworkClient.Disconnected For example, this code from Mirror: using Mirror; public class MyNetworkManager : NetworkManager { public override void OnStartServer() { // Server started } public override void OnServerConnect(NetworkConnection conn) { // Client connected and authenticated on server } public override void OnStopServer() { // Server stopped } public override void OnStartClient() { // Client started } public override void OnClientConnect(NetworkConnection conn) { // Client connected and authenticated } public override void OnClientDisconnect(NetworkConnection conn) { // Client disconnected } }  should be changed to: using Mirage; public class MyNetworkManager : NetworkManager { void Awake() { Server.Started.AddListener(OnStartServer); Server.Authenticated.AddListener(OnServerConnect); Server.Stopped.AddListener(OnStopServer); Client.Started.AddListener(OnClientStarted); Client.Authenticated.AddListener(OnClientConnect); Client.Disconnected.AddListener(OnClientDisconnected); } void OnStartServer() { // Server started } void OnServerConnect(INetworkPlayer conn) { // Client connected (and authenticated) on server } void OnStopServer() { // Server stopped } void OnClientStarted() { // Client started } void OnClientConnect(INetworkPlayer conn) { // Client connected } void OnClientDisconnected(ClientStoppedReason reason) { // Client disconnected } }  "},{"title":"NetworkBehaviour events​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#networkbehaviour-events","content":"The table below shows the Mirror's NetworkBehaviour override method names on the left and the Mirage events on the right. Mirror (override)\tMirage (event)OnStartServer\tIdentity.OnStartServer OnStopServer\tIdentity.OnStopServer OnStartClient\tIdentity.OnStartClient OnStopClient\tIdentity.OnStopClient OnStartLocalPlayer\tIdentity.OnStartLocalPlayer OnStartAuthority\tIdentity.OnAuthorityChanged OnStopAuthority\tIdentity.OnAuthorityChanged Let's take this Player class as an example. In Mirror, you would do: using Mirror; public class Player : NetworkBehaviour { public override void OnStartServer() { // Player started on server } public override void OnStartClient() { // Player started on client } }  Which should be changed like so in Mirage: using Mirage; public class Player : NetworkBehaviour { void Awake() { Identity.OnStartServer.AddListener(OnStartServer); Identity.OnStartClient.AddListener(OnStartClient); } void OnStartServer() { // Player started on server } void OnStartClient() { // Player started on client } }  note Please note that due to timing all event callbacks should be registered in Awake method or via Unity inspector for them to be invoked consistently. "},{"title":"Method Attributes​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#method-attributes","content":"The table below shows the new attribute names in Mirage. Mirror\tMirage[Command]\t[ServerRpc] [TargetRpc]\t[ClientRpc(target = Mirage.RpcTarget enum)] [ServerCallback]\t[Server(error = false)] [ClientCallback]\t[Client(error = false)] doesn't exist\t[HasAuthority(error = false)] doesn't exist\t[LocalPlayer(error = false)] "},{"title":"Renames​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#renames","content":"These fields/properties have been renamed: Mirror\tMirageClientScene.localPlayer\tNetworkPlayer.Identity ClientScene.ready\tClient.Player.SceneIsReady NetworkIdentity.assetId\tNetworkIdentity.PrefabHash NetworkIdentity.netId\tNetworkIdentity.NetId NetworkIdentity.connectionToClient\tNetworkIdentity.Owner NetworkBehaviour.isServer\tNetworkBehaviour.IsServer NetworkBehaviour.connectionToClient\tNetworkBehaviour.Owner NetworkBehaviour.connectionToServer\tRemoved, use Client.Player instead NetworkBehaviour.hasAuthority\tNetworkBehaviour.HasAuthority NetworkBehaviour.Identity\tNetworkBehaviour.Identity NetworkBehaviour.netId\tNetworkBehaviour.NetId NetworkBehaviour.isClientOnly\tNetworkBehaviour.IsClientOnly NetworkBehaviour.islocalPlayer\tNetworkBehaviour.IsLocalPlayer NetworkConnection.isReady\tNetworkPlayer.SceneIsReady NetworkConnection.identity\tNetworkPlayer.Identity NetworkServer.active\tNetworkServer.Active NetworkServer.localConnection\tNetworkServer.LocalPlayer NetworkClient.connection\tNetworkClient.Player NetworkTime.time\tNetworkTime.Time "},{"title":"Object Management​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#object-management","content":"Registered spawnable prefabs were moved from NetworkManager to the ClientObjectManager component. You can use the Inspector to register all NetworkIdentities via a single click. "},{"title":"Spawning and destroying​","type":1,"pageTitle":"Mirror Migration Guide","url":"docs/guides/mirror-migration#spawning-and-destroying","content":"Table below shows how to spawn objects in Mirage from NetworkBehaviour: Mirror\tMirageNetworkServer.Spawn\tServerObjectManager.Spawn NetworkServer.Destroy\tServerObjectManager.Destroy "},{"title":"Network Messages","type":0,"sectionRef":"#","url":"docs/guides/remote-actions/network-messages","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Network Messages","url":"docs/guides/remote-actions/network-messages#usage","content":"Define a new struct (rather than a class to prevent GC allocations) that will represent your message.Add any supported Mirage types as public fields of that struct. This will be the data you want to send.Register a handler for that message on the NetworkServer and/or NetworkClient's MessageHandler depending on where you want to listen for that message being received.Use the Send() method on the NetworkClient, NetworkServer, or NetworkPlayer classes depending on which way you want to send the message. "},{"title":"Example​","type":1,"pageTitle":"Network Messages","url":"docs/guides/remote-actions/network-messages#example","content":"// optional: add NetworkMessage attribute so that it is easier for Mirage to find [NetworkMessage] // using structs to prevent GC allocations public struct ScoreMessage { public int score; public Vector3 scorePos; public int lives; } public class Scores : MonoBehaviour { // attach these in the inspector public NetworkServer Server; public NetworkClient Client; private void Awake() { Client.Started.AddListener(ClientStarted); } private void ClientStarted() { // Register Client to listen for the ScoreMessage Client.MessageHandler.RegisterHandler&lt;ScoreMessage&gt;(OnScore); } private void OnScore(INetworkPlayer player, ScoreMessage msg) { Debug.Log(&quot;ScoreMessage received on client with score &quot; + msg.score); } // Send from server public void SendScore(int score, Vector3 scorePos, int lives) { var msg = new ScoreMessage() { score = score, scorePos = scorePos, lives = lives }; // also send to host player so we can update ui Server.SendToAll(msg, authenticatedOnly: true, excludeLocalPlayer: false); } }  Note that there is no serialization code for the ScoreMessage struct in this source code example. Mirage will generate a reader and writer for ScoreMessage when it sees that it is being sent. "},{"title":"Client RPC","type":0,"sectionRef":"#","url":"docs/guides/remote-actions/client-rpc","content":"","keywords":""},{"title":"RpcTarget​","type":1,"pageTitle":"Client RPC","url":"docs/guides/remote-actions/client-rpc#rpctarget","content":"There are 3 target modes for ClientRpc: Observers (default)OwnerPlayer "},{"title":"RpcTarget.Observers​","type":1,"pageTitle":"Client RPC","url":"docs/guides/remote-actions/client-rpc#rpctargetobservers","content":"This is the default target. This will send the RPC message to only the observers of an object according to its Network Visibility. If there is no Network Visibility on the object it will send to all players. "},{"title":"RpcTarget.Owner​","type":1,"pageTitle":"Client RPC","url":"docs/guides/remote-actions/client-rpc#rpctargetowner","content":"This will send the RPC message to only the owner of the object. "},{"title":"RpcTarget.Player​","type":1,"pageTitle":"Client RPC","url":"docs/guides/remote-actions/client-rpc#rpctargetplayer","content":"This will send the RPC message to the NetworkPlayer that is passed into the call. [ClientRpc(target = RpcTarget.Player)] public void MyRpcFunction(NetworkPlayer target) { // Code to invoke on client }  Mirage will use the NetworkPlayer target to know where to send it, but it will not send the target value. Because of this, its value will always be null for the client. "},{"title":"Exclude owner​","type":1,"pageTitle":"Client RPC","url":"docs/guides/remote-actions/client-rpc#exclude-owner","content":"You may want to exclude the owner client when calling a ClientRpc. This is done with the excludeOwner option: [ClientRpc(excludeOwner = true)]. "},{"title":"Channel​","type":1,"pageTitle":"Client RPC","url":"docs/guides/remote-actions/client-rpc#channel","content":"RPC can be sent using either the Reliable or Unreliable channels. [ClientRpc(channel = Channel.Reliable)] "},{"title":"Returning values​","type":1,"pageTitle":"Client RPC","url":"docs/guides/remote-actions/client-rpc#returning-values","content":"ClientRpcs can return values only if RpcTarget is Player or Owner. It can take a long time for the client to reply, so they must return a UniTask which the server can await. To return a value, add a return value using UniTask&lt;MyReturnType&gt; where MyReturnType is any supported Mirage type. In the client, you can make your method async, or you can use UniTask.FromResult(myResult);. For example: public class SelectCharacter : NetworkBehaviour { // need to target owner so that we can reply to them [ClientRpc(target = RpcTarget.Owner)] public UniTask&lt;string&gt; GetCharacter() { // return the name of the character that the user selected return UniTask.FromResult(&quot;myCharacter&quot;); } [Client] public async UniTaskVoid WaitForPlayerToSelectCharacter() { // Call the RPC and wait for the response without blocking the main thread var characterName = await GetCharacter(); Debug.Log($&quot;Selected Character {characterName}&quot;); } }  Examples public class Player : NetworkBehaviour { private int health; public void TakeDamage(int amount) { if (!IsServer) { return; } health -= amount; Damage(amount); } [ClientRpc] private void Damage(int amount) { Debug.Log(&quot;Took damage:&quot; + amount); } }  When running a game as a host with a local client, ClientRpc calls will be invoked on the local client even though it is in the same process as the server. So the behaviors of local and remote clients are the same for ClientRpc calls. You can also specify which client gets the call with the target parameter. If you only want the client that owns the object to be called, use [ClientRpc(target = RpcTarget.Owner)] or you can specify which client gets the message by using [ClientRpc(target = RpcTarget.Player)] and passing the player as a parameter. For example: public class Player : NetworkBehaviour { private int health; [Server] private void Magic(GameObject target, int damage) { target.GetComponent&lt;Player&gt;().health -= damage; NetworkIdentity opponentIdentity = target.GetComponent&lt;NetworkIdentity&gt;(); DoMagic(opponentIdentity.Owner, damage); } [ClientRpc(target = RpcTarget.Player)] public void DoMagic(INetworkPlayer target, int damage) { // This will appear on the opponent's client, not the attacking player's Debug.Log($&quot;Magic Damage = {damage}&quot;); } [Server] private void HealMe() { health += 10; Healed(10); } [ClientRpc(target = RpcTarget.Owner)] public void Healed(int amount) { // No NetworkPlayer parameter, so it goes to owner Debug.Log($&quot;Health increased by {amount}&quot;); } }  "},{"title":"RPC Examples","type":0,"sectionRef":"#","url":"docs/guides/remote-actions/rpc-examples","content":"","keywords":""},{"title":"Example 1​","type":1,"pageTitle":"RPC Examples","url":"docs/guides/remote-actions/rpc-examples#example-1","content":"Set a player's name from a client and have it synced to other players. public class Player : NetworkBehaviour { [SyncVar] public string PlayerName; [ServerRpc] public void RpcChangeName(string newName) { PlayerName = newName; } }  "},{"title":"Generated code​","type":1,"pageTitle":"RPC Examples","url":"docs/guides/remote-actions/rpc-examples#generated-code","content":"Weaver moves the user code into a new function and then replaces the body of the RPC with an internal send call. RPCs are registered using the classes static constructor with methods that will read all the parameters and then invoke the user code method. public class Player : NetworkBehaviour { [SyncVar] public string PlayerName; [ServerRpc] public void RpcChangeName(string newName) { if (this.IsServer) { UserCode_RpcChangeName_123456789(newName); } else { using (PooledNetworkWriter writer = NetworkWriterPool.GetWriter()) { writer.WriteString(newName); ServerRpcSender.Send(this, 123456789, writer, 0, true); } } } public void UserCode_RpcChangeName_123456789(string newName) { PlayerName = newName; } protected void Skeleton_RpcChangeName_123456789(NetworkReader reader, INetworkPlayer senderConnection, int replyId) { this.UserCode_RpcChangeName_123456789(reader.ReadString()); } public Player() { this.remoteCallCollection.Register(0, typeof(Player), &quot;Player.RpcChangeName&quot;, RpcInvokeType.ServerRpc, new CmdDelegate(Skeleton_RpcChangeName), true); } protected override int GetRpcCount() { return 1; } }  "},{"title":"Resources","type":0,"sectionRef":"#","url":"docs/guides/resources","content":"","keywords":""},{"title":"Video Tutorials Playlists​","type":1,"pageTitle":"Resources","url":"docs/guides/resources#video-tutorials-playlists","content":"note These videos are meant for Mirror but much of what they teach also applies to Mirage. Unity - Mirror Networking by First Gear GamesMirror Multiplayer by Dapper Dino "},{"title":"Object Pooling​","type":1,"pageTitle":"Resources","url":"docs/guides/resources#object-pooling","content":"Simple object pooling scriptAdvanced object pooling scripts "},{"title":"Server RPC","type":0,"sectionRef":"#","url":"docs/guides/remote-actions/server-rpc","content":"","keywords":""},{"title":"Returning values​","type":1,"pageTitle":"Server RPC","url":"docs/guides/remote-actions/server-rpc#returning-values","content":"ServerRpcs can return values. It can take a long time for the server to reply, so they must return a UniTask which the client can await. To return a value, add a return value using UniTask&lt;MyReturnType&gt; where MyReturnType is any supported Mirage type. In the server, you can make your method async, or you can use UniTask.FromResult(myResult);. For example: public class Shop : NetworkBehaviour { [ServerRpc] public UniTask&lt;int&gt; GetPrice(string item) { // do some loop up to get the price of some item // this can be from a database, or settings file or whatever switch (item) { case &quot;turnip&quot;: return UniTask.FromResult(10); case &quot;apple&quot;: return UniTask.FromResult(3); default: return UniTask.FromResult(int.MaxValue); } } [Client] public async UniTaskVoid DisplayTurnipPrice() { // Call the RPC and wait for the response without blocking the main thread var price = await GetPrice(&quot;turnip&quot;); Debug.Log($&quot;Turnips price {price}&quot;); } }  "},{"title":"ServerRpc and Authority​","type":1,"pageTitle":"Server RPC","url":"docs/guides/remote-actions/server-rpc#serverrpc-and-authority","content":"It is possible to invoke ServerRpcs on non-character objects if any of the following are true: The object was spawned with client authorityThe object has client authority set with NetworkIdentity.AssignClientAuthoritythe Server RPC Call has the requireAuthority option set false. You can include an optional INetworkPlayer sender = null parameter in the Server RPC Call method signature and Mirage will fill in the sending client for you.Do not try to set a value for this optional parameter...it will be ignored. Server RPC Calls sent from these objects are run on the server instance of the object, not on the associated character object for the client. public enum DoorState : byte { Open, Closed } public class Door : NetworkBehaviour { [SyncVar] public DoorState doorState; [ServerRpc(requireAuthority = false)] public void CmdSetDoorState(DoorState newDoorState, INetworkPlayer sender = null) { if (sender.identity.GetComponent&lt;Player&gt;().hasDoorKey) { doorState = newDoorState; } } }  "},{"title":"Loading scenes in Mirage","type":0,"sectionRef":"#","url":"docs/guides/scene-loading/","content":"Loading scenes in Mirage Use NetworkSceneManager to help load scenes and sync them between server and client. To customize scene handling you can make a subclass and override the virtual methods. If you need more unique logic to load scenes you can have full control by following this guide.","keywords":""},{"title":"Manual Scene Loading","type":0,"sectionRef":"#","url":"docs/guides/scene-loading/manual-scene-loading","content":"","keywords":""},{"title":"Using Messages​","type":1,"pageTitle":"Manual Scene Loading","url":"docs/guides/scene-loading/manual-scene-loading#using-messages","content":"These messages are built-in and used by NetworkSceneManager. If you are creating your own scene logic then you can re-use these messages for your purpose. SceneMessage: Sent to the client to load a sceneSceneReadyMessage: Sent to either client or server when they have finished loading "},{"title":"Loading a Scene​","type":1,"pageTitle":"Manual Scene Loading","url":"docs/guides/scene-loading/manual-scene-loading#loading-a-scene","content":"Server Mark Player as not ready, using NetworkPlayer.SceneIsReadySend SceneMessage to clients If the scene is already loaded on server, skip steps 3/4. This might be the case if you are loading a scene for a player that joins late. Load the scene on server Call ServerObjectManager.SpawnSceneObjects (This will tell Mirage to call Spawn on unspawned Scene objects) Client After receiving SceneMessage (optional) Mark local player as not ready Load the scene on client After loading finished Call ClientObjectManager.PrepareToSpawnSceneObjects (This will tell Mirage about any new scene objects)(optional) Mark local player as ready Send SceneReadyMessage to the server Server After receiving SceneReadyMessage Mark the player as ready using: player.SceneIsReady = trueCall ServerObjectManager.SpawnVisibleObjects or ServerObjectManager.AddCharacter (Mirage will send spawn message to client) "},{"title":"SpawnVisibleObjects vs AddCharacter​","type":1,"pageTitle":"Manual Scene Loading","url":"docs/guides/scene-loading/manual-scene-loading#spawnvisibleobjects-vs-addcharacter","content":"When calling SpawnVisibleObjects it will only spawn objects if the player has a character. This check can be avoided by using the IgnoreHasCharacter argument. When AddCharacter is called it will send a spawn message for the new character to the client. After that, it will call SpawnVisibleObjects to spawn any objects that are visible to the new character. If your game has a player character you'll want to use AddCharacter most of the time. But if your game does not have a player character or you want to spawn objects earlier then you should use SpawnVisibleObjects with IgnoreHasCharacter set up true. You can also use SpawnVisibleObjects(player, true) to spawn scene objects before the player character by calling it before AddCharacter. note Make sure to call ClientObjectManager.PrepareToSpawnSceneObjects client side before calling SpawnVisibleObjects or AddCharacter. If that function is not called the client will not be able to find scene objects when spawn messages are received. "},{"title":"Host mode​","type":1,"pageTitle":"Manual Scene Loading","url":"docs/guides/scene-loading/manual-scene-loading#host-mode","content":"If using this setup in Host mode make sure you only load the Scene once, this can be done by checking if the server is active before loading the scene on the client. The rest of the setup should stay the same. In host mode, there will be 2 copies of the NetworkPlayer one for the client-side and one for the server-side. When using player.SceneIsReady you will need to make sure you are setting it on both copies of the player. The easiest way to do this is just to treat the host client as a normal client and send the message, but be aware of any functions you don't want to be called twice. "},{"title":"Serialization","type":0,"sectionRef":"#","url":"docs/guides/serialization/","content":"Serialization This section of the Mirage documentation covers different aspects of how data is serialized, including the types of data that Mirage supports, advanced serialization techniques, the use of generics, and the SyncPrefab struct for synchronizing prefabs over the network. Data TypesInformation about the different data types supported in Mirage, including basic C# types, Unity math types, NetworkIdentity, and GameObject with NetworkIdentity.e Advanced SerializationIn-depth explanation of how serialization works in Mirage, including how it is implemented using Weaver and Mono.Ccil. GenericsHow Mirage supports generic types for SyncVar, Rpcs, and fields in NetworkMessages. SyncPrefabExplains the SyncPrefab struct in Mirage, which is used to synchronize prefabs over the network. It is particularly useful for short-lived objects like visual effects, audio, or projectiles.","keywords":""},{"title":"Using Network Scene Manager","type":0,"sectionRef":"#","url":"docs/guides/scene-loading/network-scene-manager","content":"","keywords":""},{"title":"How to use​","type":1,"pageTitle":"Using Network Scene Manager","url":"docs/guides/scene-loading/network-scene-manager#how-to-use","content":"The Network Scene Manager takes care of most of the grunt work that is needed to load unload and network scenes between server and client. The examples below show exactly how to use the network scene manager. "},{"title":"Load Scene Normally​","type":1,"pageTitle":"Using Network Scene Manager","url":"docs/guides/scene-loading/network-scene-manager#load-scene-normally","content":"This will load up a new scene on the server and tell all current player's loaded on the server to load the scene up. public class LoadScene : MonoBehaviour { public void Start() { NetworkSceneManager sceneManager = GetComponent&lt;NetworkSceneManager&gt;(); sceneManager.ServerLoadSceneNormal(&quot;path to scene asset file.&quot;) } }  note If you require physics scenes to load up on the server you can override the default parameter like so. sceneManager.ServerLoadSceneNormal(&quot;path to scene asset file.&quot;, new LoadSceneParameters { loadSceneMode = LoadSceneMode.Normal, localPhysicsMode = LocalPhysicsMode.Physics2D });  "},{"title":"Load Scene Additively​","type":1,"pageTitle":"Using Network Scene Manager","url":"docs/guides/scene-loading/network-scene-manager#load-scene-additively","content":"This will load a scene additively on the server and tell specific clients to do the same. Example shows send to everyone. public class LoadSceneAdditively : MonoBehaviour { public void Start() { NetworkSceneManager sceneManager = GetComponent&lt;NetworkSceneManager&gt;(); sceneManager.ServerLoadSceneAdditively(&quot;path to scene asset file.&quot;, sceneManager.Server.Players) } }  note If you want to send the additive scene to only specific players we can do it like so. You must get the player on your own. sceneManager.ServerLoadSceneAdditively(&quot;path to scene asset file.&quot;, Player)  note Also if you want to load the scene normally to specific players versus additively like the server you can override the parameter to do so also. The server will still load additively, the reason is if you need fully normal loading you can use the above method instead to do it. sceneManager.ServerLoadSceneAdditively(&quot;path to scene asset file.&quot;, Player, true)  note Also if you want to load the scene in physic's mode you can override another parameter also to do so. You can also make clients load normally in the example below we keep it false to load the client side additively too. sceneManager.ServerLoadSceneAdditively(&quot;path to scene asset file.&quot;, Player, false, new LoadSceneParameters { loadSceneMode = LoadSceneMode.Additively, localPhysicsMode = LocalPhysicsMode.Physics2D )  This will unload a scene additively on the server and tell specific clients to do the same. Example shows send to everyone. public class UnLoadSceneAdditively : MonoBehaviour { public void Start() { NetworkSceneManager sceneManager = GetComponent&lt;NetworkSceneManager&gt;(); sceneManager.ServerUnloadSceneAdditively(&quot;path to scene asset file.&quot;, sceneManager.Server.Players) } }  note If you want to send the additive scene to only specific players we can do it like so. You must get the player on your own. sceneManager.ServerLoadSceneAdditively(&quot;path to scene asset file.&quot;, Player)  "},{"title":"Virtual Methods​","type":1,"pageTitle":"Using Network Scene Manager","url":"docs/guides/scene-loading/network-scene-manager#virtual-methods","content":"Some of the methods in NetworkSceneManager can be overridden to customize how it works StartOnDestroyClientStartSceneMessageClientFinishedLoadingSceneMessageClientNotReadyMessageOnServerAuthenticatedOnServerPlayerDisconnected "},{"title":"Example - OnServerAuthenticated​","type":1,"pageTitle":"Using Network Scene Manager","url":"docs/guides/scene-loading/network-scene-manager#example---onserverauthenticated","content":"By default OnServerAuthenticated sends the active scene and all additive scenes to the client, It can be overridden to only send the active scene: public class MySceneManager : NetworkSceneManager { protected internal override void OnServerAuthenticated(INetworkPlayer player) { // just load server's active scene instead of all additive scenes as well player.Send(new SceneMessage { MainActivateScene = ActiveScenePath }); player.Send(new SceneReadyMessage()); } }  "},{"title":"Example - Start​","type":1,"pageTitle":"Using Network Scene Manager","url":"docs/guides/scene-loading/network-scene-manager#example---start","content":"By default, Start registers all our listeners for scene management handling. If you need to override it then do this and add your stuff. public class MySceneManager : NetworkSceneManager { protected internal override void Start() { // add your stuff before. base.Start(); // add your stuff after. } }  "},{"title":"Example - OnDestroy​","type":1,"pageTitle":"Using Network Scene Manager","url":"docs/guides/scene-loading/network-scene-manager#example---ondestroy","content":"By default OnDestroy de-registers all our listener's for scene management handling. If you need to override it then do this and add your stuff. public class MySceneManager : NetworkSceneManager { protected internal override void OnDestroy() { // add your stuff before. base.OnDestroy(); // add your stuff after. } }  "},{"title":"Advanced Serialization","type":0,"sectionRef":"#","url":"docs/guides/serialization/advanced","content":"","keywords":""},{"title":"Rules And Tips​","type":1,"pageTitle":"Advanced Serialization","url":"docs/guides/serialization/advanced#rules-and-tips","content":"There are some rules and limits for what Weaver can do. Some features add complexity and are hard to maintain so have not been implemented. These features are not impossible to implement and could be added if there is a high demand for them. You should be able to write Custom Read/Write functions for any type, and Weaver will use them. This means if there is an unsupported type like int[][] creating a custom Read/Write function will allow you to sync int[][] in SyncVar/ClientRpc/etc If you have a type that has a field that is not able to be serialized, you can mark that field with[System.NonSerialized] and weaver will ignore it "},{"title":"Unsupported Types​","type":1,"pageTitle":"Advanced Serialization","url":"docs/guides/serialization/advanced#unsupported-types","content":"Some of these types are unsupported due to the complexity they would add, as mentioned above. note Types in this list can have custom writers. Jagged and Multidimensional arrayTypes that Inherit from UnityEngine.ComponentUnityEngine.ObjectUnityEngine.ScriptableObjectGeneric Types, eg MyData&lt;T&gt; Custom Read/Write must declare T, eg MyData&lt;int&gt; InterfacesTypes that reference themselves "},{"title":"Built-in Read Write Functions​","type":1,"pageTitle":"Advanced Serialization","url":"docs/guides/serialization/advanced#built-in-read-write-functions","content":"Mirage provides some built-in Read/Write Functions. They can be found in NetworkReaderExtensions and NetworkWriterExtensions. This is a non-compete list of types that have built-in functions, check the classes above to see the full list. Most C# primitive types Common Unity structs Vector3QuaternionRectRayGuid NetworkIdentity, GameObject, Transform NetworkIdentity, GameObject, Transform​ The NetId of the object is sent over the network, and the object with the same NetId is returned on the other side. If the NetId is zero or an object is not found then null will be returned. "},{"title":"Generated Read Write Functions​","type":1,"pageTitle":"Advanced Serialization","url":"docs/guides/serialization/advanced#generated-read-write-functions","content":"Weaver will generate read/write functions for: Classes or StructsEnumsArrays eg int[] ArraySegments eg ArraySegment&lt;int&gt; Lists eg List&lt;int&gt; Classes and Structs​ Weaver will read/write every public field in the type unless the field is marked with [System.NonSerialized]. If there is an unsupported type in the class or struct Weaver will fail to make read/write functions for it. caution The weaver does not check properties Enums​ Weaver will use the underlying type of an enum to read and write them. By default this is int. For example, Switch will use the byte read/write functions to be serialized public enum Switch : byte { Left, Middle, Right, }  Collections​ Weaver will generate writes for the collections listed above. Weaver will use the element's read/write function, so it must be a supported type or have a custom read/write function. For example: float[] is a supported type because Mirage has a built-in read/write function for float.MyData[] is a supported type as Weaver is able to generate a read/write function for MyData  public struct MyData { public int someValue; public float anotherValue; }  "},{"title":"Adding Custom Read Write functions​","type":1,"pageTitle":"Advanced Serialization","url":"docs/guides/serialization/advanced#adding-custom-read-write-functions","content":"Custom read/write functions are static methods like this: public static void WriteMyType(this NetworkWriter writer, MyType value) { // write MyType data here } public static MyType ReadMyType(this NetworkReader reader) { // read MyType data here }  It is best practice to make read/write extension methods so they can be called like writer.WriteMyType(value). It is a good idea to call them ReadMyType and WriteMyType so it is obvious what type they are for. However the name of the function doesn't matter, weaver should be able to find it no matter what it is called. Properties Example​ Weaver won't write properties, but a custom writer can be used to send them over the network. This can be useful if you want to have private set for your properties public struct MyData { public int someValue { get; private set; } public float anotherValue { get; private set; } public MyData(int someValue, float anotherValue) { this.someValue = someValue; this.anotherValue = anotherValue; } } public static class CustomReadWriteFunctions { public static void WriteMyType(this NetworkWriter writer, MyData value) { writer.WriteInt32(value.someValue); writer.WriteSingle(value.anotherValue); } public static MyData ReadMyType(this NetworkReader reader) { return new MyData(reader.ReadInt32(), reader.ReadSingle()); } }  Unsupported type Example​ Rigidbody is an unsupported type because it inherits from Component. But a custom writer can be added so that it is synced using a NetworkIdentity if one is attached. public struct MyCollision { public Vector3 force; public Rigidbody rigidbody; } public static class CustomReadWriteFunctions { public static void WriteMyCollision(this NetworkWriter writer, MyCollision value) { writer.WriteVector3(value.force); NetworkIdentity networkIdentity = value.rigidbody.GetComponent&lt;NetworkIdentity&gt;(); writer.WriteNetworkIdentity(networkIdentity); } public static MyCollision ReadMyCollision(this NetworkReader reader) { Vector3 force = reader.ReadVector3(); NetworkIdentity networkIdentity = reader.ReadNetworkIdentity(); Rigidbody rigidBody = networkIdentity != null ? networkIdentity.GetComponent&lt;Rigidbody&gt;() : null; return new MyCollision { force = force, rigidbody = rigidBody, }; } }  Above are functions for MyCollision, but instead, you could add functions for Rigidbody and let weaver would generate a writer for MyCollision. public static class CustomReadWriteFunctions { public static void WriteRigidbody(this NetworkWriter writer, Rigidbody rigidbody) { NetworkIdentity networkIdentity = rigidbody.GetComponent&lt;NetworkIdentity&gt;(); writer.WriteNetworkIdentity(networkIdentity); } public static Rigidbody ReadRigidbody(this NetworkReader reader) { NetworkIdentity networkIdentity = reader.ReadNetworkIdentity(); Rigidbody rigidBody = networkIdentity != null ? networkIdentity.GetComponent&lt;Rigidbody&gt;() : null; return rigidBody; } }  "},{"title":"Debugging​","type":1,"pageTitle":"Advanced Serialization","url":"docs/guides/serialization/advanced#debugging","content":"You can use tools like dnSpy or ILSpy to view the complied code after Weaver has altered it. This can help with understanding and debug what Mirage and Weaver does. "},{"title":"Data Types","type":0,"sectionRef":"#","url":"docs/guides/serialization/data-types","content":"","keywords":""},{"title":"Game Objects​","type":1,"pageTitle":"Data Types","url":"docs/guides/serialization/data-types#game-objects","content":"Game Objects in SyncVars, SyncLists, and SyncDictionaries are fragile in some cases and should be used with caution. As long as the game object already exists on both the server and the client, the reference should be fine. When the sync data arrives at the client, the referenced game object may not yet exist on that client, resulting in null values in the sync data. This is because internally Mirage passes the NetId from the NetworkIdentity and tries to look it up on the client's NetworkIdentity.World.Spawned dictionary. If the object hasn't been spawned on the client yet, no match will be found. It could be in the same payload, especially for joining clients, but after the sync data from another object. It could also be null because the game object is excluded from a client due to network visibility, e.g. NetworkProximityChecker. You may find that it's more robust to sync the NetworkIdentity.NetID (uint) instead, and do your own lookup inNetworkIdentity.World.Spawned to get the object, perhaps in a coroutine:  public GameObject target; [SyncVar(hook = nameof(OnTargetChanged))] public uint targetID; void OnTargetChanged(uint _, uint newValue) { if (NetworkIdentity.World.Spawned.TryGetValue(targetID, out NetworkIdentity identity)) target = identity.gameObject; else StartCoroutine(SetTarget()); } IEnumerator SetTarget() { while (target == null) { yield return null; if (NetworkIdentity.World.SpawnedObjects.TryGetValue(targetID, out NetworkIdentity identity)) target = identity.gameObject; } }  "},{"title":"Custom Data Types​","type":1,"pageTitle":"Data Types","url":"docs/guides/serialization/data-types#custom-data-types","content":"Sometimes you don't want Mirage to generate serialization for your own types. For example, instead of serializing quest data, you may want to serialize just the quest id, and the receiver can look up the quest by id in a predefined list. Sometimes you may want to serialize data that uses a different type not supported by Mirage, such as DateTime or System.Uri. You can add support for any type by adding extension methods to NetworkWriter and NetworkReader. For example, to add support for DateTime, add this somewhere in your project: public static class DateTimeReaderWriter { public static void WriteDateTime(this NetworkWriter writer, DateTime dateTime) { writer.WriteInt64(dateTime.Ticks); } public static DateTime ReadDateTime(this NetworkReader reader) { return new DateTime(reader.ReadInt64()); } }  ...then you can use DateTime in your [ServerRpc] or SyncList "},{"title":"Inheritance and Polymorphism​","type":1,"pageTitle":"Data Types","url":"docs/guides/serialization/data-types#inheritance-and-polymorphism","content":"Sometimes you might want to send a polymorphic data type to your commands. Mirage does not serialize the type name to keep messages small and for security reasons, therefore Mirage cannot figure out the type of object it received by looking at the message. caution This code does not work out of the box. class Item { public string name; } class Weapon : Item { public int hitPoints; } class Armor : Item { public int hitPoints; public int level; } class Player : NetworkBehaviour { [ServerRpc] void ServerRpcEquip(Item item) { // IMPORTANT: this does not work. Mirage will pass you an object of type item // even if you pass a weapon or an armor. if (item is Weapon weapon) { // The item is a weapon, // maybe you need to equip it in the hand } else if (item is Armor armor) { // you might want to equip armor in the body } } [ServerRpc] void ServerEquipArmor(Armor armor) { // IMPORTANT: this does not work either, you will receive an armor, but // the armor will not have a valid Item.name, even if you passed an armor with name } }  ServerRpcEquip will work if you provide a custom serializer for the Item type. For example:  public static class ItemSerializer { const byte WEAPON = 1; const byte ARMOR = 2; public static void WriteItem(this NetworkWriter writer, Item item) { if (item is Weapon weapon) { writer.WriteByte(WEAPON); writer.WriteString(weapon.name); writer.WritePackedInt32(weapon.hitPoints); } else if (item is Armor armor) { writer.WriteByte(ARMOR); writer.WriteString(armor.name); writer.WritePackedInt32(armor.hitPoints); writer.WritePackedInt32(armor.level); } } public static Item ReadItem(this NetworkReader reader) { byte type = reader.ReadByte(); switch(type) { case WEAPON: return new Weapon { name = reader.ReadString(), hitPoints = reader.ReadPackedInt32() }; case ARMOR: return new Armor { name = reader.ReadString(), hitPoints = reader.ReadPackedInt32(), level = reader.ReadPackedInt32() }; default: throw new Exception($&quot;Invalid weapon type {type}&quot;); } } }  "},{"title":"Scriptable Objects​","type":1,"pageTitle":"Data Types","url":"docs/guides/serialization/data-types#scriptable-objects","content":"People often want to send scriptable objects from the client or server. For example, you may have a bunch of swords created as scriptable objects and you want to put the equipped sword in a SyncVar. This will work fine, Mirage will generate a reader and writer for scriptable objects by calling ScriptableObject.CreateInstance and copy all the data. However, the generated reader and writer are not suitable for every occasion. Scriptable objects often reference other assets such as textures, prefabs, or other types that can't be serialized. Scriptable objects are often saved in the Resources folder or they can sometimes have a large amount of data in them. The generated reader and writers may not work or may be inefficient for these situations. Instead of passing the scriptable object data, you can pass the name and the other side can look up the same object by name. This way you can have any kind of data in your scriptable object. You can do that by providing a custom reader and writer. Here is an example: [CreateAssetMenu(fileName = &quot;New Armor&quot;, menuName = &quot;Armor Data&quot;)] class Armor : ScriptableObject { public int Hitpoints; public int Weight; public string Description; public Texture2D Icon; // ... } public static class ArmorSerializer { public static void WriteArmor(this NetworkWriter writer, Armor armor) { // No need to serialize the data, just the name of the armor. writer.WriteString(armor.name); } public static Armor ReadArmor(this NetworkReader reader) { // Load the same armor by name. The data will come from the asset in Resources folder. return Resources.Load&lt;Armor&gt;(reader.ReadString()); } }  "},{"title":"SyncPrefab","type":0,"sectionRef":"#","url":"docs/guides/serialization/sync-prefab","content":"","keywords":""},{"title":"Overview​","type":1,"pageTitle":"SyncPrefab","url":"docs/guides/serialization/sync-prefab#overview","content":"The SyncPrefab struct represents a prefab that is synchronized over the network. It has two properties: Prefab: A NetworkIdentity representing the prefab being synced.PrefabHash: An integer representing the hash of the prefab being synced. The PrefabHash is sent over the network so that the matching NetworkIdentity can be found on the other side. SyncPrefab can be used to set up local objects like visual effects, audio, or projectiles, without needing to spawn them over the network, making it ideal for short-lived objects. "},{"title":"Example Use Case​","type":1,"pageTitle":"SyncPrefab","url":"docs/guides/serialization/sync-prefab#example-use-case","content":"When the Shoot method is called on the server it will instantiates a local copy of the prefab. The RpcShoot is then called to send a message to all clients, Passing in a SyncPrefab object representing the prefab being synced. On the client side, the RpcShoot method finds the prefab from ClientObjectManager using the FindPrefab. It then instantiates a local clone of the prefab. tip Add [NetworkedPrefab] attribute to your inspector field to show if it is set up correctly. public class Shooter : NetworkBehaviour { // add [NetworkedPrefab] to ensure prefab is network object in inspector [NetworkedPrefab] public GameObject Prefab; // call this on server public void Shoot(Vector3 position, Quaternion rotation) { // spawn prefab locally var clone = Instantiate(Prefab, position, rotation); // then send to clients so they can also spawn locally RpcShoot(new SyncPrefab(Prefab.GetNetworkIdentity()), position, rotation); } [ClientRpc] public void RpcShoot(SyncPrefab syncPrefab, Vector3 position, Quaternion rotation) { // find prefab from objectManager var prefab = syncPrefab.FindPrefab(ClientObjectManager); // spawn prefab locally var clone = Instantiate(prefab, position, rotation); } }  "},{"title":"Generics","type":0,"sectionRef":"#","url":"docs/guides/serialization/generics","content":"","keywords":""},{"title":"NetworkBehaviour​","type":1,"pageTitle":"Generics","url":"docs/guides/serialization/generics#networkbehaviour","content":"By making a NetworkBehaviour generic you can then use generic SyncVar fields or use the generic in an RPC. public class MyGenericBehaviour&lt;T&gt; : NetworkBehaviour { [SyncVar] public T Value; public void MyRpc(T value) { // do stuff } }  danger Making the RPC itself generic does not work. For example, MyRpc&lt;T&gt;(T value) will not work. This is because the receiver will have no idea what generic to invoke the type as. "},{"title":"Ensure Type has Write and Read functions​","type":1,"pageTitle":"Generics","url":"docs/guides/serialization/generics#ensure-type-has-write-and-read-functions","content":"For a type to work as a generic, it must have a write and read that Mirage can find. For built-in types, this is done automatically (see Serialization). For custom types Mirage will try to automatically find them and generate functions, however, this does not always work. Adding [NetworkMessage] to the type will tell Mirage to generate functions for it. [NetworkMessage] public struct MyCustomType { public int Value; }  Alternatively, you can manually create Write and Read functions for your type public static class MyCustomTypeExtensions { public static void Write(this NetworkWriter writer, MyCustomType value) { // write here } public static MyCustomType Read(this NetworkReader reader) { // read here } }  "},{"title":"Network Messages and other types​","type":1,"pageTitle":"Generics","url":"docs/guides/serialization/generics#network-messages-and-other-types","content":"Generic messages are partly supported. Generic instances can be used as messages, For example, using MyMessage&lt;int&gt; in the example below. This also includes using generic types in RPC or inside other types as long they are generic instances. public struct MyMessage&lt;T&gt; { public T Value; } class Manager { void Start() { Server.MessageHandler.RegisterHandler&lt;MyMessage&lt;int&gt;&gt;(HandleMessage); } void HandleIntMessage(INetworkPlayer player, MyMessage&lt;int&gt; msg) { // do stuff } }  note Generic message should not have [NetworkMessage] because this cause Mirage to try to make a writer for the generic itself. Only generic instances (eg MyMessage&lt;int&gt;) can have serialize functions "},{"title":"SyncList, SyncDictionary, SyncSet​","type":1,"pageTitle":"Generics","url":"docs/guides/serialization/generics#synclist-syncdictionary-syncset","content":"SyncList, SyncDictionary, and SyncSet can have generic types as their element type as long as it is a generic instance (eg MyType&lt;int&gt; not MyType&lt;T&gt;). public struct MyType&lt;T&gt; { public bool Option; public T Value; } public class MyBehaviour : NetworkBehaviour { public SyncList&lt;MyType&lt;float&gt;&gt; myList; }  "},{"title":"State Synchronization","type":0,"sectionRef":"#","url":"docs/guides/sync/","content":"State Synchronization State synchronization refers to the synchronization of values such as integers, floating point numbers, strings, and boolean values belonging to scripts. State synchronization is done from the server to remote clients. The local client does not have data serialized to it. It does not need it, because it shares the scene with the server. However, SyncVar hooks are called on local clients. Data is not synchronized in the opposite direction - from remote clients to the server. To do this, you need to use Server RPC calls. SyncVar SyncVars are variables of scripts that inherit from NetworkBehaviour, which are synchronized from the server to clients. SyncList SyncLists contain lists of values and synchronize data from servers to clients.SyncDictionary A SyncDictionary is an associative array containing an unordered list of key, value pairs.SyncHashSet An unordered set of values that do not repeat.SyncSortedSet A sorted set of values that do not repeat.","keywords":""},{"title":"serialization-flow","type":0,"sectionRef":"#","url":"docs/guides/sync/serialization-flow","content":"","keywords":""},{"title":"Serialization Flow​","type":1,"pageTitle":"serialization-flow","url":"docs/guides/sync/serialization-flow#serialization-flow","content":"Game objects with the Network Identity component attached can have multiple scripts derived from NetworkBehaviour. The flow for serializing these game objects is: On the server: Each NetworkBehaviour has a dirty mask. This mask is available inside OnSerialize as syncVarDirtyBitsEach SyncVar in a NetworkBehaviour script is assigned a bit in the dirty mask.Changing the value of SyncVars causes the bit for that SyncVar to be set in the dirty maskAlternatively, calling SetDirtyBit writes directly to the dirty maskNetworkIdentity game objects are checked on the server as part of its update loopIf any NetworkBehaviours on a NetworkIdentity are dirty, then a UpdateVars packet is created for that game objectThe UpdateVars packet is populated by calling OnSerialize on each NetworkBehaviour on the game objectNetworkBehaviours that are not dirty write a zero to the packet for their dirty bitsNetworkBehaviours that are dirty write their dirty mask, then the values for the SyncVars that have changedIf OnSerialize returns true for a NetworkBehaviour, the dirty mask is reset for that NetworkBehaviour so it does not send again until its value changes.The UpdateVars packet is sent to ready clients that are observing the game object On the client: an UpdateVars packet is received for a game objectThe OnDeserialize function is called for each NetworkBehaviour script on the game objectEach NetworkBehaviour script on the game object reads a dirty mask.If the dirty mask for a NetworkBehaviour is zero, the OnDeserialize function returns without reading any moreIf the dirty mask is a non-zero value, then the OnDeserialize function reads the values for the SyncVars that correspond to the dirty bits that are setIf there are SyncVar hook functions, those are invoked with the value read from the stream. "},{"title":"Advanced Synchronization","type":0,"sectionRef":"#","url":"docs/guides/sync/custom-serialization","content":"","keywords":""},{"title":"Custom Serialization Functions​","type":1,"pageTitle":"Advanced Synchronization","url":"docs/guides/sync/custom-serialization#custom-serialization-functions","content":"To perform your own custom serialization, you can implement virtual functions on NetworkBehaviour to be used for SyncVar serialization. These functions are: public virtual bool OnSerialize(NetworkWriter writer, bool initialState);  public virtual void OnDeserialize(NetworkReader reader, bool initialState);  Use the initialState flag to differentiate between the first time a game object is serialized and when incremental updates can be sent. The first time a game object is sent to a client, it must include a full state snapshot, but subsequent updates can save on bandwidth by including only incremental changes. The OnSerialize function should return true to indicate that an update should be sent. If it returns true, the dirty bits for that script are set to zero. If it returns false, the dirty bits are not changed. This allows multiple changes to a script to be accumulated over time and sent when the system is ready, instead of every frame. The OnSerialize function is only called for initialState or when the NetworkBehaviour is dirty. A NetworkBehaviour will only be dirty if a SyncVar or SyncObject (e.g. SyncList) has changed since the last OnSerialize call. After data has been sent the NetworkBehaviour will not be dirty again until the next syncInterval (set in the inspector). A NetworkBehaviour can also be marked as dirty by manually calling SetDirtyBit (this does not bypass the syncInterval limit). Although this works, it is usually better to let Mirage generate these methods and provide custom serializers for your specific field. "},{"title":"Code Generation","type":0,"sectionRef":"#","url":"docs/guides/sync/code-generation","content":"Code Generation So for this script: using Mirage; public class Data : NetworkBehaviour { [SyncVar(hook = nameof(OnInt1Changed))] public int int1 = 66; [SyncVar] public int int2 = 23487; [SyncVar] public string MyString = &quot;Example string&quot;; void OnInt1Changed(int oldValue, int newValue) { // do something here } } The following sample shows the code that is generated by Mirage for the SerializeSyncVars function which is called inside NetworkBehaviour.OnSerialize: public override bool SerializeSyncVars(NetworkWriter writer, bool initialState) { // Write any SyncVars in base class bool written = base.SerializeSyncVars(writer, forceAll); if (initialState) { // The first time a game object is sent to a client, send all the data (and no dirty bits) writer.WritePackedUInt32((uint)this.int1); writer.WritePackedUInt32((uint)this.int2); writer.Write(this.MyString); return true; } else { // Writes which SyncVars have changed writer.WritePackedUInt64(base.syncVarDirtyBits); if ((base.get_syncVarDirtyBits() &amp; 1u) != 0u) { writer.WritePackedUInt32((uint)this.int1); written = true; } if ((base.get_syncVarDirtyBits() &amp; 2u) != 0u) { writer.WritePackedUInt32((uint)this.int2); written = true; } if ((base.get_syncVarDirtyBits() &amp; 4u) != 0u) { writer.Write(this.MyString); written = true; } return written; } } The following sample shows the code that is generated by Mirage for the DeserializeSyncVars function which is called inside NetworkBehaviour.OnDeserialize: public override void DeserializeSyncVars(NetworkReader reader, bool initialState) { // Read any SyncVars in base class base.DeserializeSyncVars(reader, initialState); if (initialState) { // The first time a game object is sent to a client, read all the data (and no dirty bits) int oldInt1 = this.int1; this.int1 = (int)reader.ReadPackedUInt32(); // if old and new values are not equal, call hook if (!base.SyncVarEqual&lt;int&gt;(num, ref this.int1)) { this.OnInt1Changed(num, this.int1); } this.int2 = (int)reader.ReadPackedUInt32(); this.MyString = reader.ReadString(); return; } int dirtySyncVars = (int)reader.ReadPackedUInt32(); // is 1st SyncVar dirty if ((dirtySyncVars &amp; 1) != 0) { int oldInt1 = this.int1; this.int1 = (int)reader.ReadPackedUInt32(); // if old and new values are not equal, call hook if (!base.SyncVarEqual&lt;int&gt;(num, ref this.int1)) { this.OnInt1Changed(num, this.int1); } } // is 2nd SyncVar dirty if ((dirtySyncVars &amp; 2) != 0) { this.int2 = (int)reader.ReadPackedUInt32(); } // is 3rd SyncVar dirty if ((dirtySyncVars &amp; 4) != 0) { this.MyString = reader.ReadString(); } } If a NetworkBehaviour has a base class that also has serialization functions, the base class functions should also be called.","keywords":""},{"title":"Sync Hash Set","type":0,"sectionRef":"#","url":"docs/guides/sync/sync-objects/sync-hash-set","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Sync Hash Set","url":"docs/guides/sync/sync-objects/sync-hash-set#usage","content":"Create a class that derives from SyncHashSet for your specific type. This is necessary because Mirage will add methods to that class with the weaver. Then add a SyncHashSet field to your NetworkBehaviour class. For example: IMPORTANT You need to initialize the SyncHashSet immediately after the definition in order for them to work. You can mark them as readonly to enforce proper usage. "},{"title":"Basic example​","type":1,"pageTitle":"Sync Hash Set","url":"docs/guides/sync/sync-objects/sync-hash-set#basic-example","content":"[System.Serializable] public class SyncSkillSet : SyncHashSet&lt;string&gt; {} public class Player : NetworkBehaviour { [SerializeField] readonly SyncSkillSet skills = new SyncSkillSet(); int skillPoints = 10; [Command] public void CmdLearnSkill(string skillName) { if (skillPoints &gt; 1) { skillPoints--; skills.Add(skillName); } } }  Callbacks You can detect when a SyncHashSet changes on the client and/or the server. This is especially useful for refreshing your UI, character appearance, etc. Subscribe to the Callback event typically during Start, OnClientStart, or OnServerStart for that. note Note that by the time you subscribe, the set will already be initialized, so you will not get a call for the initial data, only updates. [System.Serializable] public class SyncSetBuffs : SyncHashSet&lt;string&gt; {}; public class Player : NetworkBehaviour { [SerializeField] public readonly SyncSetBuffs buffs = new SyncSetBuffs(); // this will add the delegate on the client. // Use OnStartServer instead if you want it on the server public override void OnStartClient() { buffs.Callback += OnBuffsChanged; } private void OnBuffsChanged(SyncSetBuffs.Operation op, string buff) { switch (op) { case SyncSetBuffs.Operation.OP_ADD: // we added a buff, draw an icon on the character break; case SyncSetBuffs.Operation.OP_CLEAR: // clear all buffs from the character break; case SyncSetBuffs.Operation.OP_REMOVE: // We removed a buff from the character break; } } }  "},{"title":"Sync Dictionary","type":0,"sectionRef":"#","url":"docs/guides/sync/sync-objects/sync-dictionary","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Sync Dictionary","url":"docs/guides/sync/sync-objects/sync-dictionary#usage","content":"Add a field of type SyncDictionary on any NetworkBehaviour where TKey and TValue can be any supported Mirage type and initialize it. IMPORTANT You need to initialize the SyncDictionary immediately after the definition for them to work. You can mark them as readonly to enforce proper usage. "},{"title":"Basic example​","type":1,"pageTitle":"Sync Dictionary","url":"docs/guides/sync/sync-objects/sync-dictionary#basic-example","content":"using UnityEngine; using Mirage; using Mirage.Collections; [System.Serializable] public struct Item { public string name; public int hitPoints; public int durability; } public class Player : NetworkBehaviour { public readonly SyncDictionary&lt;stirng, Item&gt; equipment = new SyncDictionary&lt;string, Item&gt;(); private void Awake() { Identity.OnStartServer.AddListener(OnStartServer); } private void OnStartServer() { equipment.Add(&quot;head&quot;, new Item { name = &quot;Helmet&quot;, hitPoints = 10, durability = 20 }); equipment.Add(&quot;body&quot;, new Item { name = &quot;Epic Armor&quot;, hitPoints = 50, durability = 50 }); equipment.Add(&quot;feet&quot;, new Item { name = &quot;Sneakers&quot;, hitPoints = 3, durability = 40 }); equipment.Add(&quot;hands&quot;, new Item { name = &quot;Sword&quot;, hitPoints = 30, durability = 15 }); } }  "},{"title":"Callbacks​","type":1,"pageTitle":"Sync Dictionary","url":"docs/guides/sync/sync-objects/sync-dictionary#callbacks","content":"You can detect when a SyncDictionary changes on the client and/or server. This is especially useful for refreshing your UI, character appearance, etc. There are different callbacks for different operations, such as OnChange (any change to the dictionary), OnInsert (adding a new element), etc. Please check the SyncDictionary API reference for the complete list of callbacks. Depending on where you want to invoke the callbacks, you can use these methods to register them: Awake for both client and serverIdentity.OnStartServer event for server-onlyIdentity.OnStartClient event for client-only note By the time you subscribe, the dictionary will already be initialized, so you will not get a call for the initial data, only updates. "},{"title":"Example​","type":1,"pageTitle":"Sync Dictionary","url":"docs/guides/sync/sync-objects/sync-dictionary#example","content":"using Mirage; using Mirage.Collections; public class Player : NetworkBehaviour { public readonly SyncDictionary&lt;stirng, Item&gt; equipment = new SyncDictionary&lt;string, Item&gt;(); public readonly SyncDictionary&lt;stirng, Item&gt; hotbar = new SyncDictionary&lt;string, Item&gt;(); // This will hook the callback on both server and client private void Awake() { equipment.OnChange += UpdateEquipment; Identity.OnStartClient.AddListener(OnStartClient); } // Hotbar changes will only be invoked on clients private void OnStartClient() { hotbar.OnChange += UpdateHotbar; } private void UpdateEquipment() { // Here you can refresh your UI for instance } private void UpdateHotbar() { // Here you can refresh your UI for instance } }  By default, SyncDictionary uses a Dictionary to store its data. If you want to use a different dictionary implementation, add a constructor and pass the dictionary implementation to the parent constructor. For example: public SyncDictionary&lt;string, Item&gt; myDict = new SyncIDictionary&lt;string, Item&gt;(new MyDictionary&lt;string, Item&gt;());  "},{"title":"Sync List","type":0,"sectionRef":"#","url":"docs/guides/sync/sync-objects/sync-list","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Sync List","url":"docs/guides/sync/sync-objects/sync-list#usage","content":"Add a field of type SyncList on any NetworkIdentity where T can be any supported Mirage type and initialize it. IMPORTANT You need to initialize the SyncList immediately after the definition for them to work. You can mark them as readonly to enforce proper usage. "},{"title":"Basic example​","type":1,"pageTitle":"Sync List","url":"docs/guides/sync/sync-objects/sync-list#basic-example","content":"using Mirage; using Mirage.Collections; [System.Serializable] public struct Item { public string name; public int amount; public Color32 color; } public class Player : NetworkBehaviour { private readonly SyncList&lt;Item&gt; inventory = new SyncList&lt;Item&gt;(); public int coins = 100; [ServerRpc] public void Purchase(string itemName) { if (coins &gt; 10) { coins -= 10; Item item = new Item { name = &quot;Sword&quot;, amount = 3, color = new Color32(125, 125, 125, 255) }; // During next synchronization, all clients will see the item inventory.Add(item); } } }  "},{"title":"Callbacks​","type":1,"pageTitle":"Sync List","url":"docs/guides/sync/sync-objects/sync-list#callbacks","content":"You can detect when a SyncList changes on the client and/or server. This is especially useful for refreshing your UI, character appearance, etc. There are different callbacks for different operations, such as OnChange (any change to the list), OnInsert (adding a new element), etc. Please check the SyncList API reference for the complete list of callbacks. Depending on where you want to invoke the callbacks, you can use these methods to register them: Awake for both client and serverIdentity.OnStartServer event for server-onlyIdentity.OnStartClient event for client-only note By the time you subscribe, the list will already be initialized, so you will not get a call for the initial data, only updates. "},{"title":"Example​","type":1,"pageTitle":"Sync List","url":"docs/guides/sync/sync-objects/sync-list#example","content":"using Mirage; using Mirage.Collections; public class Player : NetworkBehaviour { private readonly SyncList&lt;Item&gt; inventory = new SyncList&lt;Item&gt;(); private readonly SyncList&lt;Item&gt; hotbar = new SyncList&lt;Item&gt;(); // This will hook the callback on both server and client private void Awake() { inventory.OnChange += UpdateInventory; Identity.OnStartClient.AddListener(OnStartClient); } // Hotbar changes will only be invoked on clients private void OnStartClient() { hotbar.OnChange += UpdateHotbar; } private void UpdateInventory() { // Here you can refresh your UI for instance } private void UpdateHotbar() { // Here you can refresh your UI for instance } }  By default, SyncList uses a List to store its data. If you want to use a different list implementation, add a constructor and pass the list implementation to the parent constructor. For example: public SyncList&lt;Item&gt; myList = new SyncList&lt;Item&gt;(new MyIList&lt;Item&gt;());  "},{"title":"Sync Sorted Set","type":0,"sectionRef":"#","url":"docs/guides/sync/sync-objects/sync-sorted-set","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Sync Sorted Set","url":"docs/guides/sync/sync-objects/sync-sorted-set#usage","content":"Create a class that derives from SyncSortedSet for your specific type. This is necessary because Mirage will add methods to that class with the weaver. Then add a SyncSortedSet field to your NetworkBehaviour class. For example: IMPORTANT You need to initialize the SyncSortedSet immediately after the definition for them to work. You can mark them as readonly to enforce proper usage. class Player : NetworkBehaviour { class SyncSkillSet : SyncSortedSet&lt;string&gt; {} readonly SyncSkillSet skills = new SyncSkillSet(); int skillPoints = 10; [Command] public void CmdLearnSkill(string skillName) { if (skillPoints &gt; 1) { skillPoints--; skills.Add(skillName); } } }  You can also detect when a SyncSortedSet changes. This is useful for refreshing your character in the client or determining when you need to update your database. Subscribe to the Callback event typically during Start, OnClientStart, or OnServerStart for that. note That by the time you subscribe, the set will already be initialized, so you will not get a call for the initial data, only updates. public class Player : NetworkBehaviour { private class SyncSetBuffs : SyncSortedSet&lt;string&gt; {}; private readonly SyncSetBuffs buffs = new SyncSetBuffs(); // This will add the delegate on the client. // Use OnStartServer instead if you want it on the server public override void OnStartClient() { buffs.Callback += OnBuffsChanged; } private void OnBuffsChanged(SyncSetBuffs.Operation op, string buff) { switch (op) { case SyncSetBuffs.Operation.OP_ADD: // we added a buff, draw an icon on the character break; case SyncSetBuffs.Operation.OP_CLEAR: // clear all buffs from the character break; case SyncSetBuffs.Operation.OP_REMOVE: // We removed a buff from the character break; } } }  "},{"title":"Sync Var Hooks","type":0,"sectionRef":"#","url":"docs/guides/sync/sync-var-hooks","content":"","keywords":""},{"title":"When is hook invoked?​","type":1,"pageTitle":"Sync Var Hooks","url":"docs/guides/sync/sync-var-hooks#when-is-hook-invoked","content":"The following is a list of rules that SyncVar hooks follows for when and where they are invoked: Hooks are only invoked if value is changed and after the value is updated When settings SyncVar both flags false invokes if host (both Server AND client active) invokeHookOnOwner flag true invokes if owner invokeHookOnServer flag true invokes if server (includes host mode) both flags true invokes if owner OR server DeserializeSyncVars is never called on host sending update to itself, but is called when owner sends update to server Hooks are invoked in DeserializeSyncVars if values changes Always invokes if Only client (eg not host mode)Invoked after the variable is updated with the deserialized value.invokeHookOnServer Invokes on server (eg when an change is send from owner) "},{"title":"Mirage.Authentication","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Authentication","url":"docs/reference/Mirage.Authentication/#classes","content":"AuthenticatorSettings​ AuthenticatorSettings.PendingAuth​ NetworkAuthenticator​ NetworkAuthenticator&lt;T&gt;​ PlayerAuthentication​ "},{"title":"Structs​","type":1,"pageTitle":"Mirage.Authentication","url":"docs/reference/Mirage.Authentication/#structs","content":"AuthMessage​ Wrapper message around auth message sent by a This type is used to that it can be receive before player is authenticated. ALl AuthMessage will be handled by an Authenticator instead of the normal message handler AuthSuccessMessage​ AuthenticationResult​ Result from Authentication, Use static methods to create new instance "},{"title":"Interfaces​","type":1,"pageTitle":"Mirage.Authentication","url":"docs/reference/Mirage.Authentication/#interfaces","content":"IAuthenticationDataWrapper​ Auth data might be a wrapper around another Authenticator's data. In that case should check if data is T or if it is IDataWrapper INetworkAuthenticator​ "},{"title":"Sync Settings","type":0,"sectionRef":"#","url":"docs/guides/sync/sync-settings","content":"","keywords":""},{"title":"Sync Direction​","type":1,"pageTitle":"Sync Settings","url":"docs/guides/sync/sync-settings#sync-direction","content":"SyncDirection determines which directions changes are sent. The default sync direction is from Server to both Owner and Observers. The directions can be set per NetworkBehaviour, which means that different components can have different sync directions. For example, a PlayerName component can be set to sync from the Owner and a Health component from the Server. Valid sync directions include: Sync from Server to Owner and/or Observers (Default)Sync from Owner to Server and/or ObserversSync from both Owner and Server to Observers onlyNo sync direction (None to None), nothing will be synced. Invalid sync directions include: Sync from None to any directionSync from Owner to None or Server to NoneSync from Server to Owner onlySync from both Owner and Server to Owner only note ObserversOnly excludes the Owner. In order to sync to owner the Owner Flag must be set. If syncing from both Owner and Server at the same time, there will be a race condition. If they both update a value at the same time, they will both send an update to the other side which will set the value and cause them to be out of sync. While this option is allowed, it is advised to only sync from either Server or Owner. [Flags/Bitmasks] The SyncFrom and SyncTo fields are flag enums. This means you can combine multiple values. For example, in SyncTo you can select both Owner and ObserversOnly to send data to both. These enums work as bitmasks, so combining flags is done using a bitwise OR operation. It is important to understand how the None flag works. When you combine None with another flag, like Owner, the result is just Owner, the None flag is essentially ignored. Some UI might display the enum as None | Owner, but this simply means that only the Owner flag is active. "},{"title":"When to use Server to Owner​","type":1,"pageTitle":"Sync Settings","url":"docs/guides/sync/sync-settings#when-to-use-server-to-owner","content":"In some case you don't want some data to be visible to other players. By disabling the ObserversOnly flag Mirage will only send data to the Player that owns the object. For example, suppose you are making an inventory system. Suppose players A, B, and C are in the same area. There will be a total of 12 objects in the entire network, objects in bold are owned by that client: Client A has Player A, Player B, and Player CClient B has Player A, Player B, and Player CClient C has Player A, Player B, and Player CThe server has Player A, Player B, Player C each one of them would have an Inventory component Suppose Player A picks up some loot. The server adds the loot to Player's A inventory, which could have a SyncLists of Items. By default, Mirage now has to synchronize player A's inventory everywhere, which means sending an update message to client A, client B, and client C, because they all have a copy of Player A. This is wasteful, Client B and Client C do not need to know about Player's A inventory, they never see it on screen. It is also a security problem, someone could hack the client and display other people's inventory and use it to their advantage. By only having SyncTo.Owner set the server will only send then Player A's to Client A, Player B's to Client B, etc. It might not seem like much of a waste with only 3 players, but say if you have 50 instead the that is a lot of extra data to sending to each client. Other typical use cases include quests, player's hand in a card game, skills, experience, or any other data you don't need to share with other players. "},{"title":"Sync Timing​","type":1,"pageTitle":"Sync Settings","url":"docs/guides/sync/sync-settings#sync-timing","content":"The SyncTiming determines how the minium time between changes being sent. Values are not sent unless they are changed or manually set as dirty. The SyncTiming enum has the following values: VariableFixedNoInterval Variable and Fixed will use the Interval field to determine how often changes are sent. NoInterval will sent changes next time Update is run "},{"title":"Variable​","type":1,"pageTitle":"Sync Settings","url":"docs/guides/sync/sync-settings#variable","content":"The Variable timing mode waits for at least the specified Interval time after the last sync before sending again. This timing mode is best used when values don't change often or for non-time-critical data. Compared to the Fixed timing mode, the Variable timing mode sends data less often for the same Interval. "},{"title":"Fixed​","type":1,"pageTitle":"Sync Settings","url":"docs/guides/sync/sync-settings#fixed","content":"The Fixed timing mode ensures that data is sent every Interval if changed. This timing mode is best used for data that changes often and you want exactly (1 / Interval) updates per second. The Fixed timing mode has a more consistent sync time compared to the Variable timing mode. Example of Fixed vs Variable​ For example, if Interval is 0.1, the Fixed timing mode will send data at a constant rate of 10 times per second, while the Variable timing mode will depend more on the deltaTime and may send data at irregular intervals. This means that Variable mode will send less often/ "},{"title":"NoInterval​","type":1,"pageTitle":"Sync Settings","url":"docs/guides/sync/sync-settings#nointerval","content":"The NoInterval timing mode ignores SyncSettings.Interval and sends changes in the next update. This timing mode is best used for scenarios where data changes frequently and sending updates as soon as possible is desired. "},{"title":"When are changes sent?​","type":1,"pageTitle":"Sync Settings","url":"docs/guides/sync/sync-settings#when-are-changes-sent","content":"When a value is changed, the corresponding NetworkBehaviour is added to a list of dirty objects. This list is then looped over during each update, and changes are sent while taking the SyncInterval into account. This means that the server only has to loop over a small number of objects each frame - only the objects that have changed. This is a significant improvement in performance, especially when there are a large number of idle network objects. In contrast, other networking solutions like Mirror Networking loop over every object every update, regardless of whether it has changed or not. Because of this improvement, certain tasks can be accomplished more easily in Mirage. For example, if you have a forest with individual trees represented by NetworkIdentity, they will not add any performance cost unless the player interacts with them. This allows you to use RPCs and SyncVars on each tree, making it easier to create network features without needing workarounds for performance reasons. "},{"title":"Class AuthenticatorSettings","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/AuthenticatorSettings","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class AuthenticatorSettings","url":"docs/reference/Mirage.Authentication/AuthenticatorSettings#fields","content":"TimeoutSeconds​ Declaration​ public int TimeoutSeconds  RequireHostToAuthenticate​ Declaration​ public bool RequireHostToAuthenticate  Authenticators​ Declaration​ public List&lt;NetworkAuthenticator&gt; Authenticators  "},{"title":"Methods​","type":1,"pageTitle":"Class AuthenticatorSettings","url":"docs/reference/Mirage.Authentication/AuthenticatorSettings#methods","content":"Setup(NetworkServer)​ Declaration​ public void Setup(NetworkServer server)  Parameters​ Type\tName\tDescriptionMirage.NetworkServer\tserver\t ServerAuthenticate(INetworkPlayer)​ Declaration​ public UniTask&lt;AuthenticationResult&gt; ServerAuthenticate(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\t Returns​ Type\tDescriptionUniTask&lt;Mirage.Authentication.AuthenticationResult&gt;\t GetCancellationToken(INetworkPlayer)​ Declaration​ public CancellationToken GetCancellationToken(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\t Returns​ Type\tDescriptionSystem.Threading.CancellationToken\t "},{"title":"Struct AuthenticationResult","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/AuthenticationResult","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Struct AuthenticationResult","url":"docs/reference/Mirage.Authentication/AuthenticationResult#properties","content":"Success​ Declaration​ public bool Success { get; }  Authenticator​ Which Authenticator gave success Declaration​ public INetworkAuthenticator Authenticator { get; }  Data​ Auth data from Success, will be set on INetworkPlayer Declaration​ public object Data { get; }  Reason​ Can be reason for Success of fail Declaration​ public string Reason { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Struct AuthenticationResult","url":"docs/reference/Mirage.Authentication/AuthenticationResult#methods","content":"CreateSuccess(String)​ Declaration​ public static AuthenticationResult CreateSuccess(string reason)  Parameters​ Type\tName\tDescriptionSystem.String\treason\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t CreateSuccess(INetworkAuthenticator, Object)​ Declaration​ public static AuthenticationResult CreateSuccess(INetworkAuthenticator authenticator, object data)  Parameters​ Type\tName\tDescriptionMirage.Authentication.INetworkAuthenticator\tauthenticator System.Object\tdata\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t CreateSuccess(String, INetworkAuthenticator, Object)​ Declaration​ public static AuthenticationResult CreateSuccess(string reason, INetworkAuthenticator authenticator, object data)  Parameters​ Type\tName\tDescriptionSystem.String\treason Mirage.Authentication.INetworkAuthenticator\tauthenticator System.Object\tdata\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t CreateFail(String)​ Declaration​ public static AuthenticationResult CreateFail(string reason)  Parameters​ Type\tName\tDescriptionSystem.String\treason\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t CreateFail(String, INetworkAuthenticator)​ Declaration​ public static AuthenticationResult CreateFail(string reason, INetworkAuthenticator authenticator)  Parameters​ Type\tName\tDescriptionSystem.String\treason Mirage.Authentication.INetworkAuthenticator\tauthenticator\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t "},{"title":"Class AuthenticatorSettings.PendingAuth","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/AuthenticatorSettings.PendingAuth","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class AuthenticatorSettings.PendingAuth","url":"docs/reference/Mirage.Authentication/AuthenticatorSettings.PendingAuth#fields","content":"CancelSource​ Declaration​ public readonly CancellationTokenSource CancelSource  "},{"title":"Methods​","type":1,"pageTitle":"Class AuthenticatorSettings.PendingAuth","url":"docs/reference/Mirage.Authentication/AuthenticatorSettings.PendingAuth#methods","content":"SetResult(AuthenticationResult)​ Declaration​ public void SetResult(AuthenticationResult result)  Parameters​ Type\tName\tDescriptionMirage.Authentication.AuthenticationResult\tresult\t WaitWithTimeout(Single)​ Declaration​ public UniTask&lt;AuthenticationResult&gt; WaitWithTimeout(float timeoutSecond)  Parameters​ Type\tName\tDescriptionSystem.Single\ttimeoutSecond\t Returns​ Type\tDescriptionUniTask&lt;Mirage.Authentication.AuthenticationResult&gt;\t "},{"title":"Struct AuthMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/AuthMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct AuthMessage","url":"docs/reference/Mirage.Authentication/AuthMessage#fields","content":"Payload​ Declaration​ public ArraySegment&lt;byte&gt; Payload  "},{"title":"Struct AuthSuccessMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/AuthSuccessMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct AuthSuccessMessage","url":"docs/reference/Mirage.Authentication/AuthSuccessMessage#fields","content":"AuthenticatorName​ Declaration​ public string AuthenticatorName  "},{"title":"Interface IAuthenticationDataWrapper","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/IAuthenticationDataWrapper","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface IAuthenticationDataWrapper","url":"docs/reference/Mirage.Authentication/IAuthenticationDataWrapper#properties","content":"Inner​ Declaration​ object Inner { get; }  "},{"title":"Interface INetworkAuthenticator","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/INetworkAuthenticator","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface INetworkAuthenticator","url":"docs/reference/Mirage.Authentication/INetworkAuthenticator#properties","content":"AuthenticatorName​ Declaration​ string AuthenticatorName { get; }  "},{"title":"Class NetworkAuthenticator","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/NetworkAuthenticator","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class NetworkAuthenticator","url":"docs/reference/Mirage.Authentication/NetworkAuthenticator#properties","content":"AuthenticatorName​ Declaration​ public virtual string AuthenticatorName { get; }  "},{"title":"Sync Var","type":0,"sectionRef":"#","url":"docs/guides/sync/sync-var","content":"","keywords":""},{"title":"Example​","type":1,"pageTitle":"Sync Var","url":"docs/guides/sync/sync-var#example","content":"Let's have a simple Player class with the following code: using Mirage; using UnityEngine; public class Player : NetworkBehaviour { [SyncVar] public int clickCount; private void Update() { if (IsLocalPlayer &amp;&amp; Input.GetMouseButtonDown(0)) { ServerRpc_IncreaseClicks(); } } [ServerRpc] public void ServerRpc_IncreaseClicks() { // This is executed on the server clickCount++; } }  In this example, when Player A clicks the left mouse button, he sends a ServerRpc to the server where the clickCount SyncVar is incremented. All other visible players will be informed about Player A's new clickCount value. "},{"title":"Class inheritance​","type":1,"pageTitle":"Sync Var","url":"docs/guides/sync/sync-var#class-inheritance","content":"SyncVars work with class inheritance. Consider this example: private class Pet : NetworkBehaviour { [SyncVar] private string name; } private class Cat : Pet { [SyncVar] private Color32 color; }  You can attach the Cat component to your cat prefab, and it will synchronize both its name and color. caution Both Cat and Pet should be in the same assembly. If they are in separate assemblies, make sure not to change name from inside Cat directly, add a method to Pet instead. "},{"title":"SyncVar hook​","type":1,"pageTitle":"Sync Var","url":"docs/guides/sync/sync-var#syncvar-hook","content":"The hook option of SyncVar attribute can be used to specify a function to be called when the SyncVar changes value on the client and server. For more information on SyncVar hooks see Sync Var Hooks "},{"title":"Example Client Only​","type":1,"pageTitle":"Sync Var","url":"docs/guides/sync/sync-var#example-client-only","content":"Below is a simple example of assigning a random color to each player when they're spawned on the server. All clients will see all players in the correct colors, even if they join later. using UnityEngine; using Mirage; public class Player : NetworkBehaviour { [SyncVar(hook = nameof(UpdateColor))] private Color playerColor = Color.black; private Renderer renderer; // Unity makes a clone of the Material every time renderer.material is used. // Cache it here and Destroy it in OnDestroy to prevent a memory leak. private Material cachedMaterial; private void Awake() { renderer = GetComponent&lt;Renderer&gt;(); Identity.OnStartServer.AddListener(OnStartServer); } private void OnStartServer() { playerColor = Random.ColorHSV(0f, 1f, 1f, 1f, 0.5f, 1f); } private void UpdateColor(Color oldColor, Color newColor) { // this is executed on this player for each client if (cachedMaterial == null) { cachedMaterial = renderer.material; } cachedMaterial.color = newColor; } private void OnDestroy() { Destroy(cachedMaterial); } }  "},{"title":"Example Client & Server​","type":1,"pageTitle":"Sync Var","url":"docs/guides/sync/sync-var#example-client--server","content":"Below is a simple example of assigning a random color to each player when they're spawned on the server. All clients will see all players in the correct colors, even if they join later, the server will also fire the event. using UnityEngine; using Mirage; public class Player : NetworkBehaviour { [SyncVar(hook = nameof(UpdateColor), invokeHookOnServer = true)] private Color playerColor = Color.black; private Renderer renderer; // Unity makes a clone of the Material every time renderer.material is used. // Cache it here and Destroy it in OnDestroy to prevent a memory leak. private Material cachedMaterial; private void Awake() { renderer = GetComponent&lt;Renderer&gt;(); Identity.OnStartServer.AddListener(OnStartServer); } private void OnStartServer() { playerColor = Random.ColorHSV(0f, 1f, 1f, 1f, 0.5f, 1f); } private void UpdateColor(Color oldColor, Color newColor) { // this is executed on this player for each client if (cachedMaterial == null) { cachedMaterial = renderer.material; } cachedMaterial.color = newColor; } private void OnDestroy() { Destroy(cachedMaterial); } }  "},{"title":"SyncVar Initialize Only​","type":1,"pageTitle":"Sync Var","url":"docs/guides/sync/sync-var#syncvar-initialize-only","content":"Just like regular SyncVars, when a game object is spawned, or a new player joins a game in progress, they are sent the latest state of all SyncVars on networked objects that are visible to them. With the initialOnly flag set to true you will now be able to control the state of the SyncVar manually rather than waiting for Mirage to update them. note Make sure you manually update your observable clients with the new state. Syncvar Hooks become redundant, as you are setting the state of the Syncvar directly. "},{"title":"Example​","type":1,"pageTitle":"Sync Var","url":"docs/guides/sync/sync-var#example-1","content":"using Mirage; using UnityEngine; public class Player : NetworkBehaviour { [SyncVar(initialOnly = true)] private int weaponId; private void Awake() { Identity.OnStartClient.AddListener(OnStartClient); } private void OnStartClient() { // Update weapon using id from syncvar (sent to client via spawn message UpdateWeapon(weaponId); } private void Update() { if (Input.GetKeyDown(KeyCode.Q)) { // Client Request weapon change ServerRpc_SetSyncVarWeaponId(7); } } [ServerRpc] private void ServerRpc_SetSyncVarWeaponId(int weaponId) { // Set weapon id on server so new players get it this.weaponId = weaponId; // Tell current players about it ClientRpc_SetSyncVarWeaponId(weaponId); // Update weapon on server UpdateWeapon(weaponId); } [ClientRpc] private void ClientRpc_SetSyncVarWeaponId(int weaponId) { // Set id on client this.weaponId = weaponId; // Update weapon on client UpdateWeapon(weaponId); } public void UpdateWeapon(int weaponId) { // Do stuff to update weapon here // For example, its spawning model } }  "},{"title":"Class PlayerAuthentication","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/PlayerAuthentication","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class PlayerAuthentication","url":"docs/reference/Mirage.Authentication/PlayerAuthentication#constructors","content":"PlayerAuthentication(INetworkAuthenticator, Object)​ Declaration​ public PlayerAuthentication(INetworkAuthenticator authenticator, object data)  Parameters​ Type\tName\tDescriptionMirage.Authentication.INetworkAuthenticator\tauthenticator System.Object\tdata\t "},{"title":"Fields​","type":1,"pageTitle":"Class PlayerAuthentication","url":"docs/reference/Mirage.Authentication/PlayerAuthentication#fields","content":"Authenticator​ What Authenticator was used to accept this player Null if no Authenticator existed on Server Declaration​ public readonly INetworkAuthenticator Authenticator  Data​ Authentication data set by Authenticator when player is accepted Declaration​ public readonly object Data  "},{"title":"Methods​","type":1,"pageTitle":"Class PlayerAuthentication","url":"docs/reference/Mirage.Authentication/PlayerAuthentication#methods","content":"GetData&lt;T&gt;()​ Helper method to cast to type set by NetworkAuthenticatorBase WARNING: this function is NOT thread safe when data is rather than T directly Declaration​ public T GetData&lt;T&gt;()  Returns​ Type\tDescriptionT\t "},{"title":"Class NetworkAuthenticator<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authentication/NetworkAuthenticator-1","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class NetworkAuthenticator<T>","url":"docs/reference/Mirage.Authentication/NetworkAuthenticator-1#methods","content":"AuthenticateAsync(INetworkPlayer, T, CancellationToken)​ Called on server to Authenticate a message from client Use OR . By default the async version just call the normal version. Declaration​ protected virtual UniTask&lt;AuthenticationResult&gt; AuthenticateAsync(INetworkPlayer player, T message, CancellationToken cancellationToken)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tplayer that send message T\tmessage System.Threading.CancellationToken\tcancellationToken\t Returns​ Type\tDescriptionUniTask&lt;Mirage.Authentication.AuthenticationResult&gt;\t Authenticate(INetworkPlayer, T)​ Called on server to Authenticate a message from client Use OR . By default the async version just call the normal version. Declaration​ protected virtual AuthenticationResult Authenticate(INetworkPlayer player, T message)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer T\tmessage\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t SendAuthentication(NetworkClient, T)​ Sends Authentication from client Declaration​ public void SendAuthentication(NetworkClient client, T message)  Parameters​ Type\tName\tDescriptionMirage.NetworkClient\tclient T\tmessage\t "},{"title":"Mirage.Authenticators.SessionId","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Authenticators.SessionId","url":"docs/reference/Mirage.Authenticators.SessionId/#classes","content":"ClientSession​ CreateSession​ Creates a session to be used by SessionData​ SessionIdAuthenticator​ "},{"title":"Structs​","type":1,"pageTitle":"Mirage.Authenticators.SessionId","url":"docs/reference/Mirage.Authenticators.SessionId/#structs","content":"RequestSessionMessage​ SessionKeyMessage​ "},{"title":"Interfaces​","type":1,"pageTitle":"Mirage.Authenticators.SessionId","url":"docs/reference/Mirage.Authenticators.SessionId/#interfaces","content":"ISessionIdStore​ "},{"title":"Class ClientSession","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/ClientSession","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ClientSession","url":"docs/reference/Mirage.Authenticators.SessionId/ClientSession#fields","content":"Timeout​ Declaration​ public DateTime Timeout  Key​ Declaration​ public byte[] Key  "},{"title":"Methods​","type":1,"pageTitle":"Class ClientSession","url":"docs/reference/Mirage.Authenticators.SessionId/ClientSession#methods","content":"NeedsRefreshing(TimeSpan)​ Declaration​ public bool NeedsRefreshing(TimeSpan tillRefresh)  Parameters​ Type\tName\tDescriptionSystem.TimeSpan\ttillRefresh\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Interface ISessionIdStore","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/ISessionIdStore","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface ISessionIdStore","url":"docs/reference/Mirage.Authenticators.SessionId/ISessionIdStore#methods","content":"TryGetSession(out ClientSession)​ Declaration​ bool TryGetSession(out ClientSession session)  Parameters​ Type\tName\tDescriptionMirage.Authenticators.SessionId.ClientSession\tsession\t Returns​ Type\tDescriptionSystem.Boolean\t StoreSession(ClientSession)​ Declaration​ void StoreSession(ClientSession session)  Parameters​ Type\tName\tDescriptionMirage.Authenticators.SessionId.ClientSession\tsession\t "},{"title":"Class SessionData","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/SessionData","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class SessionData","url":"docs/reference/Mirage.Authenticators.SessionId/SessionData#fields","content":"Timeout​ Declaration​ public DateTime Timeout  PlayerAuthentication​ Declaration​ public PlayerAuthentication PlayerAuthentication  "},{"title":"Properties​","type":1,"pageTitle":"Class SessionData","url":"docs/reference/Mirage.Authenticators.SessionId/SessionData#properties","content":"IAuthenticationDataWrapper.Inner​ Declaration​ object IAuthenticationDataWrapper.Inner { get; }  "},{"title":"Class CreateSession","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/CreateSession","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class CreateSession","url":"docs/reference/Mirage.Authenticators.SessionId/CreateSession#fields","content":"Server​ Declaration​ public NetworkServer Server  Client​ Declaration​ public NetworkClient Client  Authenticator​ Declaration​ public SessionIdAuthenticator Authenticator  AutoRefreshSession​ Declaration​ public bool AutoRefreshSession  "},{"title":"Methods​","type":1,"pageTitle":"Class CreateSession","url":"docs/reference/Mirage.Authenticators.SessionId/CreateSession#methods","content":"Start()​ Declaration​ public void Start()  "},{"title":"Struct RequestSessionMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/RequestSessionMessage","content":"Struct RequestSessionMessage Syntax​ public struct RequestSessionMessage ","keywords":""},{"title":"Mirage.Authenticators","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Authenticators","url":"docs/reference/Mirage.Authenticators/#classes","content":"BasicAuthenticator​ "},{"title":"Structs​","type":1,"pageTitle":"Mirage.Authenticators","url":"docs/reference/Mirage.Authenticators/#structs","content":"BasicAuthenticator.JoinMessage​ "},{"title":"Struct SessionKeyMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/SessionKeyMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct SessionKeyMessage","url":"docs/reference/Mirage.Authenticators.SessionId/SessionKeyMessage#fields","content":"SessionKey​ Declaration​ public ArraySegment&lt;byte&gt; SessionKey  "},{"title":"Class SessionIdAuthenticator","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators.SessionId/SessionIdAuthenticator","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class SessionIdAuthenticator","url":"docs/reference/Mirage.Authenticators.SessionId/SessionIdAuthenticator#fields","content":"NO_KEY_ERROR​ Declaration​ public const string NO_KEY_ERROR = &quot;Empty key from client&quot;  NOT_FOUND_ERROR​ Declaration​ public const string NOT_FOUND_ERROR = &quot;No session found&quot;  SessionIDLength​ Declaration​ public int SessionIDLength  TimeoutMinutes​ Declaration​ public int TimeoutMinutes  ClientIdStore​ Set on client to save key somewhere. For example as a cookie on webgl By default it is just stored in memory Declaration​ public ISessionIdStore ClientIdStore  "},{"title":"Methods​","type":1,"pageTitle":"Class SessionIdAuthenticator","url":"docs/reference/Mirage.Authenticators.SessionId/SessionIdAuthenticator#methods","content":"Authenticate(INetworkPlayer, SessionKeyMessage)​ Declaration​ protected override AuthenticationResult Authenticate(INetworkPlayer player, SessionKeyMessage message)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer Mirage.Authenticators.SessionId.SessionKeyMessage\tmessage\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t CreateOrRefreshSession(INetworkPlayer)​ Declaration​ public ArraySegment&lt;byte&gt; CreateOrRefreshSession(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\t Returns​ Type\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\t "},{"title":"Change Log","type":0,"sectionRef":"#","url":"docs/general/CHANGELOG","content":"","keywords":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes","content":"Examples: fixing UI in basic example (7cd9ccb) "},{"title":"153.3.1 (2025-09-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15331-2025-09-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-1","content":"swapping AttachExternalCancellation order (7dfe8f7) 153.3.0 (2025-09-11) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-2","content":"adding check to SocketLayer config for MaxReliableFragments (8b4a6ea)fixing max length check SendUnreliable (5aa89c0) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features","content":"adding helper methods to get max message size for each channel (8d623fb) "},{"title":"153.2.6 (2025-09-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15326-2025-09-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-3","content":"adding byte count to HandleMessage log (6627d74) "},{"title":"153.2.5 (2025-08-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15325-2025-08-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-4","content":"adding compile error when [NetworkMessage] is incorrectly added to generic class (e9b3a39) "},{"title":"153.2.4 (2025-08-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15324-2025-08-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-5","content":"ensuring that SpawnVisibleObjects spawns NetworkIdentity in netId order (de7a657) "},{"title":"153.2.3 (2025-08-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15323-2025-08-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-6","content":"improving logs of prefabHash to always be hex (a6fdb94) "},{"title":"153.2.2 (2025-08-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15322-2025-08-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-7","content":"fixing throw in NetworkIdentity.ToString (585ae30) "},{"title":"153.2.1 (2025-08-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15321-2025-08-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-8","content":"calling RemoveDestroyedObjects when PrepareToSpawnSceneObjects is called (8750260)checking world is empty after ObjectManagers unspawn all identities (73e0153)fixing onUnspawn not called if client object was destroyed (637c6d0) 153.2.0 (2025-08-24) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-1","content":"making NetworkWorld.RemoveDestroyedObjects public (a1beda3) 153.1.0 (2025-08-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-2","content":"adding NonAlloc read methods for collections (535b347) 153.0.0 (2025-08-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-9","content":"changing back to UniTaskCompletionSource so task completes same a frame earlier (3669a6d)fixing pending dictionary changed in ServerStopped (86df5ef) feat!: improving NetworkAuthenticator to include CancellationToken for AuthenticateAsync (98ed8f1) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes","content":"AuthenticateAsync override now needs CancellationToken cancellationToken argument 152.0.0 (2025-07-04) build!: Drop Unity 2020.3 LTS support (989a784) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-1","content":"Unity 2020.3 LTS is no longer supported due to end-of-life and incompatibility with recent fixes. The minimum supported version is now 2021.3 LTS. "},{"title":"151.3.3 (2025-06-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15133-2025-06-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-10","content":"fixing desync issue caused by ClearShouldSyncDirtyOnly using wrong time (321badc)fixing NetworkTime Ping not using unscaled time to check (0dd327a)fixing SocketLayer not using unscaled time (137fd79) "},{"title":"151.3.2 (2025-06-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15132-2025-06-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-11","content":"fixing syncvar not sending while timescale is zero (869e756) "},{"title":"151.3.1 (2025-05-28)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15131-2025-05-28","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-12","content":"removing SpawnOrActivate and fixing StartHostClientObjects setup for objects spawned before host client is connected (a5e1eb7) 151.3.0 (2025-05-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-3","content":"storing message for Async spawning and applying them after (23c6fa8) "},{"title":"151.2.11 (2025-04-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#151211-2025-04-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-13","content":"fixing compile error from use of logger (c98e5b0)fixing connection state in test setup (750cb26)making sure messageHandler isn't given message after disconnect (f0376e1)making sure that AuthMessage can't be received twice (c07a662) "},{"title":"151.2.10 (2025-04-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#151210-2025-04-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-14","content":"AuthenticatorSettings: Fix missing semicolon (f3cac70)AuthenticatorSettings: fix NullReferenceException (0073c27) "},{"title":"151.2.9 (2025-04-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15129-2025-04-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-15","content":"fixing not supported version of NanoSocket to accept int bufferSize (a067a70), closes #1185 "},{"title":"151.2.8 (2025-03-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15128-2025-03-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-16","content":"catching BufferFullException from flush (5dd80ea)using SendBufferFull from NetworkPlayer when disconnecting (b6c98f9) "},{"title":"151.2.7 (2025-03-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15127-2025-03-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-17","content":"Auth success message wording in NetworkClient (#1183) (ff4873d) "},{"title":"151.2.6 (2025-02-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15126-2025-02-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-18","content":"fixing nullref from _logger (c3a618c)passing bufferSize to nanosocket class instead of UdpSocketFactory (ea2791c) "},{"title":"151.2.5 (2025-02-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15125-2025-02-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-19","content":"Adding warning to old NetworkTransformBase (e944f59) "},{"title":"151.2.4 (2025-02-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15124-2025-02-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-20","content":"logging message name for Unauthenticated Message (bd1b12b) "},{"title":"151.2.3 (2025-02-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15123-2025-02-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-21","content":"clearing references to help with GC collect (c6d5596) "},{"title":"151.2.2 (2025-02-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15122-2025-02-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-22","content":"increasing logging when failing to connect to server (d77c240) "},{"title":"151.2.1 (2025-02-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15121-2025-02-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-23","content":"clearing references to help with GC collection (9dad099) 151.2.0 (2025-01-21) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-4","content":"adding allowServerToCall option to ServerRpc (01721fe) "},{"title":"151.1.1 (2025-01-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#15111-2025-01-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-24","content":"avoiding throw from ResendMessages when send queue is full (a14a6fc)moving ResendMessages to update (8bdb6c1) 151.1.0 (2024-12-28) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-5","content":"adding custom inspector for NetworkIdentity (8cc9179) 151.0.0 (2024-12-27) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-25","content":"fixing SetDirtyBit being called with mask equals 0 (56d07cd)improving error message for spawning scene objects (91f89ea) feat!: SpawnVisibleObjects now calls RemoveAllVisibleObjects (fe14235)feat!: SpawnVisibleObjects no longer skips disabled gameObject (d160e77) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-2","content":"SpawnVisibleObjects now calls RemoveAllVisibleObjects before spawning objectsSpawnVisibleObjects no longer checks identity.gameObject.activeSelf before spawning objects 150.0.0 (2024-12-06) feat!: clearing SceneId when spawning object with PrefabHash (d638088) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-6","content":"adding ClearSceneId function (a492705) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-3","content":"SceneId is now cleared when calling Spawn with PrefabHash 149.8.0 (2024-12-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-7","content":"making SceneId property public (53de2a0) 149.7.0 (2024-12-01) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-8","content":"adding try catch for return RPC (6b7e683) 149.6.0 (2024-11-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-9","content":"adding UnscaledTime as log option (ab21fbb) "},{"title":"149.5.2 (2024-10-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14952-2024-10-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-26","content":"fixing incorrect log message (e05ab96) "},{"title":"149.5.1 (2024-09-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14951-2024-09-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-27","content":"fixing NRE when DestroyObject is called on unspawned object (ce00f0d) 149.5.0 (2024-08-31) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-28","content":"fixing using in welcomeWindow for unity2021 (c056f9e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-10","content":"adding &quot;dont show&quot; toggle to welcome window (f3eae96) "},{"title":"149.4.3 (2024-08-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14943-2024-08-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-29","content":"logging warning after disconnect instead of invoking other handler (05a72fa) "},{"title":"149.4.2 (2024-08-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14942-2024-08-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-30","content":"making RemoteCallCollection public (7945bd1) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements","content":"adding IEquatable to SyncVar wrappers (5bb203f)using SendToMany for AddNewObservers (69459f5) "},{"title":"149.4.1 (2024-08-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14941-2024-08-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-31","content":"Weaver: fixing AssemblyResolver failing to find system dlls (0551a60) 149.4.0 (2024-07-09) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-32","content":"disconnecting player if send buffer is full (3ea2d5d) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-11","content":"adding SocketLayerException to better handle errors (c76b88a)IsConnecting and IsConnected helper methods to NetworkPlayer (d722758) "},{"title":"149.3.1 (2024-07-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14931-2024-07-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-33","content":"fixing SpawnVisibleObjects throwing if SpawnedIdentities is modified (6cf96e6) 149.3.0 (2024-06-10) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-12","content":"making PadToByte public (43363ba) 149.2.0 (2024-05-11) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-13","content":"adding attribute to show SyncSettings in networkBehaviour if no syncvars (dd6a6d6) "},{"title":"149.1.1 (2024-05-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14911-2024-05-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-34","content":"fixing initial send to observers if from server is false (0ffa316) 149.1.0 (2024-05-06) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-14","content":"adding authenticatedOnly to SendToAll (8b1117b)adding list for AuthenticatedPlayers in NetworkServer (dc07c38) "},{"title":"149.0.1 (2024-05-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14901-2024-05-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-35","content":"SocketLayer: fixing socket receive trying to handle message when length is negative (b078387) 149.0.0 (2024-04-28) fix!: changing all time fields to be double (432af2e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-15","content":"adding VarDoublePacker (3e9e2a3) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-4","content":"time fields are now double instead of float "},{"title":"148.4.3 (2024-04-26)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14843-2024-04-26","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-36","content":"fixing possible NRE (dc4d6e6) "},{"title":"148.4.2 (2024-04-26)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14842-2024-04-26","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-1","content":"adding batching to unreliable messages (c77bf78) "},{"title":"148.4.1 (2024-04-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14841-2024-04-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-37","content":"fixing return RPC not generating serialize functions (3d162b8) 148.4.0 (2024-04-16) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-16","content":"adding callback that can be used to handle Authentication Failed (1cdbfb6) 148.3.0 (2024-04-15) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-17","content":"making NetworkIdentity.PrefabHash public (0ec3753) 148.2.0 (2024-04-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-18","content":"adding generic NetworkBehaviorSyncvar for ease of use (5caabd9) "},{"title":"148.1.1 (2024-04-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14811-2024-04-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-38","content":"removing disconnected player from observer lists (ece4500) 148.1.0 (2024-03-31) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-39","content":"adding error message if attribute is used on static method (dc66a54)trying to fix import issues after file renames (7a0b3f3) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-19","content":"support for jagged arrays (2ec6d3a) "},{"title":"148.0.2 (2024-03-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14802-2024-03-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-40","content":"fixing AddLateEvent tmp list (619b91d) "},{"title":"148.0.1 (2024-03-28)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14801-2024-03-28","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-41","content":"fixing use of GO/NI/NB inside Constructor (2f5db3d) 148.0.0 (2024-03-25) refactor!: renaming AddLateEvent_new to AddLateEvent (5d92eba)refactor!: renaming AddLateEvent to AddLateEventUnity (169720c)perf!: changing NetworkIdentity events to use new c# only events (3aaab68) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-5","content":"renaming from AddLateEvent_new placeholder to just AddLateEventrenaming AddLateEvent which contains UnityEvent and UnityAction to AddLateEventUnityInspector events removed from NetworkIdentity, use Mirage v147.4.0 first to convert before updating to next version "},{"title":"147.4.2 (2024-03-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14742-2024-03-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-42","content":"fixing file name (d6de4cb) "},{"title":"147.4.1 (2024-03-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14741-2024-03-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-43","content":"changing button text (0f55b2b) 147.4.0 (2024-03-25) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-44","content":"fixing misplaced #if (f663543)new events should not be abstract (e1072d0) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-20","content":"create new c# only events (1c9f2d8)new NetworkInspectorCallbacks component (a8051c4) 147.3.0 (2024-03-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-21","content":"adding public OwnedObjects list and RemoveAllOwnedObject helper method to NetworkPlayer (5a611ba) "},{"title":"147.2.1 (2024-03-18)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14721-2024-03-18","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-45","content":"releasing buffers that are in acksystem when disconnecting (42691a6)stopping error when adding handlers for prefab that is already registered (002ec48) 147.2.0 (2024-03-12) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-46","content":"fixing span support UNITY_2021_3_OR_NEWER (7bf28ed) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-22","content":"adding support for Span&lt;T&gt; (3c48db8) 147.1.0 (2024-03-12) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-23","content":"adding excludeHost to ClientRpc (a35ed9d) "},{"title":"147.0.3 (2024-02-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14703-2024-02-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-47","content":"ClientObjectManager: add prefab to SpawnHandler when registering (#1171) (7a8ff46) "},{"title":"147.0.2 (2024-02-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14702-2024-02-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-48","content":"fixing unspawn handlers not being used in disconnect cleanup (915f307) "},{"title":"147.0.1 (2024-02-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14701-2024-02-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-49","content":"fixing SocketFactory errors when Listening is false (7ead256) 147.0.0 (2024-01-31) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-50","content":"fixing scene object spawning in host mode for 1 scene setup (2736fe0)fixing use of is not in unity 2020 (61b7f68) fix!: fixing spawning for unauthenticated code (b25f2f9) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-6","content":"removing ServerObjectManager.OnlySpawnOnAuthenticated field 146.7.0 (2023-12-28) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-24","content":"renaming IsLocalClient to IsHost (39557cd) "},{"title":"146.6.4 (2023-12-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14664-2023-12-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-51","content":"fixing owner not being excluded when host (787e55a) "},{"title":"146.6.3 (2023-12-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14663-2023-12-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-52","content":"fixing time not being sent on connect (66e0978) "},{"title":"146.6.2 (2023-12-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14662-2023-12-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-53","content":"SocketLayer: increase default fragment size to 50 (1fdaa43) "},{"title":"146.6.1 (2023-11-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14661-2023-11-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-54","content":"Weaver: fixing lookup for collection methods (b530360) 146.6.0 (2023-11-05) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-25","content":"adding writer for dictionary (f89d596) "},{"title":"146.5.1 (2023-11-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14651-2023-11-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-55","content":"removing debug log (28d0447) 146.5.0 (2023-11-05) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-26","content":"adding WeaverSerializeCollection that can be added to generic writers (00d476b) 146.4.0 (2023-10-20) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-27","content":"sending secure hash of connect key (f8901c2) "},{"title":"146.3.2 (2023-10-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14632-2023-10-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-56","content":"fixing syncDirection for syncObjects in host mode (ec45074) "},{"title":"146.3.1 (2023-10-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14631-2023-10-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-57","content":"fixing null ref when using syncObject (362044a) 146.3.0 (2023-10-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-28","content":"Example: adding scene per match example (5e7911f) "},{"title":"146.2.2 (2023-08-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14622-2023-08-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-58","content":"Weaver: fixing serialize methods for when type is not resolved (21f1aee) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-2","content":"using cached Id for value types (dccdbf3) "},{"title":"146.2.1 (2023-08-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14621-2023-08-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-59","content":"also removing character when it is removed as owned (b96ed68)updating syncObject ReadOnly before StartServer/Client (67a1d06) 146.2.0 (2023-07-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-29","content":"adding emit methods for weaver extensions (6b57cd7)making ackSystem public so const fields can be used (63f62bf) "},{"title":"146.1.1 (2023-07-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14611-2023-07-24","content":""},{"title":"Reverts​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#reverts","content":"&quot;pref: using deferred mode for reading, this will speed up other Weavers which dont need to read everything&quot; (6bff2e3) 146.1.0 (2023-07-21) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-30","content":"adding attribute that allows for combination of checks (18852f6) 146.0.0 (2023-07-20) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-31","content":"INetworkPlayer now has a IsHost property (5d7e5b7) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-7","content":"NetworkPlayer constructor now requires isHost parameter 145.3.0 (2023-07-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-32","content":"Cecil: adding AddProperty to cecil extensions (328912a) 145.2.0 (2023-07-16) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-33","content":"adding code gen extensions asmdef (1d7363d) 145.1.0 (2023-07-09) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-60","content":"add missing CompMenu for CharacterSpawner (87c6204)add missing HelpUrl for CharacterSpawner (5cd704a)add missing HelpUrl for ClientObjectManager (1186cf6)add missing HelpUrl for NetworkClient (daec3a1)add missing HelpUrl for NetworkSceneManager (cd5c753)add missing HelpUrl for NetworkServer (35d217e)add missing HelpUrl for ServerObjectManager (127a883)add missing HelpUrl for SocketFactory (a29b1b7)measuring time not distance. add s (fbcdf1e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-34","content":"adding function to skip bits (0bcbc7f) "},{"title":"145.0.4 (2023-07-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14504-2023-07-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-61","content":"Cleaning up name used for generic types (d846f13) "},{"title":"145.0.3 (2023-07-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14503-2023-07-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-62","content":"adding warning if spawned Identity already has netid (22478f4) "},{"title":"145.0.2 (2023-07-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14502-2023-07-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-63","content":"calling NetworkReset with custom unspawn handlers (94a9199)checking if scene object before destroying owned object (d6ced44) "},{"title":"145.0.1 (2023-06-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14501-2023-06-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-64","content":"logging for notify send (929686c) 145.0.0 (2023-06-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-35","content":"adding function to SyncObjects so that they can use the NetworkBehaviour that are a part of (b6f3526) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-8","content":"ISyncObject now needs to implement the SetNetworkBehaviour function 144.0.0 (2023-06-26) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-65","content":"adding check to SyncObjects to make sure they are IEnumerable before drawing them as list. (907d8ce)logging prefab hash as hex (8289f20)removing debug log from welcomewindow (3be3f42) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring","content":"moving SyncsAnything to InspectorHelper (f3755d9) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-9","content":"SyncsAnything for editor scripts moved to InspectorHelper "},{"title":"143.2.3 (2023-06-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14323-2023-06-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-66","content":"use of await AsyncOperation in unity 2023 (#1151) (5af1435) "},{"title":"143.2.2 (2023-06-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14322-2023-06-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-67","content":"fixing host authentication using Connected event (6bb6bed) "},{"title":"143.2.1 (2023-06-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14321-2023-06-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-68","content":"fixing path of change log (#1150) (7716809) 143.2.0 (2023-06-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-36","content":"adding script that will make sure object is always visible (0b763cf) 143.1.0 (2023-06-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-37","content":"adding attribute that instructs Weaver to write a type as generic (1b1e4e6) 143.0.0 (2023-06-18) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-38","content":"adding INetworkPlayer to Authenticate (ba54dd2) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-10","content":"Authenticate overrides now require INetworkPlayer argument 142.0.0 (2023-06-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-39","content":"adding support for Reply Rpc on server side (dc56f27) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-11","content":"Rpc messages renamed 141.2.0 (2023-06-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-40","content":"adding syncList methods to set an index as dirty (4dfe8df) 141.1.0 (2023-06-16) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-41","content":"NetworkManagerGUI: overhaul the debug controls (#1149) (8b97f36) "},{"title":"141.0.2 (2023-06-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14102-2023-06-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-69","content":"fixing scene objects not being removed from NetworkWorld (546dd3c) "},{"title":"141.0.1 (2023-06-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#14101-2023-06-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-70","content":"fixing RPC with multiple components (2ae9ddc) 141.0.0 (2023-06-12) feat!: adding extra SendTo functions on NetworkServer (c5ba561) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-42","content":"adding overload to create pools without requiring buffer size (9842b40) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-12","content":"Server.SendToMany functions reworked 140.3.0 (2023-06-11) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-43","content":"adding option to rethrow exception throw message handler (15f27a4) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-3","content":"moving RPC collection to NetworkIdentity (773910c) 140.2.0 (2023-06-10) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-44","content":"option to invoke hook on owner when they are sending syncvar (36c1b37) 140.1.0 (2023-06-09) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-45","content":"adding syncvar hook with 0 args (d17576a) 140.0.0 (2023-06-04) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-46","content":"updating syncLists to use new SyncDirection (f6f78a8) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-13","content":"SyncObjects now need to implement SetShouldSyncFrom 139.0.0 (2023-05-24) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-71","content":"avoiding disconnect being called twice (ce36e58) feat!: new authentication (b9b490f) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-47","content":"adding flag to set if message is only allowed if authenticated (d710f45)adding log for receiving message (e73c9d5)adding log handler that adds label and color to messages (bb26471)adding send log to network player (af7104c)adding session authenticator (ae1ef69)improving log for RegisterHandler (c6d4efd)updating Authenticators (b355604) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-14","content":"complete NetworkAuthenticator rework see docs for changesby default message will disconnect player if unauthenticated. Use allowUnauthenticated flag to avoid this 138.0.0 (2023-05-23) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-72","content":"stopping protected fields from being written by weaver (9e2d74a), closes /github.com/MirrorNetworking/Mirror/issues/3485#issuecomment-1559005650 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-48","content":"making NetworkManagerGUI automatically find NetworkManager when added (c600b4c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-15","content":"internal fields are not longer automatically written by Weaver generated functions "},{"title":"137.0.3 (2023-05-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13703-2023-05-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-73","content":"fixing serialize writing to owner writer when no owner (c6f203f)fixing server setting HasAuthority to true (a6fa26d) "},{"title":"137.0.2 (2023-05-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13702-2023-05-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-74","content":"fixing guard functions for generic and array (b453d36) "},{"title":"137.0.1 (2023-05-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13701-2023-05-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-75","content":"fixing message size being too small with DisableReliableLayer (50b4093) 137.0.0 (2023-05-05) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-76","content":"adding OnValidate to NetworkManager (5a54b3a)fixing null ref when ObjectManager not set (7333749)fixing race condition with ServerObjectManager (f2d2cf3) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-1","content":"changing clientObjectManager to be used by other classes (2a69409) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-16","content":"NetworkClient and NetworkSceneManager now need a reference to ClientObjectManagerNetworkServer now need a reference to ServerObjectManager 136.2.0 (2023-05-04) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-49","content":"adding helper function to get AuthenticationData as a type (a2d7382) 136.1.0 (2023-05-04) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-50","content":"components to sync if gameObject is active (873db7f) 136.0.0 (2023-05-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-77","content":"fixing typo for Spawn settings (2d8a35a) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-2","content":"adding headers to Character spawner fields (3ed2134)Changing default spawn settings (89564f4)moving Spawn Settings too its own file (5bdc7a3) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-51","content":"adding Name and GameObjectActive to Spawn settings (fd12390)adding option to always enable client object (686a904)adding option to disable Setting name by CharacterSpawner (796a7bd) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-17","content":"NetworkIdentity.TransformSpawnSettings moved to NetworkSpawnSettingsSpawning a prefab will no longer automatically enable it. Spawn settings must have SendGameObjectActive set to true and object on server to be enabled as wellSpawnMessage now has SpawnValues struct to store values in. SpawnMessage also has new ToString messageremoving FormerlySerializedAs from CharacterSpawner 135.1.0 (2023-04-30) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-78","content":"fixing SendNotify deliver (3f9ceb9) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-52","content":"adding option to disable reliable layer (6618b5d)adding option to use UniTaskVoid for message handlers (64b9cc7) 135.0.0 (2023-04-29) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-3","content":"making add remove connections private (0cac9a3) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-18","content":"NetworkServer methods AddConnection and RemoveConnection are no longer public 134.0.0 (2023-04-28) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-4","content":"removing NumberOfPlayers (cafbe50)removing Obsolete functions (a3932f2) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-53","content":"adding SpawnInstantiate helper methods (58f14cd) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-19","content":"removing Obsolete functions, see commit for detailsNumberOfPlayers removed 133.0.0 (2023-04-24) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-54","content":"refactoring LobbyReady to use new features (b9e13e3) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-20","content":"LobbyReady and ReadyCheck components changed fix: using Start instead so Server can be added by test test: trying to fix lobby test fix: fixing lobby ready setting syncvar in another asm doesn't work all the time. Unity ILPP is weird "},{"title":"132.0.3 (2023-04-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13203-2023-04-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-79","content":"SyncPrefab now uses Prefab field to write even if hash is not zero (57eea65) "},{"title":"132.0.2 (2023-04-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13202-2023-04-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-80","content":"fixing hostmode not sending syncvar to remote owner (925d57d) "},{"title":"132.0.1 (2023-04-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13201-2023-04-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-81","content":"adding angle packer (fcbd007) 132.0.0 (2023-04-10) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-82","content":"fixing sample (7d1d6f7)renaming SpawnObjects to SpawnSceneObjects (6b89619) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-5","content":"renaming Start to Setup for public methods to start ServerObjectManager late (d5f0647) refactor!: moving scene code out of ServerObjectManager (f2b3938)refactor!: adding INetworkVisibility (e47d4a3) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-55","content":"adding to string override for network identity. (279e207) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-21","content":"NetworkSceneManager now requires a reference to ServerObjectManager in the inspectorServerObjectManager.Start renamed to SetupNetworkIdentity.Visibility can now throw if called before Object is spawned "},{"title":"131.1.3 (2023-04-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13113-2023-04-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-83","content":"setting reason too None if packet length is not 3 (dcc4fa9) "},{"title":"131.1.2 (2023-04-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13112-2023-04-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-84","content":"fixing incorrect Undo.RecordObject target (0db933a)fixing register button not setting holder as dirty (762e295) "},{"title":"131.1.1 (2023-04-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13111-2023-04-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-85","content":"fixing compile error with inspector in 2022 (cb7fa26)improving host syncing for new direction (645570c) 131.1.0 (2023-04-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-86","content":"fixing sync direction drawer showing incorrect warning (11a7ab6) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-56","content":"adding struct to sync a prefab over network using its hash (15e7bbe) "},{"title":"131.0.2 (2023-04-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13102-2023-04-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-87","content":"not sending to owner if they are host player (1c5eed5) "},{"title":"131.0.1 (2023-03-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13101-2023-03-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-88","content":"hiding SyncSettings when there is nothing to sync (53f3c62) 131.0.0 (2023-03-31) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-89","content":"adding safety when returning to pool (22e2990)fixing drawer to indent fields (a28a5cf)fixing errors when owner is set before world is (01ad248)fixing IsValidDirection method (e437a10)RegisterPrefabs now has option to skip over existing handlers (ec80990) refactor!: converting Channel to enum (9142513)refactor!: renaming functions used to clear dirty bits (775698c)refactor!: starting to use syncSettings (f673f9b)refactor!: deleting Experimental components (fb5c2a6) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-57","content":"adding angle and vec2 packer (039e9cd)adding drawer for sync settings (10ab69e)adding event to world that is invoked when authority changes (5739296)adding helper methods for networkWorld (5ad1f83)adding methods to write from pointer (0b3ae5e)adding OwnerAndObservers option so it shows in inspector (26ec10d)adding static version of update time so that other classes can use it (d96ed04)adding sync settings (53ceb2a)SyncStack (bef8514) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-22","content":"RegisterPrefabs now has an extra dontAddIfExist bool argumentChannel is not an enum instead of an intClearAllDirtyBits renamed to ClearShouldSyncRenaming and Obsolete of custom serialize methodsdeleting Experimental components "},{"title":"130.4.1 (2023-03-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#13041-2023-03-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-90","content":"fixing nanosockets build error on some platforms (fbd136c)fixing typo causing Prefabs header being drawn twice (2c86fc0) 130.4.0 (2023-03-16) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-58","content":"adding bool for InitialState (cce01f8) 130.3.0 (2023-02-10) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-59","content":"making SetHostVisibility virtual (aef174c) 130.2.0 (2023-02-10) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-91","content":"making HostRendererVisibility hide objects when it is spawned if not visible (03976a5) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-60","content":"adding a function for server to tell clients to load scene (14283b1)adding component that can be used to disable renderers on host player (64c09bf)adding event that is invoked when object visibility changes (d82cd76)adding option to not send additive scenes when client connects (f39414b) 130.1.0 (2023-02-06) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-92","content":"adding exitgui to stop error (df719b2) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-61","content":"add networked prefab attribute (9fdd2ec)making NetworkedPrefab attribute work with new NetworkPrefabs SO (37c4877) 130.0.0 (2023-02-06) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-93","content":"Examples: updating Paddlespawner awake function to be protected (241a421)marking scene as not ready when player first joins server (f523143) feat(CharacterSpawner)!: making Awake and OnDestroy protected virtual (14ed80a) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-23","content":"CharacterSpawner.Awake is now protected instead of public Co-authored-by: James Frowen &lt;jamesfrowen5@gmail.com&gt; "},{"title":"129.6.2 (2023-02-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12962-2023-02-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-94","content":"stopping exception when creating new SO (f55e929) "},{"title":"129.6.1 (2023-02-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12961-2023-02-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-95","content":"fixing typo in DisallowMultipleComponent (715aa33)NetworkManagerGUI: prevent potential NRE spam if reference is lost and tidy up (#1130) (86b5c3d) 129.6.0 (2023-02-02) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-96","content":"fixing networkprefab drawer height (8884070) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-62","content":"adding buttons that create gameobject with NetworkIdentity (0115818)adding custom drawer for networkprefab field (bb34c04)drawing prefab list under NetworkPrefab reference (8c63726)hiding COM prefab list when it is empty and NetworkPrefab is set (5088d33)making RegisterPrefabs public (77c8a48)use scriptable object for spawnable prefabs (#1127) (1973e76) 129.5.0 (2023-01-31) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-97","content":"ui toolkit list fields not being reorderable (1c77772) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-63","content":"adding async versions to NetworkSceneManager functions (#1128) (abae4c8) 129.4.0 (2023-01-06) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-64","content":"ui toolkit network behaviour editor for unity 2022.2 and newer (#1121) (f626c77) "},{"title":"129.3.2 (2022-12-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12932-2022-12-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-98","content":"errors and warnings on 2023.1 alpha (#1120) (37fa113) "},{"title":"129.3.1 (2022-12-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12931-2022-12-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-99","content":"throw InvalidOperationException if network client attempts to send messages while disconnected (#1118) (b7ae4de) 129.3.0 (2022-12-16) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-65","content":"adding filter to log settings (d50e754) "},{"title":"129.2.1 (2022-12-15)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12921-2022-12-15","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-100","content":"marking RemoteCallCollection as NonSerialized (c6ef84b) 129.2.0 (2022-12-11) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-66","content":"adding functions to manually update server and client (d18ef5a) "},{"title":"129.1.4 (2022-12-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12914-2022-12-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-101","content":"fixing string encoding from GetIP IntPtr (5073a5f) "},{"title":"129.1.3 (2022-12-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12913-2022-12-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-102","content":"setting field value (f9b1f65) "},{"title":"129.1.2 (2022-12-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12912-2022-12-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-103","content":"adding null check for failing to resolve assembly (13ce8a9) "},{"title":"129.1.1 (2022-12-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12911-2022-12-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-104","content":"il2cpp linux runtime SIGABRT crash with nanosockets (unity 2021.3.15) (#1116) (ff7148b) 129.1.0 (2022-12-05) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-67","content":"adding option to exclude NetworkBehaviourInspector (99e9519) "},{"title":"129.0.3 (2022-11-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12903-2022-11-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-105","content":"fixing scene events not firing when host connects (598057e) "},{"title":"129.0.2 (2022-11-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12902-2022-11-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-106","content":"fixing COM throwing when registering same prefab twice (5005daf) "},{"title":"129.0.1 (2022-11-26)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12901-2022-11-26","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-107","content":"fixing unity version in package.json (920493e) 129.0.0 (2022-11-14) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-108","content":"dont seend scene message on authenticate to host (94ab113)fixing client networkplayer being given to host player (7331eb0)fixing loading scenes in host mode (9caeea8)not sending unload message to host player (f1ace90) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-24","content":"host no longer invokes scene start/finish events on when host player AuthenticatesSceneMessage should no longer be sent to host player 128.7.0 (2022-11-09) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-68","content":"adding send method that will exclude a single player (f930bd0) 128.6.0 (2022-11-02) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-109","content":"making MaxStringLength re-size the internal buffer to allow for bigger strings (ed00f34), closes #1109 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-69","content":"adding extra string methods to use different encoding (586717b) 128.5.0 (2022-10-08) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-110","content":"checking for custom visibility in new assert (f4b9597) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-70","content":"adding option to stop spanwn on unauthenticated (629fab8) "},{"title":"128.4.1 (2022-10-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12841-2022-10-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-111","content":"miscellanous NanoSocket bits and pieces, add Mirage Standalone support (#1106) (1b7e097) 128.4.0 (2022-09-25) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-71","content":"adding Id to NetworkBehaviour (8eafae5) "},{"title":"128.3.1 (2022-09-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12831-2022-09-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-112","content":"AckSystem: fixing fragmented message having incorrect order (1fb4970) 128.3.0 (2022-09-16) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-113","content":"adding try/catch for spawn async (9cad50a)fixing async payload not being held (2eafb46)improving log for server.spawn (4cdb606) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-72","content":"adding way to return spawnHandler from prefabHash (4d1d552)allowing PrefabHash to be set even if it already has value (c764c1f) 128.2.0 (2022-09-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-73","content":"adding pack as int functions to QuaternionPacker (79ccc25) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-4","content":"making QuaternionPacker pack to 0 for Quaternion.identity (7c2bfe4) "},{"title":"128.1.1 (2022-09-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12811-2022-09-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-114","content":"fixing SetDisplayMetrics for host mode (ce26e49) 128.1.0 (2022-08-25) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-74","content":"adding SpawnVisibleObjects method that can skip objects (#1100) (21bf049) 128.0.0 (2022-08-18) refactor!: removing INetworkServer (aaaba98)refactor!: removing INetworkClient (15eb6d1)refactor!: removing INetworkSceneManager (e1fdf86)refactor!: removing IServerObjectManager (cf9f746)refactor!: removing IClientObjectManager (4559573) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-25","content":"interface for NetworkServer removedinterface for NetworkClient removedinterface for NetworkSceneManager removedinterface for ServerObjectManager removedinterface for ClientObjectManager removed 127.0.0 (2022-08-18) refactor(ClientObjectManager)!: renaming function that registers handlers (b8b07ee)refactor(ClientObjectManager)!: merging prefab and handlers into class (229aa4b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-75","content":"adding async spawn handler (993f425) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-26","content":"RegisterPrefab that registers handlers is now called RegisterSpawnHandleradding new exceptions to registering prefabs and handles 126.1.0 (2022-08-17) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-115","content":"removing dependency on JetBrains.Annotations (2e1263e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-76","content":"adding more public methods for NetworkPlayer VisList (ccc7ef5) "},{"title":"126.0.1 (2022-08-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12601-2022-08-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-116","content":"fixing compile error in unity 2019.4 (864a144) 126.0.0 (2022-08-07) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-77","content":"making RemoteCallCollection public (2906f18) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-5","content":"removing allocations for validating network identity in debug mode (1909749) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-27","content":"remoteCallCollection renamed to RemoteCallCollection (may require unity restart after import) 125.0.0 (2022-08-05) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-117","content":"improving error handling for Client spawning (02ca962) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-78","content":"adding spawn overload for NetworkIdentity and PrefabHash (9c51fef) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-28","content":"ClientObjectManager.GetPrefab now throws instead of returning null 124.0.0 (2022-08-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-118","content":"adding error when target rpc is called with null (73bbcc2)adding more validate for invoking ServerRpc in host mode (26b3318)fixing target rpc being called in host modified (fa052d6), closes #1095fixing use of incorrect exception in rpc validate (948c3a4)making rpc validate methods public (3b7a5ae) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-6","content":"moving the invoke check to ClientRpcSender (3465258) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-29","content":"ServerRpc are now only invoked locally if in host modeServerRpc now throws InvalidOperationException if authority is requiredClientRpc are now only invoked locally if in host mode 123.4.0 (2022-07-27) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-119","content":"updating HelpUrl for new docs (#1094) (e31a5db) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-79","content":"adding example script for sending prefab in rpc (c0dc98e) "},{"title":"123.3.3 (2022-07-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12333-2022-07-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-120","content":"Weaver: finding extension methods in mirage manully (b3ada19) "},{"title":"123.3.2 (2022-07-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12332-2022-07-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-121","content":"fixing warning created from id generator (eaee748)Weaver: fixing extension methods for unity2021 (7f35778)Weaver: fixing generic check on extension methods (fddf9ea), closes #1066Weaver: fixing WeaverDiagnosticsTimer for when directory is not found (eb880d5) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-6","content":"avoiding call to find NetworkIdentity (7947e9e) "},{"title":"123.3.1 (2022-06-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12331-2022-06-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-122","content":"making MessageInfo public instead of internal (e6a4413) 123.3.0 (2022-06-21) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-80","content":"adding option for unsigned floats in floatpacker (dda61e1) "},{"title":"123.2.4 (2022-06-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12324-2022-06-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-123","content":"enable runInBackground so that connections dont timeout (cb1b869)updating tool tip for MaxConnections (938f34c) "},{"title":"123.2.3 (2022-05-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12323-2022-05-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-124","content":"fixing define in UdpSocketFactory (a402953) "},{"title":"123.2.2 (2022-05-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12322-2022-05-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-125","content":"incorrect unity 2021 compile define (6d9c566) "},{"title":"123.2.1 (2022-05-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12321-2022-05-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-126","content":"fix the fix that fixed the CS0104 error about CollectionExtensions (9657bdb)network writer test CollectionExtensions causing CS0104 in 2021.3 (1ed750a) 123.2.0 (2022-05-26) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-127","content":"adding missing interface method to PipePeerConnection (90e5179) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-81","content":"SocketLayer: adding FlushBatch to Connection (476156a) "},{"title":"123.1.5 (2022-05-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12315-2022-05-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-128","content":"adding sequence point to hookException (47ec337) "},{"title":"123.1.4 (2022-05-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12314-2022-05-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-129","content":"avoid using NanoSockets on Mac OS (codesigning issues) (c9c17ab) "},{"title":"123.1.3 (2022-05-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12313-2022-05-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-130","content":"adding ability to start the Client &amp; Server from interfaces (#1079) (61e8d6b) "},{"title":"123.1.2 (2022-05-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12312-2022-05-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-131","content":"fixing ResizeBuffer (2232c11) "},{"title":"123.1.1 (2022-05-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12311-2022-05-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-132","content":"adding defines for nanosocket (#1078) (b4523a0) 123.1.0 (2022-05-12) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-82","content":"adding OwnerChanged to networkIdentity (#1077) (7c94ab7) "},{"title":"123.0.6 (2022-05-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12306-2022-05-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-133","content":"replacing const with attribute (#1076) (de6c97c) "},{"title":"123.0.5 (2022-05-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12305-2022-05-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-134","content":"SocketLayer: throwing if Peer is given a null endpoint (3e3c737) "},{"title":"123.0.4 (2022-05-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12304-2022-05-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-135","content":"Weaver: fixing crash from missing attribute (e54a3a2) "},{"title":"123.0.3 (2022-05-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12303-2022-05-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-136","content":"Weaver: making const fields static (09c3b3b) "},{"title":"123.0.2 (2022-04-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12302-2022-04-27","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-7","content":"removing allocation from SendToAll (6166244) "},{"title":"123.0.1 (2022-04-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12301-2022-04-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-137","content":"fixing NRE in log when handler is null (013b03c) 123.0.0 (2022-04-22) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-138","content":"peer now sends invalid key even if key is shorter than correct key (1139527) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-7","content":"forcing GetReader to be given objectLocator (2f3c4b5) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-30","content":"NetworkReaderPool.GetReader now has IObjectLocator argument (can be null). Use MirageNetworkReader instead of NetworkReader if you need to read NetworkIdentity 122.1.0 (2022-04-14) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-139","content":"fixing double types showing up in log settings if no namespace given (5ea84d5)fixing logger for id generator using nameof instead of typeof (3665b80) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-83","content":"syncvar hook with 1 arg (#1070) (6e21877) "},{"title":"122.0.2 (2022-04-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12202-2022-04-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-140","content":"increasing log to warning when receiving known type without handler (#1072) (05db6cf) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-8","content":"using plus 1 count for other collection types (#1073) (25ab6f3) "},{"title":"122.0.1 (2022-04-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12201-2022-04-13","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-9","content":"stopping allocations from log in MessageHandler when not enabled (d5b3292) 122.0.0 (2022-04-12) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-141","content":"adding end of stream check to ReadList and ReadBytes as well (9dc69dc)fixing OnlineOfflineScene to work with NetworkSceneManager (bb916f3)fixing StopAuthority not being called in host mode on destroy (f331875)stopping DestroyAllClientObjects being called in host mode. (582c20b) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-31","content":"OnlineOfflineScene uses NetworkSceneManager instead of just loading locally using client start "},{"title":"121.0.1 (2022-04-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12101-2022-04-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-142","content":"adding const to type when writer is generated (f3bcc89)throwing if SceneManager returns null (833634a) 121.0.0 (2022-03-31) fix!: fixing removing RequireComponent from NetworkManager (81d8603) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-84","content":"adding event to NetworkPlayer when Identity is changed (9e22ff4)adding methods to create NetworkMamger using other socket facories (aaba9bc) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-32","content":"RequireComponent from NetworkManager. NetworkServer and NetworkClient will now need to be added manaully. "},{"title":"120.1.2 (2022-03-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12012-2022-03-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-143","content":"NetworkIdentity: fix more missing things (7420bd1)NetworkIdentity: fix one quote on a log string to unbreak it all (339ab4c)tests: networkidentity test failing due to changed exception text (877eb12) "},{"title":"120.1.1 (2022-03-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#12011-2022-03-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-144","content":"NetworkClient: checking if client is already active before connecting host (bc89211) 120.1.0 (2022-03-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-85","content":"adding SetCharacterName to character spawner (1b051c7) 120.0.0 (2022-03-20) refactor(SocketLayer)!: moving MaxPacketSize to SocketFactory (49c7f41) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-33","content":"socket factories now have to override MaxPacketSize property "},{"title":"119.1.4 (2022-03-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11914-2022-03-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-145","content":"Don't create a socket if not listening (should fix #1054) (f33c6eb)networkserver shouldn't create socket if we're not listening (addresses ticket #1054) (5117f49) "},{"title":"119.1.3 (2022-03-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11913-2022-03-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-146","content":"fixing pong example (0b28fe4) "},{"title":"119.1.2 (2022-03-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11912-2022-03-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-147","content":"fixing udp socket for macOS (#1049) (67baff1) "},{"title":"119.1.1 (2022-02-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11911-2022-02-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-148","content":"fixing ArgumentOutOfRangeException when no NetworkIdentity on object (d8e7830) 119.1.0 (2022-02-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-86","content":"support for generic network messages (#1040) (2d8990d) "},{"title":"119.0.1 (2022-02-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11901-2022-02-16","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-10","content":"moving replyId to its own message (e8e1829) 119.0.0 (2022-02-16) feat!(SocketLayer): adding connection key based on mirage version (ff5a308) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-34","content":"Mismatched server/client versions will no longer be able to connect to each other 118.0.0 (2022-02-08) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-87","content":"support for generic syncvar (057e177) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-11","content":"using index for rpcs instead of hash (88c4cd3) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-35","content":"removed RemoteCallHelper and adding RemoteCallCollection instead NetworkBehaviour 117.2.0 (2022-02-07) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-149","content":"fixing generic syncvar hooks (90e9f24)Weaver: avoiding short instructions for methods with unknown length (f605c46) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-88","content":"RPC: adding support for generic syncvars (b6984ca) "},{"title":"117.1.1 (2022-02-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11711-2022-02-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-150","content":"fixing rpc cast for generic types (111fce6)rpcs for fixing IL2CPP (e574a80) 117.1.0 (2022-02-06) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-151","content":"RPC: fixing call when type is generic (84e2dd6) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-89","content":"making setter for NetworkReader.ObjectLocator public (50ab932) 117.0.0 (2022-02-02) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-152","content":"RPC: fixing rpc calls to base methods and overloads (8bc165d)RPC: fixing ServerRpc that could be called without Authority (51411fb) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-8","content":"RPC: moving send rpc functions to their own classes (eaadd62)RPC: renaming methods for RemoteCallHelper (186f228) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-90","content":"RPC: adding rpc overloads (5ca30f1) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-12","content":"RPC: generating hash at compile time not runtime (4f81402) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-36","content":"RPC: removed RemoteCallHelper.GetDelegate, use GetCall or TryGetCall insteadRPC: Send Rpc methods are now found in ServerRpcSender and ClientRpcSender and may have been renamed 116.2.0 (2022-02-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-91","content":"calling OnAuthorityChanged with false when an object is unspawned (#1034) (d8334e8) "},{"title":"116.1.1 (2022-02-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11611-2022-02-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-153","content":"fixing calling base methods for generic types in IL2CPP (cf91e1d) 116.1.0 (2022-01-29) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-154","content":"adding missing MessageHandler to interfaces (370c5ab) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-92","content":"adding notify send to NetworkPlayer (ad699fc) 116.0.0 (2022-01-23) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-155","content":"NetworkReader: fixing PadAndCopy function (8e6c516) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-37","content":"NetworkReader: NetworkReader.PadAndCopy no longer needs the byte size argument 115.0.0 (2022-01-22) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-156","content":"fix welcome window packages tab displaying actual modules (#1024) (5930281)NetworkSceneManager: fixing exception when scene is null (a366843) feat(NetworkSceneManager)!: return scene instead of strings from events (#1028) (106e714), closes #1028 #1026 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-38","content":"Scene finished loading events now return scene SceneChangeEvent class renamed to SceneChangeStartedEvent and SceneChangeFinishedEvent "},{"title":"114.1.1 (2022-01-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11411-2022-01-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-157","content":"fixing array and generic write for NetworkBehaviours (d2ee8ac) 114.1.0 (2022-01-15) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-93","content":"allow end user's to create there own net id generator (#1019) (d2e8834) "},{"title":"114.0.3 (2022-01-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11403-2022-01-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-158","content":"fixing calls to interface for target RPCs (#1021) (780123d) "},{"title":"114.0.2 (2022-01-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11402-2022-01-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-159","content":"removing un-used using (0e7bd82) "},{"title":"114.0.1 (2021-12-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11401-2021-12-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-160","content":"WelcomeWindow: fixed parsing of change logs (#1017) (5da522d) 114.0.0 (2021-12-31) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-161","content":"NetworkTime: renaming PingFrequency to PingInterval (b729cdc) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-9","content":"replacing MessagePacker.GetMessageType with property (#1016) (106c47c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-39","content":"MessagePacker.GetMessageType replaced with propertyNetworkTime: NetworkTime PingFrequency remamed to PingInterval "},{"title":"113.3.4 (2021-12-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11334-2021-12-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-162","content":"LogFactory: fixing clear and find all buttons in log factory (6f7e5d5) "},{"title":"113.3.3 (2021-12-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11333-2021-12-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-163","content":"Logging: fixing full name not being loaded (caece7e) "},{"title":"113.3.2 (2021-12-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11332-2021-12-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-164","content":"adding try/catch for nanosocket (#1010) (88badd6)fixing log settings that have no namespace (#1014) (ead317f)NetworkBehavior: removing NB that belong to another NI from list (#970) (4738d29)NetworkWorld: fixing add identity when object is destroyed client side (b5a765e)Setting client not ready to stop character spawning before scene change (#1009) (fcbe10d) "},{"title":"113.3.1 (2021-12-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11331-2021-12-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-165","content":"making sure server/client stops if gameobject is destroyed (9cdc27d) 113.3.0 (2021-12-22) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-166","content":"NetworkBehaviour: can now found NetworkIdentity in parent when gameobject is disabled (#1006) (d54537a) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-94","content":"SyncVar: option to invoke hooks on server too (#1012) (8c12c28) 113.2.0 (2021-12-20) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-167","content":"Serialization: fixing ReadArray when reading items that are bitpacked (6dfbf84) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-95","content":"Serialization: adding CanReadBits function to network reader (3aae955) "},{"title":"113.1.3 (2021-12-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11313-2021-12-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-168","content":"fix a typo with NetworkServer disconnection logs, improve comments, fix formatting (#1005) (adcf3f6) "},{"title":"113.1.2 (2021-12-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11312-2021-12-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-169","content":"fixing error message in message handler (b38a24c) "},{"title":"113.1.1 (2021-12-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11311-2021-12-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-170","content":"adding meta files (cca1ae2) 113.1.0 (2021-12-07) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-96","content":"adding packers for variable length floats (4c38c09) "},{"title":"113.0.4 (2021-12-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11304-2021-12-04","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-13","content":"limit when pool logs when creating over max (#1001) (ef5c426), closes #998 "},{"title":"113.0.3 (2021-12-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11303-2021-12-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-171","content":"fixing rpc return values for unity 2021.2 (#1000) (a6ee5e8) "},{"title":"113.0.2 (2021-12-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11302-2021-12-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-172","content":"fixing Return rpc for values that require ObjectLocator (11b2fb3) "},{"title":"113.0.1 (2021-12-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11301-2021-12-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-173","content":"fixing ReadNetworkBehaviour when NI is not found (cb20ad9) 113.0.0 (2021-11-29) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-174","content":"making NetworkServer.players a readonly collection (f1b4512) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-97","content":"adding interfaces for SocketFactory to use so it is easier to get/set address and port (#996) (e969e6d)allowing events to be used with syncvar hook (#991) (f455a2d) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-14","content":"splitting peer update into 2 functions (#993) (0d6d34b) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-40","content":"NetworkServer.Players is now a IReadOnlyCollection&lt;INetworkPlayer&gt; "},{"title":"112.0.2 (2021-11-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11202-2021-11-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-175","content":"NetworkReader: fixing reset putting reader back into pool (52253b6) "},{"title":"112.0.1 (2021-11-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11201-2021-11-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-176","content":"wrapping NetworkIdentityIdGenerator in #if editor (f058f7f) 112.0.0 (2021-11-07) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-177","content":"adding a check to make sure asset id isn't created from empty string (26a5bbc)fixing defines for Unity2021.2 (#977) (15ffa5b)fixing id generation for negative numbers (f5e1b9a)renameing identity.Reset so it doesn't override unity's reset function (bc5da6a)using hex for logging prefabhash and sceneid (f0c335f) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-10","content":"NetworkIdentity: moving id generation to its own file (51795ce) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-98","content":"NetworkIdentity: adding helper methods for Id (0ddfdb8)ServerObjectManager: adding AddCharacter method that takes Identity and hash (629036a)ServerObjectManager: adding ReplaceCharacter method that takes Identity and hash (4320c05) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-15","content":"making transform values option to send with spawn message (#972) (22e7dcd)no longer sending PrefabHash if the object is a scene id (46e29a6) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-41","content":"Scene objects based on a prefab will no longer have their PrefabHash set on spawn on the clientNetworkIdentity: Scene Id generation is no longer public "},{"title":"111.1.1 (2021-11-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#11111-2021-11-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-178","content":"weaver error on guard attributes put on awake (#986) (2f89372) 111.1.0 (2021-11-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-99","content":"NetworkVisibility: adding new visibility scripts for checking scenes (#958) (6725625) 111.0.0 (2021-11-01) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-11","content":"NetworkIdentity: removing clientAuthorityCallback (#971) (8adf83d) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-42","content":"NetworkIdentity: NetworkIdentity.clientAuthorityCallback removed 110.0.0 (2021-11-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-179","content":"adding method to remove character without destroying the object (19cad00), closes #883fixing remove authority for host (528f66b) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-43","content":"RemovePlayerForConnection removed, use RemoveCharacter or DestroyCharacter instead. Note for RemoveCharacter destroyServerObject now defaults to true "},{"title":"109.0.3 (2021-10-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10903-2021-10-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-180","content":"fixing spawn prefab when handler is null (eb0fd1c) "},{"title":"109.0.2 (2021-10-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10902-2021-10-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-181","content":"NetworkIdentity: not sending whole spawn message when removing authority (#976) (127bcbf) "},{"title":"109.0.1 (2021-10-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10901-2021-10-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-182","content":"fixing using for editor (27c9522)fixing validate for new prefab id (f66c3b6) 109.0.0 (2021-10-23) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-16","content":"replacing assetid with prefab hash (b14c692) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-44","content":"prefab Id is now an int instead of a guid "},{"title":"108.0.1 (2021-10-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10801-2021-10-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-183","content":"NetworkSceneChecker: fixing awake for networkscenechecker (fb4321e), closes #754 108.0.0 (2021-10-21) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-184","content":"LogSettings: allowing multi object editing (5c83dc6)LogSettings: improving warning when log settings has no reference (c2ed26f)LogSettings: removing log settings component from samples (a72d777)removing redundant property (f8bda6e) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-12","content":"NetworkIdentity: removing NetworkIdentity.GetSceneIdentity (34699ae) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-45","content":"NetworkIdentity: NetworkIdentity.GetSceneIdentity has been removed "},{"title":"107.1.3 (2021-10-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10713-2021-10-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-185","content":"LogSettings: making labels clickable (7f65a8a) "},{"title":"107.1.2 (2021-10-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10712-2021-10-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-186","content":"LogSettings: making reset exit if settings is already set (a227593) "},{"title":"107.1.1 (2021-10-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10711-2021-10-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-187","content":"NetworkBehaviour: fixing find identity if parent gameobject is disabled (04700f9) 107.1.0 (2021-10-10) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-188","content":"this fixes issues with multi scene loading on server and client (#965) (e725a41) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-100","content":"added a method to do physic scene loads on server and tell clients about it (f215cef) "},{"title":"107.0.1 (2021-10-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10701-2021-10-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-189","content":"ServerRpc: fixing sender for server rpc in host mode (#961) (41b6b79) 107.0.0 (2021-10-08) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-17","content":"BitPacking: using quaternion compression by default (#957) (e9fedf1) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-46","content":"BitPacking: Pack extension methods renamed to WriteQuaternion and ReadQuaternion "},{"title":"106.2.4 (2021-10-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10624-2021-10-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-190","content":"CharacterSpawner: respawning character if one exists (203e487) "},{"title":"106.2.3 (2021-10-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10623-2021-10-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-191","content":"NetworkServer: making listening disable server peer (#959) (528698b) "},{"title":"106.2.2 (2021-10-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10622-2021-10-05","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-18","content":"NetworkSceneManager: using hashset contains to check for player (e3df3b5) "},{"title":"106.2.1 (2021-10-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10621-2021-10-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-192","content":"LogGUI: fixing exception in find all loggers for generic types (11755e7)LogGUI: fixing exception in find all loggers for generic types (6221965) 106.2.0 (2021-10-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-193","content":"BitPacking: setting default QuaternionPack to 9 (bcc44a7) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-101","content":"Metrics: allowing background to be updated at runtime (1974a76) 106.1.0 (2021-10-01) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-102","content":"adding sequence size of metrics to inspector (c7a21dd) 106.0.0 (2021-10-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-194","content":"fixing use of network identity in network message (#955) (bc1b82a) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-103","content":"better log settings (#951) (6395251)Peer: updating peer metrics to have more data (#940) (512d916) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-47","content":"log settings are now saved to a SO file instead of EditorPrefs "},{"title":"105.1.3 (2021-10-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10513-2021-10-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-195","content":"fixing errror meessage for server client attributes (#953) (53cf60b) "},{"title":"105.1.2 (2021-09-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10512-2021-09-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-196","content":"ServerRpc: fixing error message when client is not set (f9c8033) "},{"title":"105.1.1 (2021-09-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10511-2021-09-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-197","content":"Character spawner was registering the player prefab in awake and during scene loads this wont ever register again. Need to change it on scene changes. (d6cdc86)updates to SpawnObject.md and SpawnObjects.PNG files. (02e07fa) 105.1.0 (2021-09-23) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-198","content":"fixing order that extension methods are found (#917) (aa8fe87) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-104","content":"Peer: adding send buffer limit (#939) (b4666cb) "},{"title":"105.0.1 (2021-09-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10501-2021-09-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-199","content":"fixing assert when loading scene using its name (72ac3a6)logging error if no handler is registered (54c8520)NetworkSceneManager: registering ready and not ready message for host client (6a97ae9) "},{"title":"Reverts​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#reverts-1","content":"&quot;fix: logging error if no handler is registered&quot; (aca8c5a) 105.0.0 (2021-09-22) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-200","content":"adding client active check in network ping display (1d43243) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-13","content":"move network time to world (6b10ba2) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-48","content":"NetworkTime move from NetworkServer/NetworkClient to NetworkWorld 104.3.0 (2021-09-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-105","content":"Syncvar: adding InitialOnly to syncvar (#941) (abf4637) 104.2.0 (2021-09-20) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-201","content":"Peer: throwing if sequence size is too big (6c7c5ad) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-106","content":"Weaver: adding constant values for max value for number of bits (#934) (2f7c322) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-19","content":"Peer: updating header size for ipv6 (a8798f0) 104.1.0 (2021-09-20) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-107","content":"Weaver: allowing bit packing attributes to work on structs and rpcs (#933) (dca6b54) "},{"title":"104.0.4 (2021-09-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10404-2021-09-16","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-20","content":"Weaver: passing in format string (6c40fd6) "},{"title":"104.0.3 (2021-09-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10403-2021-09-14","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-21","content":"Weaver: increasing performance of PostProcessorReflectionImporter (#931) (13e6d1f) "},{"title":"104.0.2 (2021-09-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10402-2021-09-13","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-22","content":"Weaver: caching NetworkBehaviour properties (#927) (1f2c53b) "},{"title":"104.0.1 (2021-09-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10401-2021-09-13","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-23","content":"Weaver: optimizing find file in assembly resolver (#925) (68d6749) 104.0.0 (2021-09-08) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-202","content":"fixing DestroyOwnedObjects when Identity is null (4c12efe)fixing ReplaceCharacter when identity has no character (b685e11) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-14","content":"changing OnServerAuthenticated to protected (b0da955)moving ready methods to NetworkSceneManager (5dade34)networkplayer sceneis ready notw defaults to true (319e8d8)renaming NotReadyMessage (77f7777)renaming remove observers (12ffce7)renaming SceneObjectManager.SetClientReady (3f8d2bc)replacing ReadyMessage with SceneReadyMessage (beb4ed9) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-108","content":"adding HasCharacter property to network player (445081a)adding OnPlayerSceneReady event (e59c93c)adding option to ignore character check for spawning objects (9234eb4) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-49","content":"NetworkServerManager.OnServerAuthenticated is now protected instead of publicNetworkPlayer.SceneIsReady now default to truemoving SetAllClientsNotReady and SetClientNotReady from ServerObjectManager to NetworkSceneManagerRenaming SceneObjectManager.SetClientReady to SpawnVisibleObjectsRemoving ReadyMessage, Use SceneReadyMessage insteadRenaming NotReadyMessage to SceneNotReadyMessageNetworkPlayer.RemoveObservers renamed to RemoveAllVisibleObjects "},{"title":"103.1.1 (2021-09-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10311-2021-09-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-203","content":"allow to set specific number of logs to be used from changelog. Need to change it atm through code. (d8d28f9)did not realize there was changes not pushed to the branch got from master now and fixed it all up again. (988641f)paths for welcome window changelog. (a1ec86d)proper fix using current welcome window script path to get changelog path. (6868453)this fixes styling and error on 2019+ editors. (3b58a7b)Welcome window now searches for existing file of the changelog to know which mirage install was done. (ab96915) 103.1.0 (2021-09-08) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-109","content":"attributes to use new var int bit packers (#895) (1da5c42) "},{"title":"103.0.1 (2021-09-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10301-2021-09-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-204","content":"fixing syncvar hook not being called in host mode (#918) (7accba7) 103.0.0 (2021-09-05) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-15","content":"NetIdentity to Identity (dc00532)renaming Client enum to RpcTarget (bc32d06)renaming ConnectionToClient to Owner (5493eae) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-50","content":"NetIdentity renamed to IdentityConnectionToClient renamed to Ownerenum used in ClientRpc has been renamed to RpcTarget 102.0.0 (2021-09-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-110","content":"new improved scene manager (#892) (2a9bdec) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-51","content":"NetworkSceneManager has been re-written, many events and methods now have new names. 101.10.0 (2021-08-31) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-111","content":"attributes to use new vector bit packers (#905) (149bf5a) "},{"title":"101.9.2 (2021-08-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10192-2021-08-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-205","content":"fixing namespace for display metrics (9d3f056) "},{"title":"101.9.1 (2021-08-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10191-2021-08-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-206","content":"improving warning message for taking too many objects from pool (2bc42c5) 101.9.0 (2021-08-26) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-207","content":"NanoSocket: adding dispose and finalize (#904) (ca949ea) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-112","content":"attributes to use new float bit packers (#896) (273d27c) 101.8.0 (2021-08-24) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-113","content":"attributes to calculate bit count of a given range (#902) (1c22ea6) 101.7.0 (2021-08-24) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-114","content":"attributes to use zig zag encoding (#897) (ccef5fb) 101.6.0 (2021-08-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-115","content":"serialization: attribute to set bit size for ints base syncvars (#882) (1660ca6) "},{"title":"101.5.1 (2021-08-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10151-2021-08-22","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-24","content":"adding throw helper methods so that AggressiveInlining works (#894) (de12166) 101.5.0 (2021-08-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-116","content":"NetworkVisibility: adding default implementation for OnRebuildObservers (2bcf22f) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-25","content":"sending reply id as nullable (a756389) "},{"title":"101.4.2 (2021-08-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10142-2021-08-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-208","content":"fixing log message for checking observers for connected player (99c31c8)fixing mistake in log change (b090fa2) "},{"title":"101.4.1 (2021-08-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10141-2021-08-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-209","content":"weaver: fixing dirty bit for syncvar (b4a837d) 101.4.0 (2021-08-17) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-210","content":"fixing pong example (5ccb42e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-117","content":"adding helper classes for packing uint values (#878) (3c24f67) 101.3.0 (2021-08-16) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-211","content":"preparing client objects on connect (#876) (9789c0b)SocketLayer: moving endpoint copy outside of connection (c19929f) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-118","content":"adding helper classes for packing float, vector and quaternion (#847) (410bcd6) 101.2.0 (2021-08-10) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-212","content":"only invoking unspawn even if item was removed from dictionary (259e8d0)NetworkReader: checking offset when moving bit position (641b2b0) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-119","content":"adding destroy function that takes network identity (e91f6d3) 101.1.0 (2021-08-06) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-120","content":"peer: adding scripts to display metrics from peer (#872) (e7ac06f)adding way to call SendNotify without allocations and example (#875) (16b3000) "},{"title":"101.0.2 (2021-08-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10102-2021-08-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-213","content":"fixing error message for disconnect (0b603fe)fixing resize buffer so that it uses byte capacity (927fe95)fixing resize buffer when new size is greater than double (972b6d2)removing debug logs from resize buffer (5f3524c) "},{"title":"101.0.1 (2021-07-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10101-2021-07-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-214","content":"making weaver generate serialize functions for nested messages (#873) (a351222) 101.0.0 (2021-07-29) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-16","content":"removing old version of sequencer (0efe4ba) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-52","content":"removing old version of Sequencer, use version in socket layer instead "},{"title":"100.0.2 (2021-07-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10002-2021-07-25","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-26","content":"removing alloc from reliable sends (00945f3)removing allocations from SendToMany (c57f64d) "},{"title":"100.0.1 (2021-07-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#10001-2021-07-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-215","content":"NanoSocket: adding Exception when nanosocket bind fails (a3028ec) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-27","content":"adding native UDP socket (NanoSockets) for supported platforms (#860) (3f34863)removing allocations from assert (5c216de) 100.0.0 (2021-07-15) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-17","content":"moving message handling out of networkplayer (#818) (b2e9d96) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-53","content":"RegisterHandler functions now exist on MessageHandler On Server and ClientNetworkAuthenticator now use Setup methods that should be used to register messages 99.1.0 (2021-07-15) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-121","content":"NetworkWriter: adding method to move position and docs comments (#861) (35cf3ec) "},{"title":"99.0.2 (2021-07-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9902-2021-07-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-216","content":"fixing syncvar reading when using bools (31aca8e) "},{"title":"99.0.1 (2021-07-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9901-2021-07-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-217","content":"adding assembly version to editor asmdef (5969236) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-28","content":"WelcomeWindow: using string builder for change log (4bc10d8) 99.0.0 (2021-07-03) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-29","content":"replacing network writer with a faster version that can do bit packing (#805) (3cffa66) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-54","content":"NetworkWriter and NetworkReader have been completely re-written to support bitpacking "},{"title":"98.0.1 (2021-07-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9801-2021-07-02","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-30","content":"replacing network writer with a faster version that can do bit packing (#805) (773c58f) 98.0.0 (2021-07-02) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-31","content":"improving how socketlayer handles endpoints (#856) (59ce7e0) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-55","content":"Socket functions now use an interface instead of the EndPoint class, Socket Implementations should create a custom Endpoint class for their socket. "},{"title":"97.1.2 (2021-07-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9712-2021-07-01","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-32","content":"SocketLayer: adding IEquatable to struct (f935786) "},{"title":"97.1.1 (2021-06-28)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9711-2021-06-28","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-218","content":"NetworkManagerHud: adding null check before using server or client (e4200e0)NetworkManagerHud: returning to offline menu when server or client is stopped (6b4c988) 97.1.0 (2021-06-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-122","content":"SocketLayer: adding fragmentation to reliable sending (#851) (4764294) "},{"title":"97.0.1 (2021-06-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9701-2021-06-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-219","content":"fixing first notify not being returned (#854) (84b7d2e) 97.0.0 (2021-06-27) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-18","content":"simplifying packet size in config (#852) (6bc5ab8) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-56","content":"BufferSize and MTU replaced by MaxPacketSize "},{"title":"96.5.2 (2021-06-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9652-2021-06-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-220","content":"fixing typo in error (063e3b4) "},{"title":"96.5.1 (2021-06-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9651-2021-06-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-221","content":"fixing typo in error (6195108) 96.5.0 (2021-06-23) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-222","content":"fixing length used for sending unreliable (821e2d2) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-123","content":"adding send methods for array segment (ea09c61) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-33","content":"using array segments for sending (c990952)using pool for send notify (ac000eb) "},{"title":"96.4.3 (2021-06-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9643-2021-06-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-223","content":"checking if disconnected before packing message (a76caf1) "},{"title":"96.4.2 (2021-06-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9642-2021-06-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-224","content":"null checks when types can't be resolved (#848) (677c792) "},{"title":"96.4.1 (2021-06-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9641-2021-06-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-225","content":"welcome window fixes (#845) (a187844) 96.4.0 (2021-06-20) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-124","content":"adding attribute to ignore extension method for read writer (#841) (9494500) "},{"title":"96.3.1 (2021-06-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9631-2021-06-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-226","content":"improving error for failed deserialize (2e1601b)improving error for message handler (7ab73b6) 96.3.0 (2021-06-04) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-227","content":"adding action to pipe connection so client events can be called on stop (#838) (eebe63a), closes #837 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-125","content":"adding host mode stopped as reason for client disconnect (0054dd5) "},{"title":"96.2.1 (2021-06-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9621-2021-06-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-228","content":"adding warning if extension method is overwriting existing method (#836) (aee89dc) 96.2.0 (2021-06-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-126","content":"making enums for socket layer public instead of internal (bb9f209) "},{"title":"96.1.2 (2021-06-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9612-2021-06-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-229","content":"fixing order of host setup (#832) (3951a40) "},{"title":"96.1.1 (2021-06-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9611-2021-06-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-230","content":"closing socket should give by local peer as reason (993933f) 96.1.0 (2021-06-02) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-231","content":"moving syncvar sender to networkserver so it gets intilized earlier (8b2b828)stopping Server.Stop being called twice (b950d39) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-127","content":"adding is authenticated bool to network player (#828) (372fd70) 96.0.0 (2021-06-01) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-128","content":"reworking network authenticator (#827) (a3c61d8) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-57","content":"BasicAuthenticator now uses single string field instead of 2 Renaming methods from OnServerAuthenticate to ServerAuthenticateRenaming methods from OnClientAuthenticate to ClientAuthenticate "},{"title":"95.1.1 (2021-05-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9511-2021-05-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-232","content":"fixing errors in tanks sample (ed99d05) 95.1.0 (2021-05-29) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-129","content":"adding started event to client (#825) (3360b7c) 95.0.0 (2021-05-28) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-19","content":"remove channel from handler (#824) (f11ef9a) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-130","content":"adding disconnect reason to client disconnect (#820) (e597570)adding Peer config properties (9fd8a05) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-34","content":"NetworkAnimator parameters use ArraySegment instead of Arrays (#822) (00f4833)remove redundant transform calls on NT (#823) (2d10305) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-58","content":"NetworkDiagnostics no longer tracks channelClient.Disconnected now has a Reason argument 94.0.0 (2021-05-24) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-233","content":"removing other uses of old Notify (25a0503) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-20","content":"removing Obsolete Notify code from networkplayer (b2e5531) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-59","content":"removing notify code from networkplayer, notify is now part of peer "},{"title":"93.0.2 (2021-05-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9302-2021-05-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-234","content":"closing socket on application quit (c37fe7d)fixing SocketException after closing remote applcation (4ed12ba)fixing udp socket exception on linux (#809) (a4e8689)removing unnecessary check (e8a93a4)stopping null ref in disconnect (4d0f092) "},{"title":"93.0.1 (2021-05-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9301-2021-05-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-235","content":"stopping null ref caused by hud stopping non-active server (8aa561a) 93.0.0 (2021-05-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-131","content":"foldout for events on network server (#806) (cbb12d1)replacing transport with peer (#780) (66b2315) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-60","content":"All Transports are obsolete. Transports Are replaced with ISocket. Custom Transports should now implement ISocket and SocketFactory insteadMessage handlers are now invoked in Update instead of in an Async CoroutineSend Notify moved to SocketLayerServer.StartAsync is no longer AsyncServer.StartAsync is now called Server.StartServerClient.Connect is no longer asyncLocal message in host mode invoke handlers immediately instead of waiting till next updateNetworkPlayer now has a Disconnect method. This means user does not need a reference to SocketLayer asmdef.Disconnected players are blocked from sending messages 92.0.0 (2021-05-23) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-21","content":"moving networkmanager gui and hud to components folder (#802) (7612bb6) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-132","content":"adding weaver support for nullable types (#800) (14af628) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-61","content":"NetworkManagerHud is now in the Mirage.Components asmdef 91.2.0 (2021-05-18) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-133","content":"simplifying some checks in ServerObjectManager (#801) (fe9a07a) 91.1.0 (2021-05-17) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-236","content":"fixing compile in new gui (d2800be) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-134","content":"add optional imgui support to network manager hud (#789) (7841794) "},{"title":"91.0.1 (2021-05-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#9101-2021-05-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-237","content":"unspawning all server object on server stop (5041a06) 91.0.0 (2021-05-01) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-22","content":"renaming listen to start and merging it with start host (#795) (3d4e091) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-62","content":"ListenAsync renamed to StartAsync StartHost removed, use StartAsync with localClient parameter insteadOnStartHost is now always called after Started 90.0.0 (2021-04-30) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-23","content":"removing stop host (#794) (55536fc) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-63","content":"NetworkServer.StopHost removed, use NetworkServer.Disconnect instead 89.0.0 (2021-04-28) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-24","content":"renaming network server disconnect to stop (#793) (634139c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-64","content":"NetworkServer.Disconnect is now called Stop "},{"title":"88.1.3 (2021-04-28)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8813-2021-04-28","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-238","content":"removing quitting handler on cleanup (1132d92)server offline does not need a specific object (#788) (9ca7639) "},{"title":"88.1.2 (2021-04-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8812-2021-04-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-239","content":"using null propagation to stop null ref being throw (5da2c6d) "},{"title":"88.1.1 (2021-04-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8811-2021-04-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-240","content":"class name did not match file name (5eb58eb)test was not correctly checking for offline server (e913004) 88.1.0 (2021-04-20) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-135","content":"new socket layer (#749) (fb84452) 88.0.0 (2021-04-17) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-25","content":"remove unspawn as its redundant with destroy (#760) (6a8497c)removing GetNewPlayer and sealing networkplayer (#781) (16a6ba0) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-65","content":"removed Unspawn method, use with Destroy with destroyServerObject flag insteadno longer possible to create custom INetworkPlayer to be used inside mirage "},{"title":"87.2.4 (2021-04-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8724-2021-04-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-241","content":"add some exception documentation (829f10a) "},{"title":"87.2.3 (2021-04-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8723-2021-04-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-242","content":"param no longer exists. updating summary (c9a919f) "},{"title":"87.2.2 (2021-04-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8722-2021-04-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-243","content":"WelcomeWindow: re-adding logger and if 2020.1 or newer (288ed0f) "},{"title":"87.2.1 (2021-04-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8721-2021-04-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-244","content":"clientchangedscene event called too early (#776) (82dda04) 87.2.0 (2021-04-12) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-136","content":"adding change log parsing to welcome window. (#771) (e5409ff)dark mode (#750) (e3f1d26) "},{"title":"87.1.2 (2021-04-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8712-2021-04-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-245","content":"bug with scene object spawning (#773) (b02c13d) "},{"title":"87.1.1 (2021-04-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8711-2021-04-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-246","content":"moving using out of #if (00517bc) 87.1.0 (2021-04-08) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-137","content":"add NetworkManagerMode back to NetMan (#756) (f1f8f57) "},{"title":"87.0.1 (2021-04-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8701-2021-04-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-247","content":"add icons to all mirage monobehaviours (#769) (3a9673f) 87.0.0 (2021-04-08) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-248","content":"using add late event for authority and combining start and stop events (#767) (8903f00)using AddLateEvent to stop race condition for client events (#768) (681875b)using AddLateEvent to stop race condition for network identity events (#766) (4f8bf11)using AddLateEvent to stop race condition for server events (#765) (a1ec84c) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-138","content":"adding RemoveListener and RemoveAllListeners to AddLateEvent (#764) (d67c96c)adding RemoveListener and RemoveAllListeners to AddLateEvent (#764) (0ca2804) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-66","content":"NetworkClient.Connected event is now type of IAddLateEvent NetworkClient.Authenticated event is now type of IAddLateEventNetworkClient.Disconnected event is now type of IAddLateEvent refactor: removing NetworkConnectionEvent use NetworkPlayerEvent instead NetworkConnectionEvent renamed to NetworkPlayerEvent reverting clean up change Identity.OnStartAuthority and IdentityOnStopAuthority are now Identity.OnAuthorityChanged and are type of IAddLateEvent&lt;bool&gt; Server.Started event is now type of IAddLateEvent Server.Stoped event is now type of IAddLateEventServer.OnStartHost event is now type of IAddLateEventServer.OnStopHost event is now type of IAddLateEventinspector values for changed events will need to be re-assigned Identity.OnStartServer event is now type of IAddLateEvent Identity.OnStopServer event is now type of IAddLateEventIdentity.OnStartClient event is now type of IAddLateEventIdentity.OnStopClient event is now type of IAddLateEventIdentity.OnStartLocalPlayer event is now type of IAddLateEventinspector values for changed events will need to be re-assigned AddLateEvent Reset no longer removes listenersAddLateEvent Reset no longer removes listeners "},{"title":"86.0.2 (2021-04-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8602-2021-04-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-249","content":"removing redundant null checks (909b668) "},{"title":"86.0.1 (2021-04-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8601-2021-04-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-250","content":"changed icon to new mirage icons. (#758) (04edac0) 86.0.0 (2021-04-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-251","content":"better name to stop namespace conflict with Unity (#755) (69784e7) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-67","content":"networkManager.SceneManager removed to networkManager.NetworkSceneManager 85.0.0 (2021-03-30) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-26","content":"moving syncvar sending to its own class (9699e03) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-139","content":"adding class that will invoke late handlers (631adce) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-68","content":"Dirty object collection is now inside SyncVarSender "},{"title":"84.3.1 (2021-03-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8431-2021-03-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-252","content":"adding FormerlySerializedAs to networkanimator (39f8fbd) 84.3.0 (2021-03-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-140","content":"not listening can now be toggled at runtime. fixes host spawning (#728) (256b16c) "},{"title":"84.2.1 (2021-03-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8421-2021-03-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-253","content":"invoke client rpc only once in host mode (#744) (ee6e55e) 84.2.0 (2021-03-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-141","content":"configurable wait time for tests (#729) (b10f3e8) "},{"title":"84.1.1 (2021-03-26)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8411-2021-03-26","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-254","content":"make sure resolved typedef isn't null (#731) (2f6414f) 84.1.0 (2021-03-25) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-142","content":"sample for interest management (#727) (0f4cdc5) 84.0.0 (2021-03-24) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-27","content":"using interface instead of network server (#722) (7312bd8) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-69","content":"fields and parameters using NetworkServer are now using INetworkServer Instead 83.0.0 (2021-03-24) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-28","content":"using interface instead of network client (#721) (703596a) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-70","content":"fields and parameters using NetworkClient are now using INetworkClient Instead 82.0.0 (2021-03-24) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-29","content":"changing indexer to try get (#720) (01ca9bb)removing connection to server (#703) (ff95634) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-71","content":"ObjectLocator now has TryGet method instead of indexer that returns null updating uses of objectLocator fixing names not being the same Removed ConnectionToServer property removing uses of ConnectionToServer removing use in test removing ClientRpc player target creating null changing tests to expect null fixing docs using client player for target rpc Co-authored-by: Paul Pacheco &lt;paulpach@gmail.com&gt; fixing tests for rpc target Co-authored-by: Paul Pacheco &lt;paulpach@gmail.com&gt; "},{"title":"81.0.2 (2021-03-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8102-2021-03-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-255","content":"show syncvar label (c32a940) "},{"title":"81.0.1 (2021-03-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8101-2021-03-20","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-35","content":"clientrpc in host mode bypasses network (#714) (edb0705) 81.0.0 (2021-03-19) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-36","content":"serverrpc bypasses network on host mode (#708) (695eb46) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-72","content":"ServerRpc execute synchronous in host mode "},{"title":"80.0.1 (2021-03-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#8001-2021-03-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-256","content":"compilation issue on standalone build (d6bea93) 80.0.0 (2021-03-15) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-30","content":"rename connection to player (#706) (03e8cfa) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-73","content":"Connection renamed to player 79.0.0 (2021-03-15) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-31","content":"move serialization into Mirage.Serialization (#700) (5dc037d) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-74","content":"NetworkReader and NetworkWriter moved to Mirage.Serialization namespace 78.0.0 (2021-03-14) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-32","content":"move collections to Mirage.Collections (#698) (e22f765) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-75","content":"collections moved to Mirage.Collections 77.0.0 (2021-03-14) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-33","content":"move logging into a folder and namespace (#697) (814653f) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-76","content":"Logging moved into a namespace, use Mirror.Logging 76.0.0 (2021-03-13) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-34","content":"remove local visibility hacks (#696) (df499ab) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-77","content":"NetworkVisibility no longer disables renderers in host mode 75.1.0 (2021-03-13) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-143","content":"0 is not lossy when compressing quaternions (#695) (c1552c0) 75.0.0 (2021-03-13) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-257","content":"adding ISceneLoader to INetworkPlayer (e8ab7a4)compression of 90 degrees angle (#689) (2c0bac6)fixing uses of message (f2a5522) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-35","content":"moving static send to NetworkServer (#692) (5b19dc3)removing address property from player (#691) (d772e53)removing disconnect method from player (#688) (e1daf92)rename PlayerSpawner to CharacterSpawner (#686) (1db3498)renaming NetworkConnection to NetworkPlayer (#684) (3ecb659) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-144","content":"adding Connection property to NetworkPlayer (#687) (5e1c4ba)adding logger.Assert that doesn't require a message (8c213e3) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-78","content":"moving NetworkPlayer.Send to NetworkServer.SendToMany Address replaced with Connection.GetEndPointAddress updating uses of Address Disconnect replaced with Connection.Disconnect fixing uses in Mirage updating uses in authenticators Renamed PlayerSpawner to CharacterSpawner renaming NetworkConnection to NetworkPlayer renaming types in weaver tests fixing test message fixing xref in docs 74.0.0 (2021-03-08) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-258","content":"invoking started event when Listening is false (#675) (afef2d4) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-36","content":"transports: removing sendAsync from transports (#673) (42b165f)removing sendasync from networkconnection (#672) (e79b00e) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-79","content":"transports: Removed SendAsync from transport, use Send insteadRemoved SendAsync from NetworkConnection. Use Send instead 73.0.0 (2021-03-06) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-37","content":"replacing version enum with assembly version (#663) (d8facb7) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-80","content":"Version.Current is no longer an enum and now returns Mirage's assembly version "},{"title":"72.0.1 (2021-03-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#7201-2021-03-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-259","content":"disabling welcome window before unity 2020.1 (#662) (a527af4) 72.0.0 (2021-03-05) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-38","content":"removing un-used INetworkManager interface (#661) (347bf6c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-81","content":"removing INetworkManager 71.0.0 (2021-03-05) "},{"title":"Styles​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#styles","content":"renaming NetworkScenePath to ActiveScenePath (#647) (7a26360) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-82","content":"Use NetworkSceneManager.ActiveScenePath instead of NetworkSceneManager.NetworkScenePath removing cref till docs are fixed 70.0.0 (2021-03-04) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-39","content":"spawnobjects throws exception instead of returning false (#639) (4cb8afb) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-83","content":"SpawnObjects throws Exception instead of returning false "},{"title":"69.1.2 (2021-03-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6912-2021-03-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-260","content":"weaver: adding missing errors when Attributes are used in monobehaviour (64b580b) "},{"title":"69.1.1 (2021-03-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6911-2021-03-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-261","content":"multi scene example nre and event errors (#649) (8c4c352) 69.1.0 (2021-03-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-145","content":"adding assert extension method to logger (#642) (1df6081) 69.0.0 (2021-03-02) "},{"title":"Styles​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#styles-1","content":"renaming NumPlayers to NumberOfPlayers (#646) (27b99be) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-84","content":"Use NetworkServer.NumberOfPlayers instead of NetworkServer.NumPlayers "},{"title":"68.0.3 (2021-02-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6803-2021-02-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-262","content":"welcome window layout (#634) (2bceedb) "},{"title":"68.0.2 (2021-02-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6802-2021-02-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-263","content":"mirage icon missing in welcome window (#637) (6c4dc9e) "},{"title":"68.0.1 (2021-02-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6801-2021-02-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-264","content":"welcome window icon not being found (#635) (263a7b2) 68.0.0 (2021-02-22) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-40","content":"move LocalPlayer to ClientObjectManager (#619) (df1e379) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-146","content":"add more control over player spawning (#626) (e0dd626) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-85","content":"removed NetworkClient.LocalPlayer, use ClientObjectManager.LocalPlayer instead 67.4.0 (2021-02-21) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-147","content":"support generic network behaviors (#574) (715642c) "},{"title":"67.3.2 (2021-02-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6732-2021-02-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-265","content":"passing NetworkBehaviors in syncvars work with il2pp (#631) (cd7317f), closes #630 #629 "},{"title":"67.3.1 (2021-02-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6731-2021-02-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-266","content":"passing NetworkBehaviors in RPC works with IL2PP (#630) (87becee), closes #629 67.3.0 (2021-02-21) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-148","content":"install/uninstall modules from welcome window (#593) (53ac404) "},{"title":"67.2.7 (2021-02-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6727-2021-02-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-267","content":"show selected tab when welcome screen is opened (#628) (f6cae98) "},{"title":"67.2.6 (2021-02-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6726-2021-02-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-268","content":"bug in tanks sample (#575) (d82efea) "},{"title":"67.2.5 (2021-02-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6725-2021-02-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-269","content":"revert preprocessor change (b89c454) "},{"title":"67.2.4 (2021-02-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6724-2021-02-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-270","content":"add comments and backing field for time (#618) (da74e11) "},{"title":"67.2.3 (2021-02-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6723-2021-02-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-271","content":"add summaries to event classes (#623) (e6b9354)no longer true. spawnableobjects populated by FindObjectsOfTypeAll (#622) (5692709) "},{"title":"67.2.2 (2021-02-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6722-2021-02-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-272","content":"drop support for older versions (5dc12b5) "},{"title":"67.2.1 (2021-02-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6721-2021-02-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-273","content":"add missing properties to interface (#617) (e45920e) 67.2.0 (2021-02-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-149","content":"add events to interfaces (#614) (4d1a772) 67.1.0 (2021-02-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-150","content":"welcome window shows active tab (#616) (1411d0a) "},{"title":"67.0.2 (2021-02-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6702-2021-02-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-274","content":"clientObjectManager was not using its interface (#615) (d2b07ea) "},{"title":"67.0.1 (2021-02-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6701-2021-02-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-275","content":"move interfaces into their own files (#613) (432005b) 67.0.0 (2021-02-19) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-41","content":"remove unnecessary assembly definition (#599) (89ffc7c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-86","content":"removed MirageNG.asmdef, change your assembly to use Mirage.asmdef instead "},{"title":"66.2.2 (2021-02-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6622-2021-02-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-276","content":"simplify checking if client is host (#602) (dbf5784)static not needed (#604) (879ba01)stopping : being at the start of all log messages (#606) (8efe7ce) "},{"title":"66.2.1 (2021-02-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6621-2021-02-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-277","content":"fix serializing NetworkBehavior and GameObjects (b74fcf9) 66.2.0 (2021-02-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-151","content":"make networkscenemanager optional again (#595) (ed180ff) 66.1.0 (2021-02-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-152","content":"optional dontdestroyonload for networkscenemanager (#596) (67e41bd) 66.0.0 (2021-02-16) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-278","content":"update package json for new name and url (#594) (e915aeb) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-42","content":"change to Mirage namespace (#590) (bafe18c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-87","content":"replaced Mirror namespace with Mirage 65.1.0 (2021-02-15) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-153","content":"move spawned dictionary to com/som (#568) (1ad8f3d) 65.0.0 (2021-02-14) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-43","content":"NetworkReader no longer depends on NetworkClient and NetworkServer (15f27c4)readers no longer depends on NetworkClient and NetworkServer (#583) (177c307) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-88","content":"NetworkReader no longer have .Client and .Server, it has a .ObjectLocator insteadNetworkReader no longer have .Client and .Server, it has a .ObjectLocator instead 64.0.0 (2021-02-14) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-44","content":"separate player ownership from NetworkServer (#580) (8d7efa6) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-89","content":"SendToClientOfPlayer removed. Use identity.ConnectionToClient.Send() instead 63.5.0 (2021-02-10) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-154","content":"Notify acks messages in one way messages (07ca15d) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-37","content":"no need to send initial empty notify (8fbe346) 63.4.0 (2021-02-09) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-155","content":"open changelog page when user downloaded a new version (#571) (d9ed96e) "},{"title":"63.3.5 (2021-02-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6335-2021-02-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-279","content":"nre issues when trying to reload back in the same instance to a … (#570) (158ea2f) "},{"title":"63.3.4 (2021-02-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6334-2021-02-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-280","content":"increase log level of full server (#572) (c4ce239) "},{"title":"63.3.3 (2021-02-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6333-2021-02-05","content":""},{"title":"Reverts​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#reverts-2","content":"Revert &quot;fix: support legacy Weaver (#546)&quot; (d58725f), closes #546 "},{"title":"63.3.2 (2021-02-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6332-2021-02-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-281","content":"support legacy Weaver (#546) (e1bbc03) "},{"title":"63.3.1 (2021-02-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6331-2021-02-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-282","content":"client throwing exception when force disconnecting (#567) (a69b498) 63.3.0 (2021-02-03) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-283","content":"remove last start call (b8fc97d) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-156","content":"explicit declaration of network messages (#565) (b0610e2) "},{"title":"63.2.1 (2021-02-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6321-2021-02-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-284","content":"built in messages get an id (fe71bcd) 63.2.0 (2021-02-03) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-157","content":"raise event when spawning objects (#564) (60725d9) 63.1.0 (2021-02-03) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-158","content":"spawn an object by network identity ref (#561) (87a520d) "},{"title":"63.0.1 (2021-02-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6301-2021-02-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-285","content":"better benchmark (#562) (731f13b) 63.0.0 (2021-02-02) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-286","content":"object references in examples (06d89c0) "},{"title":"Styles​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#styles-2","content":"Use PascalCase for public fields (9dc94c1)Use PascalCase for public fields (8a195f6)Use PascalCase for public fields (8366e80)Use PascalCase for public fields (2717957)Use PascalCase for public fields (f1758d3)Use PascalCase for public fields (e478d8d)Use PascalCase for public fields (5f88032) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-90","content":"HeadlessAutoStart.* renamed to follow PascalCaseOnlineOfflineScene to use PascalCasePlayerSpawner.* renamed to follow PascalCaseNetworkManager fields renamed to PascalCaseClientObjectManager.client renamed to .ClientClientObjectManager.networkSceneManager renamed to .NetworkSceneManagerServerObjectManager.server renamed to .ServerServerObjectManager.networkSceneManager renamed to .NetworkSceneManagerNetworkSceneManager.client renamed to .ClientNetworkSceneManager.server renamed to .Server 62.10.0 (2021-02-01) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-159","content":"recommend Fast3 as default for performance (#559) (8cbf6e6) "},{"title":"62.9.8 (2021-02-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6298-2021-02-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-287","content":"remove GC from demo (2474a0c) "},{"title":"62.9.7 (2021-02-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6297-2021-02-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-288","content":"add ignorance support with defines for test (35634d5)make test transport agnostic (cbb00b3) "},{"title":"62.9.6 (2021-01-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6296-2021-01-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-289","content":"move method not firing and too slow (56ce2fd)nre in headless example (9e8dccc) "},{"title":"62.9.5 (2021-01-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6295-2021-01-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-290","content":"bug cleaning up networkscenemanager (8db98db)fast domain reload with Kcp (bd3676d), closes #547 "},{"title":"62.9.4 (2021-01-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6294-2021-01-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-291","content":"running weaver for editor scripts (#557) (12a1d73), closes #537 #552 "},{"title":"62.9.3 (2021-01-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6293-2021-01-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-292","content":"use logger in KcpConnection (#553) (90df76d) "},{"title":"62.9.2 (2021-01-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6292-2021-01-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-293","content":"add nullable to event invokes (#554) (8236614) "},{"title":"62.9.1 (2021-01-26)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6291-2021-01-26","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-38","content":"cache component index in network behavior (#550) (e566545) 62.9.0 (2021-01-26) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-160","content":"notify algorithm in connection (#549) (64e4bbc) 62.8.0 (2021-01-25) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-161","content":"sequence generator (#548) (1137865) "},{"title":"62.7.2 (2021-01-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6272-2021-01-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-294","content":"use unity's cecil (#545) (4da7a45) "},{"title":"62.7.1 (2021-01-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6271-2021-01-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-295","content":"simplified SetHostVisibilityExceptionNetworkBehaviour test (#544) (b7465a5) 62.7.0 (2021-01-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-162","content":"transports can report bandwidth (#542) (d84b3bb) "},{"title":"62.6.1 (2021-01-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6261-2021-01-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-296","content":"additive scene example fixes (#540) (81c6d95) 62.6.0 (2021-01-20) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-163","content":"add Online and Offline scene support via optional component (#505) (a83dd5f) "},{"title":"62.5.5 (2021-01-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6255-2021-01-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-297","content":"additive scene example not working (#534) (1580627) "},{"title":"62.5.4 (2021-01-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6254-2021-01-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-298","content":"don't destroy network scene objects on server stop (#518) (c9d0387) "},{"title":"62.5.3 (2021-01-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6253-2021-01-19","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-39","content":"avoid weaving editor scripts (#537) (42967f3) "},{"title":"62.5.2 (2021-01-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6252-2021-01-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-299","content":"error saving field name SYNC_VAR_COUNT (#536) (cbc52e5) "},{"title":"62.5.1 (2021-01-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6251-2021-01-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-300","content":"invalid IL with NI syncvars with hooks (#535) (49f6141) 62.5.0 (2021-01-18) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-164","content":"Add ConnectAsync overload with port. (#516) (0a9558f) "},{"title":"62.4.1 (2021-01-15)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6241-2021-01-15","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-301","content":"unbound allocation (1fe1bf6) 62.4.0 (2021-01-13) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-165","content":"set the assembly version in all assemblies (#531) (da381bd) 62.3.0 (2021-01-12) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-166","content":"writer generation errors link to code (b76e873) 62.2.0 (2021-01-12) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-167","content":"reader generation errors link to the code (99a70fe) 62.1.0 (2021-01-11) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-168","content":"send NI, NB and GO in RPC (#528) (428ca63) "},{"title":"62.0.1 (2021-01-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6201-2021-01-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-302","content":"Use Guid.Empty in the tests (e900d33) 62.0.0 (2021-01-11) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-169","content":"use ILPostProcessor for weaver (#525) (def64cd), closes /forum.unity.com/threads/how-does-unity-do-codegen-and-why-cant-i-do-it-myself.853867/#post-5646937 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-91","content":"Mirage assembly no longer contains the components. Reference Mirror.Components instead.Editor scripts are no longer weaved "},{"title":"61.1.2 (2021-01-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6112-2021-01-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-303","content":"NullReferenceException destroying objects (#526) (3ad2608) "},{"title":"61.1.1 (2021-01-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6111-2021-01-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-304","content":"warning with missing Transport folder (be5aa69) 61.1.0 (2021-01-05) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-170","content":"allow for generic NetworkBehaviors (#519) (2858ff4) "},{"title":"61.0.2 (2021-01-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6102-2021-01-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-305","content":"method access exception with serverrpc that return something (8cb00e9) "},{"title":"61.0.1 (2020-12-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6101-2020-12-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-306","content":"Icon in welcome window (eb97cef) 61.0.0 (2020-12-31) Removed NetworkDiscovery (0df3afc) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-92","content":"Moved NetworkDiscovery to a separate repo "},{"title":"60.4.1 (2020-12-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6041-2020-12-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-307","content":"NRE in welcome window (e4e2fa5) 60.4.0 (2020-12-29) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-171","content":"SyncVar support arbitrary NetworkBehavior (#514) (67b0c9f) 60.3.0 (2020-12-29) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-172","content":"Support gameobjects in syncvars (#513) (29fb101) 60.2.0 (2020-12-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-173","content":"UIElements Welcome Window (#510) (654c5e1) "},{"title":"60.1.1 (2020-12-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6011-2020-12-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-308","content":"runtime version (10e7d6e)runtime version (51b925f) 60.1.0 (2020-12-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-174","content":"Provide mirrorng version at runtime (#511) (b2df972) "},{"title":"60.0.1 (2020-12-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#6001-2020-12-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-309","content":"network objects not destroyed on server stop (#468) (abf5f2f) 60.0.0 (2020-12-19) remove serverOnly (#496) (0ef5c33), closes #496 #389 #389 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-310","content":"prevent DoS attacks with invalid array length (#500) (78e6077) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-93","content":"Remove serverOnly option in NetworkIdentity "},{"title":"59.2.1 (2020-11-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5921-2020-11-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-311","content":"font color in basic example (a9dfb3f) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-40","content":"Ping now goes over unreliable channel (#507) (096d62d) 59.2.0 (2020-11-28) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-175","content":"Quaternion compression (#501) (c67f873) 59.1.0 (2020-11-25) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-176","content":"User can now configure window size (ec0b839) "},{"title":"59.0.8 (2020-11-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5908-2020-11-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-312","content":"check for log level for warnings (#445) (90013ea) "},{"title":"59.0.7 (2020-11-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5907-2020-11-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-313","content":"use OnDestroy to Unsubscribe in comps like #480 (#481) (3dd66c0) "},{"title":"59.0.6 (2020-11-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5906-2020-11-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-314","content":"script not found error with NetworkDiscoveryHud (#494) (8e39e21) "},{"title":"59.0.5 (2020-11-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5905-2020-11-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-315","content":"generate reader for types in other assemblies (b685226)generate writer for types in other assemblies (8385c29) "},{"title":"59.0.4 (2020-11-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5904-2020-11-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-316","content":"using mathematics in commands and rpcs (#492) (ee27841) "},{"title":"59.0.3 (2020-11-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5903-2020-11-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-317","content":"calling base command in other assemblies (e49fda1)error importing scriptable object from another module (6cdd112) "},{"title":"59.0.2 (2020-11-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5902-2020-11-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-318","content":"logs now save properly when reloading (19c86e7) "},{"title":"59.0.1 (2020-11-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5901-2020-11-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-319","content":"don't consume so much memory registering prefabs (#486) (d451782) 59.0.0 (2020-11-06) Transport now has connected and started events. (#479) (3e7f688), closes #479 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-94","content":"Add Connected event to Transport APIAdd Started event to Transport APIListenAsync returns a task that completes when the transport stopsRemove AcceptAsync from transports "},{"title":"58.0.1 (2020-11-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5801-2020-11-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-320","content":"Restarting host does not start player (#480) (11cb7f2) 58.0.0 (2020-11-05) ClientObjectManager now requires NetworkIdentity (#475) (103593b), closes #475 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-95","content":"Now you can only assign prefabs with NetworkIdentity to the ClientObjectManager 57.0.0 (2020-11-05) Remove redundant spawn handler (#476) (9bbf0dc), closes #476 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-96","content":"Removed redundant spawn handler 56.5.0 (2020-11-04) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-177","content":"ClientObjectManager is available in network behaviors (#466) (d0d0b2a) "},{"title":"56.4.4 (2020-11-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5644-2020-11-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-321","content":"do not cache lastReceived in release (9a15863) "},{"title":"56.4.3 (2020-11-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5643-2020-11-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-322","content":"PlayerSpawner depends on ClientObjectManager throw if missing (#472) (0ab0a70) "},{"title":"56.4.2 (2020-11-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5642-2020-11-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-323","content":"better transport checks on NS and NC (#464) (7703d80)old refs to NetMan (0df8c89) "},{"title":"56.4.1 (2020-11-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5641-2020-11-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-324","content":"DoS vector in kcp accept (#469) (6964bc6) 56.4.0 (2020-11-03) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-178","content":"return values from [ServerRpc] (#454) (0d076a7) "},{"title":"56.3.4 (2020-11-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5634-2020-11-03","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-325","content":"added missing UniTask.asmdef reference to Mirror.Weaver.asmdef (#463) (bcb8ae7) "},{"title":"56.3.3 (2020-11-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5633-2020-11-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-326","content":"prevent NRE if client is not present on server (#461) (357da87) "},{"title":"56.3.2 (2020-11-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5632-2020-11-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-327","content":"NetworkAnimator: fixing trigger not applied on host (49b5325) "},{"title":"56.3.1 (2020-11-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5631-2020-11-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-328","content":"accept after disconnect (3d06e8a)add missing reset (4f75b92) 56.3.0 (2020-11-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-179","content":"throw exception if invalid rpc (#456) (3cef90d) 56.2.0 (2020-11-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-180","content":"server sends list of additive scenes upon connect (#451) (3d0b6c5) "},{"title":"56.1.2 (2020-10-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5612-2020-10-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-329","content":"client NRE for objects spawned in .Started in hostmode (#453) (918504c) "},{"title":"56.1.1 (2020-10-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5611-2020-10-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-330","content":"disconnect transport when play mode exits (#449) (e741809) 56.1.0 (2020-10-30) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-181","content":"add quick access ref to NetIdentity.ServerObjectManager (#444) (d691ca4) "},{"title":"56.0.2 (2020-10-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5602-2020-10-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-331","content":"third try to prevent double load (#447) (347d176) "},{"title":"56.0.1 (2020-10-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5601-2020-10-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-332","content":"host wasnt loading with additive fix (cd6110a)wrong text in exception (d0d5581) 56.0.0 (2020-10-29) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking","content":"add ServerObjectManager for object spawning (#443) (7abf355), closes #438 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-97","content":"NetworkServer no longer spawns objects, add a ServerObjectManager for that "},{"title":"55.0.1 (2020-10-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5501-2020-10-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-333","content":"weaver: NRE with basic authenticator (#440) (68480db) 55.0.0 (2020-10-27) no need for NM here (78b3b10) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-98","content":"Authenticator does not have dependency on NM anymore "},{"title":"54.1.1 (2020-10-26)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5411-2020-10-26","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-334","content":"local client loading additive scene twice. (5a74fb0) 54.1.0 (2020-10-26) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-182","content":"log settings component (#439) (9f06f2e) 54.0.0 (2020-10-25) ReceiveAsync throws EndOfStreamException (#435) (faf2e54), closes #435 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-99","content":"External transports will need an update "},{"title":"53.0.1 (2020-10-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5301-2020-10-24","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-41","content":"faster component serialization (#430) (b675027), closes #2331 53.0.0 (2020-10-23) Remove FallbackTransport (#432) (261bf24), closes #432Remove FallbackTransport (2c04202) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-100","content":"FallbackTransport removed fix docs FallbackTransport removed "},{"title":"52.1.1 (2020-10-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5211-2020-10-23","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-42","content":"simplify NetworkWriter/Reader dispose (#431) (bf62345) 52.1.0 (2020-10-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-183","content":"SyncDictionary raise event when initially synchronized (23349af)SyncList raise event when initially synchronized (9f679c5)SyncSet raise event when initially synchronized (03f2075) 52.1.0 (2020-10-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-184","content":"SyncDictionary raise event when initially synchronized (23349af)SyncList raise event when initially synchronized (9f679c5)SyncSet raise event when initially synchronized (03f2075) "},{"title":"52.0.1 (2020-10-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5201-2020-10-23","content":""},{"title":"Mirage.Collections","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Collections","url":"docs/reference/Mirage.Collections/#classes","content":"SyncDictionary&lt;TKey, TValue&gt;​ SyncHashSet&lt;T&gt;​ SyncIDictionary&lt;TKey, TValue&gt;​ SyncList&lt;T&gt;​ SyncObjectUtils​ SyncSet&lt;T&gt;​ SyncSortedSet&lt;T&gt;​ SyncStack&lt;T&gt;​ "},{"title":"Structs​","type":1,"pageTitle":"Mirage.Collections","url":"docs/reference/Mirage.Collections/#structs","content":"SyncList&lt;T&gt;.Enumerator​ "},{"title":"Interfaces​","type":1,"pageTitle":"Mirage.Collections","url":"docs/reference/Mirage.Collections/#interfaces","content":"ISyncObject​ A sync object is an object that can synchronize it's state between server and client, such as a SyncList "},{"title":"Struct BasicAuthenticator.JoinMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators/BasicAuthenticator.JoinMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct BasicAuthenticator.JoinMessage","url":"docs/reference/Mirage.Authenticators/BasicAuthenticator.JoinMessage#fields","content":"ServerCode​ Declaration​ public string ServerCode  "},{"title":"Class BasicAuthenticator","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Authenticators/BasicAuthenticator","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class BasicAuthenticator","url":"docs/reference/Mirage.Authenticators/BasicAuthenticator#fields","content":"ServerCode​ Declaration​ public string ServerCode  "},{"title":"Methods​","type":1,"pageTitle":"Class BasicAuthenticator","url":"docs/reference/Mirage.Authenticators/BasicAuthenticator#methods","content":"Authenticate(INetworkPlayer, BasicAuthenticator.JoinMessage)​ Declaration​ protected override AuthenticationResult Authenticate(INetworkPlayer player, BasicAuthenticator.JoinMessage message)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer Mirage.Authenticators.BasicAuthenticator.JoinMessage\tmessage\t Returns​ Type\tDescriptionMirage.Authentication.AuthenticationResult\t SendCode(NetworkClient, String)​ Declaration​ public void SendCode(NetworkClient client, string serverCode = null)  Parameters​ Type\tName\tDescriptionMirage.NetworkClient\tclient System.String\tserverCode\t "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-335","content":"use the spawn calls that already happen via scene loading (#426) (cc19f3b) 52.0.0 (2020-10-22) Remove TcpTransport (#425) (076c05a), closes #425 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-336","content":"names and refs clear that PATH should be sent in scene msg (#423) (c68189c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-101","content":"TCPTransport removed. Use KCPTransport instead "},{"title":"51.1.5 (2020-10-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5115-2020-10-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-337","content":"TCPTransport is obsolete, use KCPTransport instead (c031ae9) "},{"title":"51.1.4 (2020-10-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5114-2020-10-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-338","content":"expect reserved header to be in the input (547bdd6) "},{"title":"51.1.3 (2020-10-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5113-2020-10-22","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-43","content":"port kcp code from vis2k (#422) (aaab0e3) "},{"title":"51.1.2 (2020-10-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5112-2020-10-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-339","content":"fix multiple scene loading order issues (#418) (6d8265d) "},{"title":"51.1.1 (2020-10-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5111-2020-10-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-340","content":"InvalidDataException not found problem (229f73d) 51.1.0 (2020-10-21) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-185","content":"KCP transport now provides unreliable channel (#420) (8aac115) 51.0.0 (2020-10-21) Transport api can now send messages in channels (#419) (9a2690e), closes #419 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-102","content":"Transports now receive and return channels 50.2.0 (2020-10-20) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-341","content":"method access exception sending rpcs (531e908) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-186","content":"display user-friendly log with an unexpected messages. (#417) (7b78c29) "},{"title":"50.1.5 (2020-10-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5015-2020-10-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-342","content":"recursive types with collections (5cb0058) "},{"title":"50.1.4 (2020-10-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5014-2020-10-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-343","content":"potential NRE generating readers (324ba60) "},{"title":"50.1.3 (2020-10-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5013-2020-10-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-344","content":"Multiplex transport exception (#415) (6534fbb), closes #414 "},{"title":"50.1.2 (2020-10-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5012-2020-10-19","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-345","content":"add WaitUntilWithTimeout to prevent tests from getting stuck (#412) (df1ccb4) "},{"title":"50.1.1 (2020-10-19)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5011-2020-10-19","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-44","content":"don't drop acks, follow original C algorithm (c0b5a12) 50.1.0 (2020-10-18) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-187","content":"User can set KcpDelayMode via KcpTransport(#403) (bdd0d9c) "},{"title":"50.0.2 (2020-10-18)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5002-2020-10-18","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-346","content":"recycling segments (9d12658)use buffer same size as C version (20e1324) "},{"title":"50.0.1 (2020-10-18)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#5001-2020-10-18","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-347","content":"bug setting the rto, it should be 100 in normal mode (091bde6) 50.0.0 (2020-10-17) Remove out parameter (#404) (43dc156), closes #404 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-103","content":"GetPrefab now just returns the prefab or null 49.4.0 (2020-10-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-188","content":"DoS prevention (#401) (4016259) "},{"title":"49.3.3 (2020-10-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4933-2020-10-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-348","content":"reading and writing a network identity before spawning (#400) (870f49d), closes #399 "},{"title":"49.3.2 (2020-10-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4932-2020-10-16","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-45","content":"Make KCP the default transport (#398) (dc6cc4f) "},{"title":"49.3.1 (2020-10-15)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4931-2020-10-15","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-349","content":"use hostname for serverUri (4b38fbe) 49.3.0 (2020-10-15) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-350","content":"double counting packets on kcp receive (89cb937)NRE when disconnecting with no owned objects (4e7983e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-189","content":"KCP transport now has CRC64 validation (#397) (21c8649) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-46","content":"recycle segments (13a3c3d)reduce allocation sending to observers (f5f7f6c)reduce allocations per client (8d37f8c)Refactore move to receive queue (173735c)remove allocation (9311fbd)reuse segment if it is a repeat (4879010)Use allocation free completion source (20227a7)use Unitask (384d02b)Use UniTask instead of task (70c9cfb) "},{"title":"49.2.1 (2020-10-15)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4921-2020-10-15","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-351","content":"double counting packets on kcp receive (89cb937)NRE when disconnecting with no owned objects (4e7983e) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-47","content":"recycle segments (13a3c3d)reduce allocation sending to observers (f5f7f6c)reduce allocations per client (8d37f8c)Refactore move to receive queue (173735c)remove allocation (9311fbd)reuse segment if it is a repeat (4879010)Use allocation free completion source (20227a7)use Unitask (384d02b)Use UniTask instead of task (70c9cfb) "},{"title":"49.2.1 (2020-10-15)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4921-2020-10-15-1","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-352","content":"double counting packets on kcp receive (89cb937) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-48","content":"recycle segments (13a3c3d)reduce allocation sending to observers (f5f7f6c)reduce allocations per client (8d37f8c)Refactore move to receive queue (173735c)remove allocation (9311fbd)reuse segment if it is a repeat (4879010)Use allocation free completion source (20227a7)Use UniTask instead of task (70c9cfb) 49.2.0 (2020-10-14) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-353","content":"throw weaver error when trying to use GameObject param (#395) (2726b9e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-190","content":"display FPS every second (ae62e35)Headless Benchmark (#394) (0546de9) "},{"title":"49.1.1 (2020-10-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4911-2020-10-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-354","content":"bug in kcp that caused invalid smoothing of rtt values (eacfefe) 49.1.0 (2020-10-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-191","content":"new KCP transport (#393) (5de53e1) 49.0.0 (2020-10-14) Reduce allocations by using Unitask (#392) (a45413a), closes #392 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-104","content":"Mirage now uses UniTask "},{"title":"48.0.1 (2020-10-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4801-2020-10-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-355","content":"InvalidOperationException when disconnecting (b131eb7) 48.0.0 (2020-10-11) Users must initialize syncobjects (#391) (c0e2632), closes #391 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-105","content":"You must initialize all your SyncLists "},{"title":"47.0.3 (2020-10-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4703-2020-10-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-356","content":"NRE in headless server mode (6dc8406) "},{"title":"47.0.2 (2020-10-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4702-2020-10-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-357","content":"inconsistent case in meta file (4c50834) "},{"title":"47.0.1 (2020-10-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4701-2020-10-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-358","content":"warning about tests.meta file (148b5a9) 47.0.0 (2020-10-07) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-1","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-359","content":"access NI on disabled objects (#383) (0ab4c60)adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)Examples can exit property in client mode (35faaf3)examples no longer use prefabs or common files (#378) (718ec9e)Lobby comp should not reference NetworkConnection.IsReady (#385) (6a1a190)networkmenu should add NSM to playerSpawner too (c7bd0be)nre modifying syncvars that have not been spawned (69883c5) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-192","content":"Add IncludeOwner option to SendToAll (#387) (6b0a005)new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-49","content":"Only synchronize dirty objects (#381) (64fd6ed)Remove 2 messages when player connects (#384) (c40e0fd) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-106","content":"It is no longer guaranteed that all objects are spawned before we start calling events fix object spawning on scene change remove unused variable Co-authored-by: uwee &lt;uweenukr@gmail.com&gt; You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-06) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-2","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-360","content":"access NI on disabled objects (#383) (0ab4c60)adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)Examples can exit property in client mode (35faaf3)examples no longer use prefabs or common files (#378) (718ec9e)Lobby comp should not reference NetworkConnection.IsReady (#385) (6a1a190)networkmenu should add NSM to playerSpawner too (c7bd0be)nre modifying syncvars that have not been spawned (69883c5) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-193","content":"Add IncludeOwner option to SendToAll (#387) (6b0a005)new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-50","content":"Only synchronize dirty objects (#381) (64fd6ed)Remove 2 messages when player connects (#384) (c40e0fd) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-107","content":"It is no longer guaranteed that all objects are spawned before we start calling events fix object spawning on scene change remove unused variable Co-authored-by: uwee &lt;uweenukr@gmail.com&gt; You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-06) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-3","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-361","content":"access NI on disabled objects (#383) (0ab4c60)adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)Examples can exit property in client mode (35faaf3)examples no longer use prefabs or common files (#378) (718ec9e)Lobby comp should not reference NetworkConnection.IsReady (#385) (6a1a190)networkmenu should add NSM to playerSpawner too (c7bd0be)nre modifying syncvars that have not been spawned (69883c5) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-194","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-51","content":"Only synchronize dirty objects (#381) (64fd6ed)Remove 2 messages when player connects (#384) (c40e0fd) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-108","content":"It is no longer guaranteed that all objects are spawned before we start calling events fix object spawning on scene change remove unused variable Co-authored-by: uwee &lt;uweenukr@gmail.com&gt; You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-06) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-4","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-362","content":"access NI on disabled objects (#383) (0ab4c60)adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)Examples can exit property in client mode (35faaf3)examples no longer use prefabs or common files (#378) (718ec9e)networkmenu should add NSM to playerSpawner too (c7bd0be)nre modifying syncvars that have not been spawned (69883c5) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-195","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-52","content":"Only synchronize dirty objects (#381) (64fd6ed)Remove 2 messages when player connects (#384) (c40e0fd) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-109","content":"It is no longer guaranteed that all objects are spawned before we start calling events fix object spawning on scene change remove unused variable Co-authored-by: uwee &lt;uweenukr@gmail.com&gt; You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-06) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-5","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-363","content":"access NI on disabled objects (#383) (0ab4c60)adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)Examples can exit property in client mode (35faaf3)examples no longer use prefabs or common files (#378) (718ec9e)networkmenu should add NSM to playerSpawner too (c7bd0be)nre modifying syncvars that have not been spawned (69883c5) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-196","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-53","content":"Only synchronize dirty objects (#381) (64fd6ed) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-110","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-05) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-6","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-364","content":"adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)Examples can exit property in client mode (35faaf3)examples no longer use prefabs or common files (#378) (718ec9e)networkmenu should add NSM to playerSpawner too (c7bd0be) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-197","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-111","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-05) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-7","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-365","content":"adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)Examples can exit property in client mode (35faaf3)examples no longer use prefabs or common files (#378) (718ec9e)networkmenu should add NSM to playerSpawner too (c7bd0be) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-198","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-112","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-04) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-8","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-366","content":"adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)examples no longer use prefabs or common files (#378) (718ec9e)networkmenu should add NSM to playerSpawner too (c7bd0be) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-199","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-113","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-04) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-9","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-367","content":"adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)examples no longer use prefabs or common files (#378) (718ec9e)networkmenu should add NSM to playerSpawner too (c7bd0be) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-200","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-114","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-04) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-10","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-368","content":"adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)examples no longer use prefabs or common files (#378) (718ec9e)networkmenu should add NSM to playerSpawner too (c7bd0be) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-201","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-115","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-04) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-11","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-369","content":"adding namespace for sonar bug (2ed0859)bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)examples no longer use prefabs or common files (#378) (718ec9e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-202","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-116","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-04) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-12","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-370","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b)examples no longer use prefabs or common files (#378) (718ec9e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-203","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-117","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-03) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-13","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-371","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-204","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-118","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-14","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-372","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-205","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-119","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-15","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-373","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-206","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-120","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-16","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-374","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-207","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-121","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-17","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-375","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-208","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-122","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-18","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-376","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-209","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-123","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-19","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-377","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-210","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-124","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-20","content":"Remove GameObject sync (#370) (5b223fa)Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-378","content":"bug Client ConnectionState not set properly in Disconnect (#369) (74298c5)Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-211","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-125","content":"You can no longer use gameobjects in syncvars Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-21","content":"Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-379","content":"Bug with NI destroy order (#374) (485f78b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-212","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-126","content":"Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 47.0.0 (2020-10-02) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-22","content":"Use SyncLists directly (delete overrides) (#2307) (fb49d19), closes #2305 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-213","content":"new generic Read and Write methods for all types (#2301) (85252c3)support Jagged arrays (0267dbe) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-127","content":"Serialize and Deserialize methods in synclists don't do anything anymore Remove old comment Fix compilatio error 46.2.0 (2020-10-02) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-214","content":"Generate rw for synclist items (518840c) 46.1.0 (2020-09-30) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-380","content":"reduce prefab count to prevent errors when examples are missing (a531fa0) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-215","content":"NetworkBehaviors can be added to child gameobjects (#371) (266dc8d) "},{"title":"46.0.2 (2020-09-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4602-2020-09-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-381","content":"invalid reference to UnityEditor in standalone build (69f5be7) "},{"title":"46.0.1 (2020-09-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4601-2020-09-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-382","content":"NetMan cleanup and simplify (#364) (4bfa3c6) 46.0.0 (2020-09-30) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-383","content":"potential NRE with weaver errors (9e0c18c) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-216","content":"You can use synclists directly (#366) (ca18d11) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-128","content":"SyncList and other syncobjects no longer have override methods to serialize and deserialize data "},{"title":"45.0.1 (2020-09-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4501-2020-09-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-384","content":"issue with readers and writers from other assemblies (18f3eba) 45.0.0 (2020-09-29) Renamed ReadMessage -&gt; Reader (1bb89f2) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-129","content":"NetworkReader.ReadMessage renamed to NetworkReader.ReadNetworkWriter.WriteMessage renamed to NetworkReader.Write "},{"title":"44.3.1 (2020-09-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4431-2020-09-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-385","content":"generic arguments resolution (#2300) (8dbf467)typos (#2297) (aba69ca) 44.3.0 (2020-09-29) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-217","content":"support null when serializing classes (#2290) (513a0f9)Support recursive data types (#2288) (3ccb7d9) 44.2.0 (2020-09-28) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-218","content":"Support reading and writing recursive types (a82f3fd) 44.1.0 (2020-09-28) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-386","content":"fixing new import (bdd81e3) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-219","content":"Component based Ready system (#358) (23b0afc) 44.0.0 (2020-09-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-220","content":"Send any data type as message (#359) (f04e17c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-130","content":"IMessageBase has been removed, you don't need to implement anything "},{"title":"43.9.1 (2020-09-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4391-2020-09-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-387","content":"asmdef issues related to runtime tests (#357) (175b6b7) 43.9.0 (2020-09-24) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-221","content":"starting NetworkObjectManager (#354) (01f3bb3) 43.8.0 (2020-09-24) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-222","content":"Add support for customer INetworkConnections (#346) (9d0b219) 43.7.0 (2020-09-21) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-388","content":"adding error for generated read writer for abstract class (#2191) (a9d21ea)adding error when Server/Client is used on abstract methods (#1978) (c1410b0)adding version define from v17 breaking change (c6fa49c)auto fill serialize/deserialize for classes (#2120) (890ee6b), closes #2117 #2117ClientScene.localplayer is now set to null when it is destroyed (#2227) (5edba81)fixing cloud log not using logger (#2141) (a124f3f)Fixing IndexChanged hook not being called for NetworkRoomPlayer (#2242) (94da8ae)fixing NullReferenceException when loading scene (#2240) (5eb5ff6)fixing unity crash on StackOverflowException (#2146) (ec54ee6)fixing warning message for client attribute (#2144) (ddc6139)fixing width and layout group on cloud example (#2201) (fc53078)isServer false in OnDestroy (#2101) (d46469a)making triggers be called right away instead on owner (#2125) (7604e65)Nested messages (#2148) (e4a5ce7)Unity Editor 2019/2020 crashes in Play Mode when resizing Editor for Macbooks with on board graphics cards. Using Metal instead of OpenGL fixes it. See also: https://forum.unity.com/threads/unity-editor-crashes-macos.739535/ (e2fd195)weaver test for abstract methods (#2166) (3a276b4) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-223","content":"Added Layer Weight to NetworkAnimator (#2134) (23b9fb0)Adding Custom Data and Custom Address fields to list server (#2110) (e136f48)adding script to help debug list server (#2202) (5701369)allowing lists to automatically be sent in Commands, Rpc, and Messages (#2151) (381e5a1)making NetworkBehaviour.IsDirty public (#2208) (1ade82d)Use Server Client attribute outside of NetworkBehaviour (#2150) (eec49fa) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-54","content":"weaver: No need to manually load mirror and unity assemblies (#2261) (e50ea63)adding check for no connections (#2130) (150b14a) 43.6.0 (2020-09-07) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-224","content":"Remove tests from upm package (#343) (0abbf2a) 43.5.0 (2020-08-31) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-225","content":"New NetworkManagerHud (#340) (267f513) "},{"title":"43.4.2 (2020-08-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4342-2020-08-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-389","content":"scene change race condition. wait for server to be ready (#339) (2ca0340) 1.0.0 (2020-08-23) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-23","content":"AsyncFallbackTransport -&gt; FallbackTransport (f8f643a)AsyncMultiplexTransport -&gt; MultiplexTransport (832b7f9)remove redundant scene ready value (#325) (6cc8f62)Remove TargetRPC &amp; use ClientRPC option instead (#293) (4ace144)Removed websocket transport (f26159b)Rename [Command] to [ServerRpc] (#271) (fff7459)rename AsyncWsTransport -&gt; WsTransport (9c394bc)Transports can now provide their Uri (#1454) (b916064), closes #38 "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-390","content":"(again) Telepathy updated to latest version (Send SocketExceptions now disconnect the player too) (46eddc0)#1241 - Telepathy updated to latest version. All tests are passing again. Thread.Interrupt was replaced by Abort+Join. (228b32e)#1278 - only call initial state SyncVar hooks on clients if the SyncVar value is different from the default one. (#1414) (a3ffd12)#1359. Revert &quot;Destroy objects owned by this connection when disconnecting (#1179)&quot; (4cc4279)#1380 - NetworkConnection.clientOwnedObjects changed from uint HashSet to NetworkIdentity HashSet for ease of use and to fix a bug where DestroyOwnedObjects wouldn't find a netId anymore in some cases. (a71ecdb)#1515 - StopHost now invokes OnServerDisconnected for the host client too (#1601) (678ac68)#1593 - NetworkRoomManager.ServerChangeScene doesn't destroy the world player before replacing the connection. otherwise ReplacePlayerForConnection removes authority form a destroyed object, causing all kidns of errors. The call wasn't actually needed. (#1594) (347cb53)#1599 - NetworkManager HUD calls StopHost/Server/Client depending on state. It does not call StopHost in all cases. (#1600) (8c6ae0f)#1659 Telepathy LateUpdate processes a limited amount of messages per tick to avoid deadlocks (#1830) (d3dccd7)#718 remove Tests folder from unitypackage (#827) (7e487af)#840 by allowing Mirror to respect the forceHidden flag (#893) (3ec3d02)ArraySegment&lt;byte&gt; work in Messages (#919) (981ba7c)code generation works with il2cpp again (#1056) (8738562)do not accumulate changes if there are no observers fixes #963 (#964) (64a0468)don't convert null arrays to empty array (#913) (dd758ca)Don't increment counter in Awake (#971) (45b7118)don't use obsolete method (12437ba)error with missing assemblies (#1052) (00eb23a), closes #1051Fix error scene error message in host mode (838d4f0)hooks in host mode can call each other (#1017) (f27fd0b)invalid scene id in 2019.1 by ignoring prefabs in NetworkScenePostProcess (203a823)ListServer Ping not found in WebGL (6c4b34b)maintain Unity's copyright notice (#961) (7718955)missed ushort reader/writer (74faf2a)Mono.CecilX namespace to work around Unity 2019 Cecil namespace collision (#832) (5262592)NetworkManager OnValidate wouldn't properly save the automatically added Transport before because Undo.RecordObject is needed for that now. (524abfc)pack works if message is boxed (55c9bb6)properly stop client and server in OnApplicationQuit so that clients still get a chance to send then 'quit' packet instead of just timing out. Also fixes a bug where OnStopServer/OnStopClient were not called when stopping the Editor. (#936) (d6389e6)Rebuild observers when we switch scenes, fixes #978 (#1016) (6dd1350)Respect Player Prefab Position &amp; Rotation (#825) (8ebda0f)Revert &quot;NetworkIdentity.observers dictionary is always created, but always empty on clients. Gets rid of all null checks.&quot; to fix server-only bug not allowing movement on client, e.g. in uMMORPG (f56507f)Revert &quot;refactor: consolidate prefab and spawn handlers (#817)&quot; to fix a bug where if editor=host, build=client, we receive scene object not found when walking out of and back into an observer's range (1f07af0)SceneId was not set to 0 for prefab variants (#976) (#977) (2ca2c48)suppress warning on standalone build #1053 (4ef680a)Sync full netAnimator for new clients, fix #980 (#1110) (db8310f)Telepathy already supports IPv6, but can no also connect to IPv4-only servers again (e.g. Mirror Booster) (488446a)Telepathy fix a bug where calling Disconnect while connecting to a dead end would freeze Unity because .Join would wait forever. Interrupt fixes it. (3831cbd)weaver: fix #796, reload assemblies after initial import (#1106) (d91b387)#573 (part 1) NetworkScenePostProcess handles NetworkIdentities of all scenes except DontDestroyOnLoad. this way it works for additively loaded scenes too. (c1af84e)#573 (part 2) NetworkManager detects additive scene loads and respawns objects on server/client again (e521a20)#573 NullReferenceException because destroyed NetworkIdentities were never removed from sceneIds dict (a2d6317)#609 by spawning observers in NetworkServer.AddPlayerForConnection after setting the controller. There is no point in trying to spawn with a null controller in SetReady, because by definition no one can observer something that is null. (#623) (5c00577)#640 InternalReplacePlayerForConnection calls SpawnObserversForConnection now too (bdf12c8)#651 GetSceneAt assumes default scene (#654) (65eaba1)#652 OnPostProcessScene includes disabled NetworkIdentities in scene (ee2ace8)#679 package for unity (4a6a4df)#679 unity package (9895647)#692 by always adding connectionToClient when rebuilding observers (ab44ac8)#723 - NetworkTransform teleport works properly now (fd7dc5e)#791 corrected assembly paths passed to weaver (#803) (3ba546e)#791 stack overflow in the weaver (#792) (7b57830)add Changelog metadata fix #31 (c67de22)add client only test for FinishLoadScene (#262) (50e7fa6)Add missing channelId to NetworkConnectionToClient.Send calls (#1509) (b8bcd9a)add NetworkManager.StartClientUri test (#2095) (12827f6)add NRE short circuit for scene change (#335) (7afbe57)add tests for NetworkTransform and NetworkRigidbody (#273) (e9621dd)Add the transport first so NetworkManager doesn't add Telepathy in OnValidate (bdec276)Added ClientOnly check (fb927f8)Added LogFilter.Debug check in a few places (#1575) (3156504)added new read/write symbol params (#806) (3a50ca6)Added WriteBytesAndSize tests, and fixed the function to be pedantic. (#773) (72e4e55)Adding warning when adding handler with RegisterSpawnHandler if assetid already exists (#1819) (7f26329)Adding warning when adding prefab with RegisterPrefab if assetid already exists (#1828) (9f59e0c)addingNetwork rigidbody icon and AddComponentMenu attribute (#2051) (ab1b92f)Additive scene can respawn objects safely (#1270) (8899d20)additive scene example (9fa0169)Additive Scene Example was missing Player Auth on movement. (#234) (09bbd68)additive scene player movement is client authoritative (e683a92)AdditiveSceneExample missing comp and assignments (#267) (ab394b8)Allow sync objects to be re-used (#1744) (58c89a3), closes #1714Allowing overrides for virtual commands to call base method (#1944) (b92da91)assign spawn locations and fix null refs in example (#242) (3adf343)AsyncTcp now exits normally when client disconnects (#141) (8896c4a)attributes causing a NRE (#69) (fc99c67)auto reference mirrorng assembly (93f8688)Avoid FindObjectOfType when not needed (#66) (e2a4afd)benchmark examples (b221b74)better error for Command, ClientRpc and TargetRpc marked as abstract (#1947) (62257d8)Better errors when trying to replace existing assetid (#1827) (822b041)build in IL2CPP (#1524) (59faa81), closes #1519 #1520call callback after update dictionary in host (#1476) (1736bb0)Call hooks when initializing objects OnStartServer on host (#1249) (7aa7815)call Obsoleted OnStartClient (#681) (8dea50e)call OnStartClient only once in room (#1264) (4d373c5)call the virtual OnRoomServerDisconnect before the base (e6881ef)calling base method when the first base class did not have the virtual method (#2014) (4af72c3)calling Connect and Authenticate handler twice (#102) (515f5a1)calling syncvar hook when not connected yet (#77) (e64727b)cap spawned to match client (#301) (7d1571a)changing namespace to match folder name (#2037) (e36449c)chat example (e6e10a7)chat example works (0609d50)check event prefix (7417b68)Check SceneManager GetSceneByName and GetSceneByPath (#1684) (e7cfd5a)Clean up roomSlots on clients in NetworkRoomPlayer (5032ceb)Cleaning up network objects when server stops (#1864) (4c25122)cleanup the server even after error (#255) (7bd015e)clear all message handlers on Shutdown (#1829) (a6ab352)client being disconnected twice (#132) (36bb3a2)client disconnected on server event never raised (#133) (9d9efa0)ClientRpc methods now work accross assemblies (#1129) (13dbcb9), closes #1128ClientRPC should skip first arg only if set as Connection (#315) (168e622)ClientSceneManager should be responsible for its own cleanup (#298) (92ab3ff)Cmds can be called from child classes in other assemblies (d8a98d8), closes #1108code smell rename Ready (#256) (6d92d14)Command and Rpc debugging information (#1551) (658847b), closes #1550comment punctuation (4d827cd)compilation error (df7baa4)compilation error (dc74256)compilation error on standalone build (bb70bf9)compilation issue after merge from mirror (daf07be)compilation issues (22bf925)comply with MIT license in upm package (b879bef)Decouple ChatWindow from player (#1429) (42a2f9b)Default port is 7777 (960c39d)destroy owned objects (#1352) (d7a58d2), closes #1346 #1206 #1351Destroyed NetMan due to singleton collision must not continue. (#1636) (d2a58a4)disconnect even if there is an exception (#152) (2eb9de6)disconnect properly from the server (c89bb51)disconnect transport without domain reload (20785b7)Do not call InternalAddPlayer twice (#1246) (7119dd1)don't call hook in host if no change, fixes #1142 (#1143) (d8ce80f)don't call OnStartLocalPlayer twice (#1263) (c753089)Don't call RegisterClientMessages every scene change (#1865) (05c119f)Don't call RegisterClientMessages twice (#1842) (2a08aac)don't crash when stopping the client (f584388)Don't destroy the player twice (#1709) (cbc2a47)Don't disconnect host (#608) (c1707e5)Don't give host player authority by default (#1158) (1fc1ed2)don't report error when stopping the server (c965d4b)Don't set asset id for scene objects (7e40232)Don't set framerate in host mode (4644bc4)Don't throw exception getting address (7df3ce3)Dont allow null connections (#323) (44fef7e)dont allow set of networkSceneName directly (#2100) (df16a7d)dont directly set NetworkSceneName (#297) (bd043a3)dont register client scene handlers while host (#296) (37c8ddd)Draw SyncVar label for Unity objects inline (#1291) (a0425e4)Dummy file for SyncListStructProcessor.cs (#798) (75e4f15)Eliminate NetworkAnimator SetTrigger double firing on Host (#1723) (e5b728f)empty scene name isn't considered as empty (ec3a939)error when there are no network behaviors (#1303) (dbe0643)examples now work with prefabs in NC (df4149b)examples run in background (#233) (4755650)Fallback and Multiplex now disable their transports when they are disabled (#2048) (61d44b2)FinishLoadSceneHost calls FinishStart host which now calls StartHostClient AFTER server online scene was loaded. Previously there was a race condition where StartHostClient was called immediately in StartHost, before the scene change even finished. This was still from UNET. (df9c29a)first connection id = 1 (#60) (891dab9)fix adding and saving Components (2de7ecd)fix release pipeline (2a3db0b)Fix Room Slots for clients (#1439) (268753c)Fixed Capitalization (c45deb8)Fixed ClienRpc typos (e946c79)Fixed NetworkRoomManager Template (1662c5a)Fixed toc link (3a0c7fb)Fixing ClientScene UnregisterPrefab (#1815) (9270765)fixing cloud scripts not pinging api (#2097) (8e545ac)Fixing SyncVars not serializing when OnSerialize is overridden (#1671) (c66c5a6)folders for meta files no longer in the codebase (#237) (192fd16)hasAuthority is now visible in all overrides (#1251) (2f19c7c), closes #1250headless build (7864e8d)headless build (ab47a45)Host Player Ready Race Condition (#1498) (4c4a52b)If socket is undefined it will return false. See #1486 (#2017) (4ffff19)Improved error checking for ClientScene.RegisterPrefab (#1823) (a0aa4f9)Improved error checking for ClientScene.RegisterPrefab with handler (#1841) (54071da)Invoke server.Disconnected before identity is removed for its conn (#165) (b749c4b)isClient now reports true onStartServer in host mode (#1252) (d00c95b)isLocalPlayer is true during OnStartClient for Player (#1255) (fb26d00), closes #1250isLocalPlayer works in host mode onStartServer (#1253) (9acde20), closes #1250it is not safe to modify this outside this class (bc7a961)list server logs properly when disconnected (f02d317)Lobby Remove button not showing for P1 when Server Only (377c47c)Make assembly definition 2018.4 compatible (99ecc9e)make build pass (08df6d0)Make SendToReady non-ambiguous (#1578) (b627779)making weaver include public fields in base classes in auto generated Read/Write (#1977) (3db57e5)Mark weaver as failed if serializing invalid type (03c767d)Message base class not being Serialized if processed in the wrong order (#2023) (3418fa2)Mirage works with 2019.2 (9f35d6b)Misc code smells (#2094) (e4cc85c)Misc Code Smells (#257) (278a127)Misc code smells (#269) (23dcca6)missing meta (87ace4d)move listserver classes into package (2668b17)move NetworkStreamExtension in a namespace (12de543)moved SpawnObjects call for hostmode to after LocalClient Connected (#317) (1423a6d)movement in room demo (49f7904)MultiplexTransport GetMaxMessageSize NullReferenceException when called on server. And fixes potential exploits / out of sync issues where clients with different transports might see different game states because of different max message sizes. (#1332) (b3127be)Network rigidbody fixes (#2050) (0c30d33)NetworkBehaviour.SyncVarGameObjectEqual made protected again so that Weaver finds it again (165a1dd)NetworkBehaviour.SyncVarNetworkIdentityEqual made protected again so that Weaver finds it again (20a2d09)NetworkBehaviourInspector wouldn't show SyncMode if syncvars / syncobjects were only private (ed572da)NetworkClient.Shutdown calls ClientScene.Shutdown again to properly clean up client scene. ClientScene only cleans up itself without touching transport or NetworkIdentities (fixes the bug where the player object wouldn't be destroyed after calling StopClient) (fb716df)NetworkConnectionEvent should be serialized in editor (0e756ce)NetworkIdentity.OnStartLocalPlayer catches exceptions now too. fixes a potential bug where an exception in PlayerInventory.OnStartLocalPlayer would cause PlayerEquipment.OnStartLocalPlayer to not be called (5ed5f84)NetworkIdentity.RebuildObservers: added missing null check for observers coming from components that implement OnRebuildObservers. Previously this caused a NullReferenceException. (a5f495a)NetworkIdentity.SetClientOwner: overwriting the owner was still possible even though it shouldn't be. all caller functions double check and return early if it already has an owner, so we should do the same here. (548db52)NetworkRoomManager.minPlayers is now protected so it's available for derived classes. (3179f08)NetworkServer.SpawnObjects: return false if server isn't running (d4d524d)NetworkTransform clientAuthority works again via clientAuthority option that is configurable in inspector. this had to be fixed after we removed local authority. (d712cd0)NinjaWS code smells (#272) (71d9428)no longer requires hook to be the first overload in a class (#1913) (0348699)non ready connections should not observe objects (1352334)not removing server if id is empty (#2078) (f717945)NRE on gamemanager in scene (#268) (58a124a)NRE when destroying all objects (#85) (71e78a7)NS call SpawnObjects. No NetMan dependency for spawning objects (#300) (e1bb8de)null reference exception (7ce95c5)OnClientEnterRoom should only fire on clients (d9b7bb7)OnClientReady is called and passed the appropriate ready state value in NetworkLobbyPlayer (#618) (c9eac57)OnSetHostVisibility can now check if it has authority (888e46c)Optional Server or Client for PlayerSpawner (#231) (3fa5f89)overriden hooks are invoked (fixes #1581) (#1584) (cf55333)pass the correct connection to TargetRpcs (#146) (9df2f79)Pass the name of the invoking class and desired command when an object has no authority. (#1216) (701f4f4)port network discovery (d6a1154)Potential DOS attack by sending invalid UTF8 byte sequences (#727) (3cee3ab)Potential DOS attack on server by sending packed ulongs when packed uints are expected. (#730) (015d0d5)potential exploits / out of sync issues where clients with different transports might see different game states because of different max message sizes when using FallbackTransport. (#1331) (5449840)potential null reference exception with debug logging (33493a0)Prevent Compiler Paradox (#1145) (fd43c67)Prevent Double Call of NetworkServer.Destroy (#1554) (2d1b142)Prevent host client redundantly changing to offline scene (b4511a0)prevent NRE when operating as a separated client and server (#283) (e10e198)properly detect NT rotation (#1516) (f0a993c)race condition closing tcp connections (717f1f5)Re-enable transport if aborting additive load/unload (#1683) (bc37497)register prefab error with same guid (#2092) (984eb73)release job requires node 10 (3f50e63)release unitypackage (#1355) (d0cc669)remove customHandling as its no longer used (#265) (dbd9d84)Remove leftover AddPlayer methods now that extraData is gone (#1751) (2d006fe)remove pause network comment and log (#238) (1a8c09d)Remove RoomPlayer from roomSlots on Disconnect (2a2f76c)remove samples from upm package (#25) (a71e21f)remove scriptableobject error Tests (479b78b)remove tests from npm package (#32) (5ed9b4f)remove Tests from UPM (#33) (8f42af0)remove Tests from upm package (#34) (8d8ea0f)remove unused code (#308) (554d2c5)remove unused events (#334) (c20f6de)Removed NetworkClient.Update because NetworkManager does it in LateUpdate (984945e)Removed NetworkServer.Listen because HostSetup does that (cf6823a)Removed unnecessary registration of player prefab in NetworkRoomManager (b2f52d7)Removed unused variable (ae3dc04)renaming call/invoke prefix for SyncEvent (#2089) (18d6957), closes #2088replace player (remove authority by default) (#1261) (ad724fe), closes #1257 #1257 #1257Replaced Icosphere with centered pivot (1dc0d98)ReplacePlayer now calls OnStartLocalPlayer (#1280) (0e1bc81), closes #962Replacing ClearDelegates with RemoveDelegates for test (#1971) (927c4de)Report correct channel to profiler in SendToObservers (0b84d4c)reset buffer every time (a8a62a6)return &amp; continue on separate line (#1504) (61fdd89)Revert &quot;NetworkClient.Shutdown: call ClientScene.Shutdown, otherwise it's never called&quot; - caused client's player to not be removed from scene after disconnecting (13bb748)Room example to use new override (e1d1d41)rooms demo (44598e5)Round Robin Spawning by Hierarchy Order (#790) (531e202), closes #724SceneManager Exceptions and Tests (#287) (388d218)SendToAll sends to that exact connection if it is detected as local connection, instead of falling back to the .localConnection field which might be something completely different. (4b90aaf)SendToObservers missing result variable (9c09c26)SendToObservers sends to that exact connection if it is detected as local connection, instead of falling back to the .localConnection field which might be something completely different. (4267983)SendToReady sends to that exact connection if it is detected as local connection, instead of falling back to the .localConnection field which might be something completely different. (4596b19)set authority when replacing the player (2195fee)Set syncvar variables after calling the hook (#659) (2d63ee1)set version number (#1338) (0d1d7b5)show private serializable fields in network behavior inspector (#1557) (b8c87d9)smell cleanup left if bug. repaired with parenthesis. (#275) (dd52be3)Spawn Handler Order (#223) (8674274), closes #222spawnwithauthority works again in host mode (5b04836)stack overflow getting logger (55e075c)Telepathy forgot to set socket options for accepted clients on the server (22931fc)Telepathy updated to latest version (IPv6 fix again) (535b4d4)Telepathy updated to latest version (Send SocketExceptions now disconnect the player too) (98d3fb0)Telepathy updated to latest version: Correctly support IPv4 and IPv6 sockets (2761ff2)Telepathy updated to latest version. connectionId counter is properly reset after stopping server. (abf06df)TelepathyTransport.ToString UWP exception (8a190bf)update NetworkIdentityEditor FindProperty to renamed variables (a2cc14b)Updated Telepathy to latest version to fix IPAddress.Parse error for &quot;localhost&quot; (cc6e4f6)workaround for #791 (5c850aa)serialization: Added NetworkWriter tests, found and fixed a bug in Write(Ray). (#769) (99c8f5c)tests: Added missing SyncListByteValid test file (#634) (b0af876)weaver: #696 detect .mystruct = new MyStruct() changes with syncvars (#702) (053949b)weaver: fix #706 find system dlls (#729) (53be9b6)websocket: #829 fix InvalidOperationException with wss:// (#830) (2d682b5)websocket: Remove send queues (they never worked) and SSL (temporarily) (#879) (3c60b08)websocket: Use a buffer for most WS messages in WebGL client resulting in 0 alloc for most messages (#848) (8967a20)Stop calling ClientDisconnect on host (#597) (b67b3e4)StopHost with offline scene calls scene change twice (#1409) (a0c96f8)Suppress warning (fffd462)Suspend server transport while changing scenes (#1169) (e8fac8a)sync events can not have the same name if they are in different classes (#2054) (c91308f)syncvars in commands work again (#1131) (c24a73f)syntax error in release job (2eeaea4)TargetRpc now works accross assemblies (#1130) (5ecd646), closes #1128tcp server Tests (3b95477)Telepathy reverted to older version to fix freezes when calling Client.Disconnect on some platforms like Windows 10 (d0d77b6)Telepathy updated to latest version: protect against allocation attacks via MaxMessageSize. Can be configured in the TelepathyTransport component now. (67d715f)Telepathy updated to latest version. Threads are closed properly now. (4007423)Telepathy works on .net core again (cb3d9f0)the Room scene references other scenes (9b60871)there is no lobby example (b1e05ef)ui bug where additive button is not reset (#311) (5effce9)update interfaces for recent changes that were missed (#309) (a17e760)Updated NetworkRoomPlayer inspector and doc and image (a4ffcbe)Use big endian for packet size (1ddcbec)Use path instead of name in Room Example (5d4bc47)Use ReplaceHandler instead of RegisterHandler in NetworkManager (ffc276c)version file (#1337) (ed7e509)weaver Cmd/Rpc/Target prefix check is no longer trash (#707) (699a261)weaver now processes multiple SyncEvent per class (#2055) (b316b35)weaver support array of custom types (#1470) (d0b0bc9)weaver syncLists now checks for SerializeItem in base class (#1768) (1af5b4e)webgl build fix #1136 (#1137) (c85d0df)Websockets Transport now handles being disabled for scene changes (#1994) (5480a58)WebSockets: Force KeepAliveInterval to Zero (9a42fe3)when modifying a prefab, Unity calls OnValidate for all scene objects based on that prefab, which caused Mirror to reset the sceneId because we only checked if a prefab is currently edited, not if THIS prefab is currently edited (db99dd7)Wrong method names in ClientSceneTests (ab3f353) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-45","content":"Client and server keep their own spawned list (#71) (c2599e2)observers is now a set of connections (#74) (4848920)Remove networkAddress from NetworkManager (#67) (e89c32d)Remove offline/online scenes (#120) (a4c881a) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-226","content":"installation: Simplify packaging (#336) (58a0f68)#869 support structs in other assemblies (#1022) (62d1887)Add excludeOwner option to ClientRpc (#1954) (864fdd5), closes #1963 #1962 #1961 #1960 #1959 #1958 #1957 #1956Add fallback transport (1b02796)add IChannelConnection interface for transports with channels (#332) (887118e)Add Network Menu (#253) (d81f444)Add NetworkServer.RemovePlayerForConnection (#1772) (e3790c5)Add roomPlayer parameter to OnRoomServerCreateGamePlayer (#1317) (abf5cdc)Add Sensitivity to NetworkTransform (#1425) (f69f174)Add SyncHashSet and SyncSortedSet (#685) (695979e)add SyncList.RemoveAll (#1881) (eb7c87d)Add UPM configuration (#11) (9280af1)Add version to package file (#1361) (e97ab93)Add weaver support for Vector2Int and Vector3Int (#646) (e2a6ce9)Added NetworkConnection to OnRoomServerSceneLoadedForPlayer (b5dfcf4)Added Read&lt;T&gt; Method to NetworkReader (#1480) (58df3fd)Added SyncList.Find and SyncList.FindAll (#1716) (0fe6328), closes #1710Added Virtual OnRoomStopServer to NetworkRoomManager and Script Template (d034ef6)Added virtual SyncVar hook for index in NetworkRoomPlayer (0c3e079)adding demo for mirror cloud services (#2026) (f1fdc95)Adding ignoreAuthority Option to Command (#1918) (3ace2c6)adding log handler that sets console color (#2001) (4623978)Adding onLocalPlayerChanged to ClientScene for when localPlayer is changed (#1920) (b4acf7d)adding OnRoomServerPlayersNotReady to NetworkRoomManager that is called when player ready changes and atleast 1 player is not ready (#1921) (9ae7fa2)Adding ReplaceHandler functions to NetworkServer and NetworkClient (#1775) (877f4e9)adding script that displays ping (#1975) (7e93030)additive scene msging added to server (#285) (bd7a17a)allow more than one NetworkManager (#135) (92968e4)Allow Multiple Network Animator (#1778) (34a76a2)allow Play mode options (f9afb64)allow users to detect mirror version 3 (ee9c737)Allowing extra base types to be used for SyncLists and other SyncObjects (#1729) (9bf816a)Allowing Multiple Concurrent Additive Scenes (#1697) (e32a9b6)An authenticator that times out other authenticators (#1211) (09f6892)async multiplex transport (#145) (c0e7e92)asynchronous transport (#134) (0e84f45)Authentication Framework (#1057) (56bcb02)Authenticators can now provide AuthenticationData (310ce81)awaitable connect (#55) (952e8a4)Block Play Mode and Builds for Weaver Errors (#1479) (0e80e19)Button to register all prefabs in NetworkClient (#179) (9f5f0b2)Chat example (#1305) (9926472)Check for client authority in CmdClientToServerSync (#1500) (8b359ff)Check for client authority in NetworkAnimator Cmd's (#1501) (ecc0659)Client attribute now throws error (#274) (f1b52f3)ClientRpc no longer need Rpc prefix (#2086) (eb93c34)ClientScene uses log window (b3656a9)Commands no longer need Cmd prefix (#2084) (b6d1d09)Commands no longer need to start with Cmd (#263) (9578e19)Component based NetworkSceneManager (#244) (7579d71)component based SyncToOwner, fixes #39 (#1023) (c6d86b3)connections can retrieve end point (#114) (d239718)Cosmetic Enhancement of Network Manager (#1512) (f53b12b)Creating method to replace all log handlers (#1880) (d8aaf76)custom reader/writer via extension methods (#1047) (b45afad)default log level option (#1728) (5c56adc)Disconnect Dead Clients (#1724) (a2eb666), closes #1753Disposable PooledNetworkReader / PooledNetworkWriter (#1490) (bb55baa)Example with 10k monster that change unfrequently (2b2e71c)Exclude fields from weaver's automatic Read/Write using System.NonSerialized attribute (#1727) (7f8733c)Experimental Network Transform (#1990) (7e2b733)Experimental NetworkRigidbody (#1822) (25285b1)fallback transport now supports uri (#1296) (e4a701e)generate serializers for IMessageBase structs (#1353) (3c0bc28)get a convenient property to get network time (1e8c2fe)HasAuthority attribute now throws error (#276) (da2355b)HeadlessAutoStart and HeadlessFrameLimiter (#318) (ce6ef50)Implement IReadOnlyList&lt;T&gt; in SyncLists (#903) (3eaaa77)Implemented NetworkReaderPool (#1464) (9257112)Improve weaver error messages (#1779) (bcd76c5)Improved Log Settings Window Appearance (#1885) (69b8451)Improved RoomPayer template (042b4e1)include generated changelog (#27) (a60f1ac)Include version in release (#1336) (e4f89cf)individual events for SyncDictionary (#112) (b3c1b16)individual events for SyncSet (#111) (261f5d6)LAN Network discovery (#1453) (e75b45f), closes #38LLAPI transport can receive port from uri (#1294) (7865a84)LocalPlayer attribute now throws error (#277) (15aa537)logger factory works for static classes by passing the type (f9328c7)logging api (#1611) (f2ccb59)LogSettings that can be saved and included in a build (#1863) (fd4357c)Make AsyncQueue public for transports (5df0d98)Mirror Icon for all components (#1452) (a7efb13)Mirror now supports message inheritance (#1286) (f9d34d5)More examples for Mirror Cloud Service (#2029) (7d0e907)Multiple Concurrent Additive Physics Scenes Example (#1686) (87c6ebc)Multiplex based on url (#1295) (c206f9a)Network Animator can reset triggers (#1420) (dffdf02)Network Scene Checker Component (#1271) (71c0d3b)network writer and reader now support uri (0c2556a)network writer pool to avoid expensive allocations (3659acb)network writer pool to avoid expensive allocations (#928) (f5e9318)NetworkAnimator warns if you use it incorrectly (#1424) (c30e4a9)NetworkClient raises event after authentication (#96) (c332271)NetworkConnection is optional for handlers (#1202) (bf9eb61)NetworkConnection manages messages handlers (#93) (5c79f0d)NetworkConnection to client and server use logger framework (72154f1)NetworkConnection uses logging framework (ec319a1)NetworkIdentity lifecycle events (#88) (9a7c572)NetworkIdentity use logger framework (2e39e13)NetworkMatchChecker Component (#1688) (21acf66), closes #1685 #1681 #1689NetworkSceneChecker use Scene instead of string name (#1496) (7bb80e3)NetworkServer uses new logging framework (8b4f105)NetworkServer.SendToReady (#1773) (f6545d4)new virtual OnStopServer called when object is unspawned (#1743) (d1695dd)new way to connect using uri (#1279) (7c3622c)new websocket transport (#156) (23c7b0d)next gen async transport (#106) (4a8dc67)now you can assign scenes even if not in Editor (#1576) (c8a1a5e)Now you can pass NetworkIdentity and GameObjects (#83) (dca2d40)onstopserver event in NetworkIdentity (#186) (eb81190)Pass all information to spawn handler (#1215) (d741bae)Piped connection (#138) (471a881)PlayerSpawner component (#123) (e8b933d)Prettify Log Names (c7d8c09)profiler info is available in production builds (5649cc6)Remove Command shortcut for host mode (#1168) (94eda38)Rigidbody example (#2076) (ef47ee7)safer and consistent writers names (#979) (b4077c1)scene transition uses routine instead of asyncoperation (#305) (a16eb00)Script Templates (#1217) (8cf6a07)Secure messages that require authentication, fixes #720 (#1089) (7ac43cd)Semantic release for UPM (#24) (8cbc005)Server and Client share the same scene loading method (#286) (acb6dd1)Server attribute now throws error (#270) (f3b5dc4)Server raises an event when it starts (#126) (d5b0a6f)ship as a unitypackage (11edc14)Show compile time error if overriding unused OnServerAddPlayer (#682) (a8599c1)Spawn objects in clients in same order as server (#247) (b786646)spawning invalid object now gives exception (e2fc829)support sending and receiving ArraySegment&lt;byte&gt; (#898) (e5eecbf)support writing and reading array segments (#918) (f9ff443)supports scriptable objects (4b8f819)supports scriptable objects (#1471) (0f10c72)Sync Events no longer need Event prefix (#2087) (ed40c2d)SyncDictionary can now be used for any IDictionary (#703) (2683572)SyncList now supports any IList implementation (#704) (040bcb4)SyncList.FindIndex added (#823) (b5ff43a)synclists has individual meaningful events (#109) (e326064), closes #103SyncSet and SyncDictionary now show in inspector (#1561) (5510711)SyncSet custom Equality Comparer support (#1147) (0f95185)SyncToOwner now works with authority (#1204) (92d0df7)TargetRpc no longer need Target prefix (#2085) (d89ac9f)telepathy can now receive port from uri (#1284) (06946cf)throw exception if assigning incorrect asset id (#250) (7741fb1)Time sync is now done per NetworkClient (b24542f)transport can provide their preferred scheme (774a07e)Transport can send to multiple connections at once (#1120) (bc7e116)transports can give server uri (#113) (dc700ec)Transports can have multiple uri (#292) (155a29c)Transports can tell if they are supported (#282) (890c6b8)Transports may support any number of schemes (#291) (2af7b9d)update upm package if tests pass (#21) (7447776)Use logger framework for NetworkClient (#1685) (6e92bf5)Use SortedDictionary for LogSettings (#1914) (7d4c0a9)user friendly weaver error (#896) (954a3d5)Users may provide custom serializers for any type (#1153) (9cb309e)Weaver can now automatically create Reader/Writer for types in a different assembly (#1708) (b1644ae), closes #1570websocket can receive port in url (#1287) (c8ad118)Websockets now give client address, fix #1121 (#1125) (c9f317d)scene: Add support for scene loading params (#644) (d48a375)syncvar: Add SyncDictionary (#602) (7d21bde)telepathy: Split MaxMessageSize to allow setting a different value for client and server (#749) (f0a8b5d)websocket: Re-enable native SSL (#965) (7ed4a9a) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-55","content":"Adding buffer for local connection (#1621) (4d5cee8)Adding dirty check before update sync var (#1702) (58219c8)AddPlayerMessage is now a value type (246a551)allocation free enumerator for syncsets, fixes #1171 (#1173) (035e630)allocation free syncdict foreach, fix #1172 (#1174) (1ec8910)avoid allocation for error messages (c669ff1)Avoid allocation when reading message payload (#912) (11750a9)avoid allocation with message structs (#939) (7c7c910)avoid boxing for getting message id (#1144) (9513842)avoid boxing if there is no profiler (a351879)ClientAuthorityMessage is now a value type (#991) (d071438)Custom IEnumerator for SyncLists to avoid allocations on foreach (#904) (4ffd5a2)don't varint bytes and shorts (4867415)eliminate boxing with lists (#901) (8f6d4cb)eliminate small allocation on remote calls (#907) (1c18743)eliminate string concat during remote method calls (#908) (70a532b)empty messages are value types now (145edaa)faster NetworkReader pooling (#1623) (1ae0381)faster NetworkWriter pooling (#1620) (4fa43a9)Increasing Network Writer performance (#1674) (f057983)messages should be value types (#987) (633fb19)MultiplexTransport: avoid Linq allocations that would happen on every packet send because Send calls .ServerActive() each time (7fe8888)NetworkProximityChecker checks Server.connections instead of doing 10k sphere casts for 10k monsters. 2k NetworkTransforms demo is significantly faster. Stable 80fps instead of 500ms freezes in between. (#1852) (2d89f05)Networkreader nonalloc (#910) (18f035d)objdestroy message is now a value type (#993) (a32c5a9)ObjHideMessage is now a value type (#992) (a49d938)OnDeserializeSafely without GC (#804) (27b7e25)Optimize interest management (f1ceb0c)Optimize interest management (#899) (ff1a234)Pack small 32 bit negatives efficiently (480af1a)Pack small 64 bit negatives efficiently (5f1ef4a)Recycle argument writer to avoid allocations (#945) (9743216)Reduce enum bandwidth (#794) (97e9ac2)remove allocations during syncvar sync (#946) (d2381ce)remove BinaryWriter, it allocates like crazy (#929) (7b3e82a)remove network transform allocation (9e3ecc1)Remove redundant mask (#1604) (5d76afb)remove syncvar boxing (#927) (b2ba589)replace isValueType with faster alternative (#1617) (61163ca), closes /github.com/vis2k/Mirror/issues/1614#issuecomment-605443808return the contents of the writer as an array segment (#916) (ced3690)reuse the network writer used for rpc parameters (5dafc4d)rpc messages are now value types (#997) (b5b2f3e)SceneMessage is now a value type (#989) (407b36a)simplify and speed up getting methods in weaver (c1cfc42)spawn with client authority only takes 1 message (#1206) (3b9414f)SpawnPrefabMessage is now a value type (a44efd1)SpawnSceneObjectMessage is now a value type (40c7d97)Transports now give ArraySegment&lt;byte&gt; instead of byte[] (based on #569 and #846) (77bee45)update vars is now a value type (#990) (f99e71e)Use 0 for null byte arrays (#925) (21ca49d)use 0 for null strings (#926) (7181cd9)use bitshift operations instead of division in varint (fff765c)use byte[] directly instead of MemoryStream (#1618) (166b8c9)Use continuewith to queue up ssl messages (#1640) (84b2c8c)Use invokeRepeating instead of Update (#2066) (264f9b8)Use NetworkWriterPool in NetworkAnimator (#1421) (7d472f2)Use NetworkWriterPool in NetworkTransform (#1422) (a457845)Use RemoveAt to remove elements from lists (22b45f7)use value types for empty messages (#988) (81d915e)Use WritePackedUInt32 in SyncList (#688) (2db7576) remove NetworkConnection.isAuthenticated (#167) (8a0e0b3), closes #167Simplify RegisterHandler (#160) (f4f5167), closes #160Remove NetworkConnectionToClient (#155) (bd95cea), closes #155remove room feature for now (#122) (87dd495), closes #122Server Disconnect is now an event not a message (#121) (82ebd71), closes #121remove OnClientStart virtual (eb5242d)Move on client stop (#118) (678e386), closes #118merge clientscene and networkclient (#84) (dee1046), closes #84removed obsoletes (#1542) (4faec29), closes #1542Assign/Remove client authority now throws exception (7679d3b)Removed LLAPI (b0c936c)Simplify unpacking messages (#65) (c369da8), closes #65Remove all compiler defines (a394345)Simplify AddPlayerForConnection (#62) (fb26755), closes #62Renamed localEulerAnglesSensitivity (#1474) (eee9692), closes #1474Rename NetworkServer.localClientActive (7cd0894)Simplify spawning (c87a38a)Merge pull request #650 from vis2k/networkclient_static_2 (fac0542), closes #650 "},{"title":"Reverts​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#reverts-3","content":"Revert &quot;Revert &quot;Explain why 10&quot;&quot; (d727e4f)Revert &quot;Revert &quot;perf: faster NetworkWriter pooling (#1616)&quot;&quot; (20e9e5d), closes #1616Revert &quot;fix: replacing the player does not mean giving up authority (#1254)&quot; (b8618d3), closes #1254Revert &quot;feat: Add Timeout to NetworkAuthenticator (#1091)&quot; (12c5a8f), closes #1091Revert &quot;Remove add component from deprecated components (#1087)&quot; (9f09c21), closes #1087Revert &quot;Inserted blank lines where appropriate&quot; (913d503)Revert &quot;feat: Custom readers and writers&quot; (07ef8c9)Revert &quot;New Basic Example (#985)&quot; (35b9919), closes #985Revert &quot;fix: reduce allocations at the transport&quot; (bb128fe)Revert &quot;doc: messages can be struct now&quot; (79f7c81)Revert &quot;ClientScene.OnSpawnPrefab and NetworkManager.OnServerAddPlayerInternal: spawn objects with prefab names to avoid unnecessary &quot;(Clone)&quot; suffix from Unity. otherwise we need a name sync component in all games that show the names, e.g. MMOs for all monsters. This way we only need name sync components for objects that actually do change names, e.g. players.&quot; because of issue #426 (82d4cf0), closes #426Revert &quot;Source based weaver (#319)&quot; (9b232b0), closes #319Revert &quot;Code style and comment typo fix.&quot; (#386) (dc3b767), closes #386Revert &quot;Onserialize improvements (#302)&quot; (00a3610), closes #302Revert &quot;Documented the attributes.&quot; (9e3dcc7)Revert &quot;Documented NetworkBehaviour and NetworkIdentity.&quot; (a5cfc81)Revert &quot;Documented NetworkManager.&quot; (5bc44a9)Revert &quot;Don't generate OnSerialize/OnDeserialize if not needed (#199)&quot; (#217) (40a3ecc), closes #199 #217Revert &quot;Don't require Cmd, Rpc and Target prefixes (#127)&quot; (96992c3), closes #127 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-131","content":"Remove redundant scene ready value Removed [TargetRpc], use [ClientR(target=Client.Owner)] instead Removed websocket transport rename AsyncMultiplexTransport -&gt; MultiplexTransport rename AsyncFallbackTransport -&gt; FallbackTransport rename AsyncWsTransport -&gt; WsTransport [LocalPlayerCallback] is now [LocalPlayer(error = false)] Local Player guard Co-authored-by: Paul Pacheco &lt;paul.pacheco@aa.com&gt; [ClientCallback] is now [Client(error = false)] [HasAuthorityCallback] is now [HasAuthority(error = false)] fix test Co-authored-by: Paul Pacheco &lt;paul.pacheco@aa.com&gt; [ServerCallback] is now [Server(error = false)] fixed weaver test Remove unused code fix comment document replacement of ServerCallback No need to be serializable Exception should be serializable? Fix code smell No need to implement interface, parent does Co-authored-by: Paul Pacheco &lt;paul.pacheco@aa.com&gt; Renamed [Command] to [ServerRpc] NetworkManager no longer handles scene changes Remove isAuthenticated Fix typo Fix smells Remove smells NetworkConneciton.RegisterHandler only needs message class NetworkConnectionToClient and networkConnectionToServer are gone connecition Id is gone websocket transport does not work, needs to be replaced. NetworkManager no longer has OnServerStart virtual NetworkManager no longer spawns the player. You need to add PlayerSpawner component if you want that behavior You will need to reassign your scenes after upgrade Automatically fix properties that were using name If you open a NetworkManager or other gameobject that uses a scene name it now gets converted to scene path by the SceneDrawer Use get scene by name Scene can never be null Update Assets/Mirror/Examples/AdditiveScenes/Scenes/MainScene.unity Issue warning if we drop the scene Issue error if scene is lost Add suggestion on how to fix the error Keep backwards compatibility, check for scene name cache the active scene Update Assets/Mirror/Editor/SceneDrawer.cs Co-Authored-By: James Frowen &lt;jamesfrowendev@gmail.com&gt; GetSceneByName only works if scene is loaded Remove unused using Co-authored-by: James Frowen &lt;jamesfrowendev@gmail.com&gt; Room feature and example are gone offline/online scenes are gone OnServerDisconnect is gone Removed OnStartClient virtual, use event from NetworkClient instead OnStopClient virtual is replaced by event in Client SyncDictionary callback has been replaced callback signature changed in SyncSet Sync lists no longer have a Callback event with an operation enum NetworkBehavior no longer has virtuals for lifecycle events ClientScene is gone removed obsoletes NetworkTime.Time is no longer static observers is now a set of connections, not a dictionary cannot pass GameObjects and NetworkIdentities anymore. Will be restored in the future. StartClient now receives the server ip NetworkManager no longer has NetworkAddress Assign/Remove client authority throws exception instead of returning boolean Removed LLAPITransport MessagePacker.UnpackMessage replaced by UnpackId removed compilation defines, use upm version defines instead AddPlayerForConnection no longer receives the client fix compilatio errors fix build errors ClientConnect replaced with ClientConnectAsync that can be awaited fix: TCP transport for async compliance use async connect Ignore telepathy tests until they are fixed It is ok to interrupt sockets Remove some warnings Remove some warnings Remove some warnings Remove some warnings Remove some warnings Remove some warnings Remove some warnings localEulerAnglesSensitivity renamed to localRotationSensitivity Make the server uri method mandatory in transports Co-authored-by: MrGadget &lt;chris@clevertech.net&gt; rename localClientActive to LocalClientActiveSpawn no longer receives NetworkClientRemove obsolete OnServerAddPlayer Any person that overrides this method has a broken game. These methods are never called anywhere. The user gets a warning because they are overriding an obsolete method, which might get ignored if they have lots of other warnings. They would run their game and their game would not work at all. No errors. By removing these methods, users that override these methods will get a compile time error instead. So they cannot ignore this error and they will fix it. Method is no longer available in NetworkLobbyManagerMake NetworkClient Great Again! "},{"title":"43.3.2 (2020-08-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4332-2020-08-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-391","content":"add NRE short circuit for scene change (#335) (7afbe57) "},{"title":"43.3.1 (2020-08-07)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4331-2020-08-07","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-392","content":"remove unused events (#334) (c20f6de) 43.3.0 (2020-08-04) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-227","content":"add IChannelConnection interface for transports with channels (#332) (887118e) "},{"title":"43.2.1 (2020-08-02)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4321-2020-08-02","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-393","content":"Dont allow null connections (#323) (44fef7e) 43.2.0 (2020-08-01) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-228","content":"HeadlessAutoStart and HeadlessFrameLimiter (#318) (ce6ef50) "},{"title":"43.1.4 (2020-08-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4314-2020-08-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-394","content":"moved SpawnObjects call for hostmode to after LocalClient Connected (#317) (1423a6d) "},{"title":"43.1.3 (2020-07-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4313-2020-07-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-395","content":"ClientRPC should skip first arg only if set as Connection (#315) (168e622) "},{"title":"43.1.2 (2020-07-28)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4312-2020-07-28","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-396","content":"ui bug where additive button is not reset (#311) (5effce9) "},{"title":"43.1.1 (2020-07-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4311-2020-07-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-397","content":"remove unused code (#308) (554d2c5)update interfaces for recent changes that were missed (#309) (a17e760) 43.1.0 (2020-07-22) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-398","content":"add NetworkManager.StartClientUri test (#2095) (12827f6)dont allow set of networkSceneName directly (#2100) (df16a7d)fixing cloud scripts not pinging api (#2097) (8e545ac)Misc code smells (#2094) (e4cc85c)register prefab error with same guid (#2092) (984eb73)renaming call/invoke prefix for SyncEvent (#2089) (18d6957), closes #2088 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-229","content":"Rigidbody example (#2076) (ef47ee7) "},{"title":"43.0.1 (2020-07-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4301-2020-07-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-399","content":"benchmark examples (b221b74) 43.0.0 (2020-07-20) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-24","content":"Remove TargetRPC &amp; use ClientRPC option instead (#293) (4ace144) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-132","content":"Removed [TargetRpc], use [ClientR(target=Client.Owner)] instead 42.2.0 (2020-07-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-230","content":"scene transition uses routine instead of asyncoperation (#305) (a16eb00) "},{"title":"42.1.5 (2020-07-18)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4215-2020-07-18","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-400","content":"NS call SpawnObjects. No NetMan dependency for spawning objects (#300) (e1bb8de) "},{"title":"42.1.4 (2020-07-18)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4214-2020-07-18","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-401","content":"cap spawned to match client (#301) (7d1571a) "},{"title":"42.1.3 (2020-07-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4213-2020-07-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-402","content":"dont directly set NetworkSceneName (#297) (bd043a3) "},{"title":"42.1.2 (2020-07-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4212-2020-07-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-403","content":"ClientSceneManager should be responsible for its own cleanup (#298) (92ab3ff) "},{"title":"42.1.1 (2020-07-16)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4211-2020-07-16","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-404","content":"dont register client scene handlers while host (#296) (37c8ddd) 42.1.0 (2020-07-15) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-231","content":"Make AsyncQueue public for transports (5df0d98) 42.0.0 (2020-07-15) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-25","content":"Removed websocket transport (f26159b) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-133","content":"Removed websocket transport 41.1.0 (2020-07-15) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-232","content":"Transports can have multiple uri (#292) (155a29c) 41.0.0 (2020-07-15) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-26","content":"AsyncFallbackTransport -&gt; FallbackTransport (f8f643a)AsyncMultiplexTransport -&gt; MultiplexTransport (832b7f9)rename AsyncWsTransport -&gt; WsTransport (9c394bc) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-233","content":"Transports may support any number of schemes (#291) (2af7b9d) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-134","content":"rename AsyncMultiplexTransport -&gt; MultiplexTransportrename AsyncFallbackTransport -&gt; FallbackTransportrename AsyncWsTransport -&gt; WsTransport 40.3.0 (2020-07-14) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-405","content":"SceneManager Exceptions and Tests (#287) (388d218) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-234","content":"Server and Client share the same scene loading method (#286) (acb6dd1) 40.2.0 (2020-07-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-235","content":"additive scene msging added to server (#285) (bd7a17a) "},{"title":"40.1.1 (2020-07-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#4011-2020-07-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-406","content":"prevent NRE when operating as a separated client and server (#283) (e10e198) 40.1.0 (2020-07-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-236","content":"Transports can tell if they are supported (#282) (890c6b8) 40.0.0 (2020-07-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-237","content":"LocalPlayer attribute now throws error (#277) (15aa537) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-135","content":"[LocalPlayerCallback] is now [LocalPlayer(error = false)] Local Player guard Co-authored-by: Paul Pacheco &lt;paul.pacheco@aa.com&gt; 39.0.0 (2020-07-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-238","content":"Client attribute now throws error (#274) (f1b52f3) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-136","content":"[ClientCallback] is now [Client(error = false)] 38.0.0 (2020-07-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-239","content":"HasAuthority attribute now throws error (#276) (da2355b) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-137","content":"[HasAuthorityCallback] is now [HasAuthority(error = false)] fix test Co-authored-by: Paul Pacheco &lt;paul.pacheco@aa.com&gt; "},{"title":"37.0.1 (2020-07-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3701-2020-07-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-407","content":"smell cleanup left if bug. repaired with parenthesis. (#275) (dd52be3) 37.0.0 (2020-07-13) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-240","content":"Server attribute now throws error (#270) (f3b5dc4) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-138","content":"[ServerCallback] is now [Server(error = false)] fixed weaver test Remove unused code fix comment document replacement of ServerCallback No need to be serializable Exception should be serializable? Fix code smell No need to implement interface, parent does Co-authored-by: Paul Pacheco &lt;paul.pacheco@aa.com&gt; 36.0.0 (2020-07-13) "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-27","content":"Rename [Command] to [ServerRpc] (#271) (fff7459) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-139","content":"Renamed [Command] to [ServerRpc] "},{"title":"35.3.4 (2020-07-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3534-2020-07-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-408","content":"add tests for NetworkTransform and NetworkRigidbody (#273) (e9621dd)NinjaWS code smells (#272) (71d9428) "},{"title":"35.3.3 (2020-07-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3533-2020-07-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-409","content":"Misc code smells (#269) (23dcca6) "},{"title":"35.3.2 (2020-07-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3532-2020-07-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-410","content":"remove customHandling as its no longer used (#265) (dbd9d84) "},{"title":"35.3.1 (2020-07-13)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3531-2020-07-13","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-411","content":"AdditiveSceneExample missing comp and assignments (#267) (ab394b8)NRE on gamemanager in scene (#268) (58a124a) 35.3.0 (2020-07-13) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-412","content":"Message base class not being Serialized if processed in the wrong order (#2023) (3418fa2)not removing server if id is empty (#2078) (f717945) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-241","content":"ClientRpc no longer need Rpc prefix (#2086) (eb93c34)Commands no longer need Cmd prefix (#2084) (b6d1d09)Sync Events no longer need Event prefix (#2087) (ed40c2d)TargetRpc no longer need Target prefix (#2085) (d89ac9f) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-56","content":"Use invokeRepeating instead of Update (#2066) (264f9b8) 35.2.0 (2020-07-12) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-413","content":"add client only test for FinishLoadScene (#262) (50e7fa6) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-242","content":"Commands no longer need to start with Cmd (#263) (9578e19)throw exception if assigning incorrect asset id (#250) (7741fb1) 35.1.0 (2020-07-12) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-243","content":"Add Network Menu (#253) (d81f444) "},{"title":"35.0.3 (2020-07-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3503-2020-07-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-414","content":"code smell rename Ready (#256) (6d92d14)Misc Code Smells (#257) (278a127) "},{"title":"35.0.2 (2020-07-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3502-2020-07-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-415","content":"cleanup the server even after error (#255) (7bd015e) "},{"title":"35.0.1 (2020-07-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3501-2020-07-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-416","content":"fix adding and saving Components (2de7ecd) 35.0.0 (2020-07-10) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-244","content":"Component based NetworkSceneManager (#244) (7579d71) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-140","content":"NetworkManager no longer handles scene changes 34.13.0 (2020-07-05) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-245","content":"Spawn objects in clients in same order as server (#247) (b786646) 34.12.0 (2020-07-04) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-246","content":"Example with 10k monster that change unfrequently (2b2e71c) 34.11.0 (2020-07-04) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-417","content":"addingNetwork rigidbody icon and AddComponentMenu attribute (#2051) (ab1b92f)calling base method when the first base class did not have the virtual method (#2014) (4af72c3)changing namespace to match folder name (#2037) (e36449c)Clean up roomSlots on clients in NetworkRoomPlayer (5032ceb)Fallback and Multiplex now disable their transports when they are disabled (#2048) (61d44b2)If socket is undefined it will return false. See #1486 (#2017) (4ffff19)Network rigidbody fixes (#2050) (0c30d33)sync events can not have the same name if they are in different classes (#2054) (c91308f)weaver now processes multiple SyncEvent per class (#2055) (b316b35) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-247","content":"adding demo for mirror cloud services (#2026) (f1fdc95)adding log handler that sets console color (#2001) (4623978)Experimental NetworkRigidbody (#1822) (25285b1)More examples for Mirror Cloud Service (#2029) (7d0e907) "},{"title":"34.10.1 (2020-07-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#34101-2020-07-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-418","content":"assign spawn locations and fix null refs in example (#242) (3adf343)folders for meta files no longer in the codebase (#237) (192fd16)remove pause network comment and log (#238) (1a8c09d) 34.10.0 (2020-07-04) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-419","content":"#1659 Telepathy LateUpdate processes a limited amount of messages per tick to avoid deadlocks (#1830) (d3dccd7)Added ClientOnly check (fb927f8)Adding warning when adding handler with RegisterSpawnHandler if assetid already exists (#1819) (7f26329)Adding warning when adding prefab with RegisterPrefab if assetid already exists (#1828) (9f59e0c)Allowing overrides for virtual commands to call base method (#1944) (b92da91)better error for Command, ClientRpc and TargetRpc marked as abstract (#1947) (62257d8)Better errors when trying to replace existing assetid (#1827) (822b041)Cleaning up network objects when server stops (#1864) (4c25122)clear all message handlers on Shutdown (#1829) (a6ab352)Don't call RegisterClientMessages every scene change (#1865) (05c119f)Don't call RegisterClientMessages twice (#1842) (2a08aac)Fixed Capitalization (c45deb8)Fixing ClientScene UnregisterPrefab (#1815) (9270765)Improved error checking for ClientScene.RegisterPrefab (#1823) (a0aa4f9)Improved error checking for ClientScene.RegisterPrefab with handler (#1841) (54071da)making weaver include public fields in base classes in auto generated Read/Write (#1977) (3db57e5)NetworkRoomManager.minPlayers is now protected so it's available for derived classes. (3179f08)no longer requires hook to be the first overload in a class (#1913) (0348699)OnClientEnterRoom should only fire on clients (d9b7bb7)Prevent host client redundantly changing to offline scene (b4511a0)Removed unnecessary registration of player prefab in NetworkRoomManager (b2f52d7)Removed unused variable (ae3dc04)Replaced Icosphere with centered pivot (1dc0d98)Replacing ClearDelegates with RemoveDelegates for test (#1971) (927c4de)Suppress warning (fffd462)Use ReplaceHandler instead of RegisterHandler in NetworkManager (ffc276c)Websockets Transport now handles being disabled for scene changes (#1994) (5480a58)WebSockets: Force KeepAliveInterval to Zero (9a42fe3)Wrong method names in ClientSceneTests (ab3f353) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-248","content":"Add excludeOwner option to ClientRpc (#1954) (864fdd5), closes #1963 #1962 #1961 #1960 #1959 #1958 #1957 #1956Add NetworkServer.RemovePlayerForConnection (#1772) (e3790c5)add SyncList.RemoveAll (#1881) (eb7c87d)Added virtual SyncVar hook for index in NetworkRoomPlayer (0c3e079)Adding ignoreAuthority Option to Command (#1918) (3ace2c6)Adding onLocalPlayerChanged to ClientScene for when localPlayer is changed (#1920) (b4acf7d)adding OnRoomServerPlayersNotReady to NetworkRoomManager that is called when player ready changes and atleast 1 player is not ready (#1921) (9ae7fa2)Adding ReplaceHandler functions to NetworkServer and NetworkClient (#1775) (877f4e9)adding script that displays ping (#1975) (7e93030)Allowing Multiple Concurrent Additive Scenes (#1697) (e32a9b6)ClientScene uses log window (b3656a9)Creating method to replace all log handlers (#1880) (d8aaf76)Experimental Network Transform (#1990) (7e2b733)Improved Log Settings Window Appearance (#1885) (69b8451)Improved RoomPayer template (042b4e1)LogSettings that can be saved and included in a build (#1863) (fd4357c)Multiple Concurrent Additive Physics Scenes Example (#1686) (87c6ebc)NetworkConnection to client and server use logger framework (72154f1)NetworkConnection uses logging framework (ec319a1)NetworkIdentity use logger framework (2e39e13)NetworkServer uses new logging framework (8b4f105)Prettify Log Names (c7d8c09)Use SortedDictionary for LogSettings (#1914) (7d4c0a9) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-57","content":"NetworkProximityChecker checks Server.connections instead of doing 10k sphere casts for 10k monsters. 2k NetworkTransforms demo is significantly faster. Stable 80fps instead of 500ms freezes in between. (#1852) (2d89f05) "},{"title":"34.9.4 (2020-06-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3494-2020-06-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-420","content":"Additive Scene Example was missing Player Auth on movement. (#234) (09bbd68)examples run in background (#233) (4755650) "},{"title":"34.9.3 (2020-06-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3493-2020-06-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-421","content":"Optional Server or Client for PlayerSpawner (#231) (3fa5f89) "},{"title":"34.9.2 (2020-06-14)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3492-2020-06-14","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-422","content":"Spawn Handler Order (#223) (8674274), closes #222 "},{"title":"34.9.1 (2020-05-24)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3491-2020-05-24","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-423","content":"disconnect transport without domain reload (20785b7) 34.9.0 (2020-04-26) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-424","content":"Add the transport first so NetworkManager doesn't add Telepathy in OnValidate (bdec276)call the virtual OnRoomServerDisconnect before the base (e6881ef)compilation error on standalone build (bb70bf9)Removed NetworkClient.Update because NetworkManager does it in LateUpdate (984945e)Removed NetworkServer.Listen because HostSetup does that (cf6823a)weaver syncLists now checks for SerializeItem in base class (#1768) (1af5b4e) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-249","content":"Allow Multiple Network Animator (#1778) (34a76a2)Allowing extra base types to be used for SyncLists and other SyncObjects (#1729) (9bf816a)Disconnect Dead Clients (#1724) (a2eb666), closes #1753Exclude fields from weaver's automatic Read/Write using System.NonSerialized attribute (#1727) (7f8733c)Improve weaver error messages (#1779) (bcd76c5)NetworkServer.SendToReady (#1773) (f6545d4) "},{"title":"34.8.1 (2020-04-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3481-2020-04-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-425","content":"Allow sync objects to be re-used (#1744) (58c89a3), closes #1714Remove leftover AddPlayer methods now that extraData is gone (#1751) (2d006fe)Remove RoomPlayer from roomSlots on Disconnect (2a2f76c)Use path instead of name in Room Example (5d4bc47) 34.8.0 (2020-04-21) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-426","content":"Don't destroy the player twice (#1709) (cbc2a47)Eliminate NetworkAnimator SetTrigger double firing on Host (#1723) (e5b728f) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-250","content":"default log level option (#1728) (5c56adc)NetworkMatchChecker Component (#1688) (21acf66), closes #1685 #1681 #1689new virtual OnStopServer called when object is unspawned (#1743) (d1695dd) 34.7.0 (2020-04-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-251","content":"transport can provide their preferred scheme (774a07e) 34.6.0 (2020-04-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-252","content":"onstopserver event in NetworkIdentity (#186) (eb81190) 34.5.0 (2020-04-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-253","content":"Added SyncList.Find and SyncList.FindAll (#1716) (0fe6328), closes #1710Weaver can now automatically create Reader/Writer for types in a different assembly (#1708) (b1644ae), closes #1570 "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-58","content":"Adding dirty check before update sync var (#1702) (58219c8) "},{"title":"34.4.1 (2020-04-15)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3441-2020-04-15","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-427","content":"Fixing SyncVars not serializing when OnSerialize is overridden (#1671) (c66c5a6) 34.4.0 (2020-04-14) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-254","content":"Button to register all prefabs in NetworkClient (#179) (9f5f0b2) 34.3.0 (2020-04-13) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-255","content":"Authenticators can now provide AuthenticationData (310ce81) 34.2.0 (2020-04-11) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-256","content":"Use logger framework for NetworkClient (#1685) (6e92bf5) 34.1.0 (2020-04-10) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-428","content":"Check SceneManager GetSceneByName and GetSceneByPath (#1684) (e7cfd5a)Re-enable transport if aborting additive load/unload (#1683) (bc37497)stack overflow getting logger (55e075c) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-257","content":"logger factory works for static classes by passing the type (f9328c7) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-59","content":"Increasing Network Writer performance (#1674) (f057983) 34.0.0 (2020-04-10) remove NetworkConnection.isAuthenticated (#167) (8a0e0b3), closes #167 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-141","content":"Remove isAuthenticated Fix typo Fix smells Remove smells "},{"title":"33.1.1 (2020-04-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3311-2020-04-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-429","content":"Invoke server.Disconnected before identity is removed for its conn (#165) (b749c4b) 33.1.0 (2020-04-08) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-258","content":"new websocket transport (#156) (23c7b0d) 33.0.0 (2020-04-08) Simplify RegisterHandler (#160) (f4f5167), closes #160 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-142","content":"NetworkConneciton.RegisterHandler only needs message class "},{"title":"32.0.1 (2020-04-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3201-2020-04-08","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-60","content":"Use continuewith to queue up ssl messages (#1640) (84b2c8c) 32.0.0 (2020-04-07) Remove NetworkConnectionToClient (#155) (bd95cea), closes #155 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-143","content":"NetworkConnectionToClient and networkConnectionToServer are gone 31.4.0 (2020-04-04) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-430","content":"disconnect even if there is an exception (#152) (2eb9de6) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-259","content":"spawning invalid object now gives exception (e2fc829) "},{"title":"31.3.1 (2020-04-03)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3131-2020-04-03","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-61","content":"Adding buffer for local connection (#1621) (4d5cee8) 31.3.0 (2020-04-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-431","content":"Destroyed NetMan due to singleton collision must not continue. (#1636) (d2a58a4) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-260","content":"logging api (#1611) (f2ccb59) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-62","content":"faster NetworkReader pooling (#1623) (1ae0381) "},{"title":"31.2.1 (2020-04-01)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3121-2020-04-01","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-432","content":"pass the correct connection to TargetRpcs (#146) (9df2f79) 31.2.0 (2020-04-01) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-261","content":"Add fallback transport (1b02796) 31.1.0 (2020-04-01) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-262","content":"async multiplex transport (#145) (c0e7e92) 31.0.0 (2020-04-01) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-433","content":"chat example (e6e10a7)missing meta (87ace4d) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-263","content":"asynchronous transport (#134) (0e84f45) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-144","content":"connecition Id is gonewebsocket transport does not work, needs to be replaced. "},{"title":"30.3.3 (2020-03-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3033-2020-03-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-434","content":"headless build (7864e8d)headless build (ab47a45) "},{"title":"30.3.2 (2020-03-31)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3032-2020-03-31","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-435","content":"AsyncTcp now exits normally when client disconnects (#141) (8896c4a) "},{"title":"30.3.1 (2020-03-30)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3031-2020-03-30","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-436","content":"reset buffer every time (a8a62a6) 30.3.0 (2020-03-30) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-264","content":"Piped connection (#138) (471a881) 30.2.0 (2020-03-30) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-265","content":"allow more than one NetworkManager (#135) (92968e4) "},{"title":"30.1.2 (2020-03-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3012-2020-03-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-437","content":"client being disconnected twice (#132) (36bb3a2)client disconnected on server event never raised (#133) (9d9efa0) "},{"title":"30.1.1 (2020-03-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#3011-2020-03-29","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-63","content":"faster NetworkWriter pooling (#1620) (4fa43a9) 30.1.0 (2020-03-29) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-266","content":"allow Play mode options (f9afb64) 30.0.0 (2020-03-29) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-267","content":"Server raises an event when it starts (#126) (d5b0a6f) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-145","content":"NetworkManager no longer has OnServerStart virtual "},{"title":"29.1.1 (2020-03-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2911-2020-03-29","content":""},{"title":"Reverts​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#reverts-4","content":"Revert &quot;Revert &quot;Explain why 10&quot;&quot; (d727e4f) 29.1.0 (2020-03-28) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-268","content":"get a convenient property to get network time (1e8c2fe) "},{"title":"29.0.3 (2020-03-28)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2903-2020-03-28","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-64","content":"faster NetworkWriter pooling (#1616) (5128b12), closes #1614replace isValueType with faster alternative (#1617) (61163ca), closes /github.com/vis2k/Mirror/issues/1614#issuecomment-605443808use byte[] directly instead of MemoryStream (#1618) (166b8c9) "},{"title":"29.0.2 (2020-03-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2902-2020-03-27","content":""},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-65","content":"Remove redundant mask (#1604) (5d76afb) "},{"title":"29.0.1 (2020-03-27)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2901-2020-03-27","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-438","content":"#1515 - StopHost now invokes OnServerDisconnected for the host client too (#1601) (678ac68) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-66","content":"simplify and speed up getting methods in weaver (c1cfc42) 29.0.0 (2020-03-26) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-269","content":"PlayerSpawner component (#123) (e8b933d) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-146","content":"NetworkManager no longer spawns the player. You need to add PlayerSpawner component if you want that behavior 28.0.0 (2020-03-26) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-439","content":"#1599 - NetworkManager HUD calls StopHost/Server/Client depending on state. It does not call StopHost in all cases. (#1600) (8c6ae0f) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-270","content":"now you can assign scenes even if not in Editor (#1576) (c8a1a5e) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-147","content":"You will need to reassign your scenes after upgrade Automatically fix properties that were using name If you open a NetworkManager or other gameobject that uses a scene name it now gets converted to scene path by the SceneDrawer Use get scene by name Scene can never be null Update Assets/Mirror/Examples/AdditiveScenes/Scenes/MainScene.unity Issue warning if we drop the scene Issue error if scene is lost Add suggestion on how to fix the error Keep backwards compatibility, check for scene name cache the active scene Update Assets/Mirror/Editor/SceneDrawer.cs Co-Authored-By: James Frowen &lt;jamesfrowendev@gmail.com&gt; GetSceneByName only works if scene is loaded Remove unused using Co-authored-by: James Frowen &lt;jamesfrowendev@gmail.com&gt; "},{"title":"27.0.1 (2020-03-26)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2701-2020-03-26","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-440","content":"empty scene name isn't considered as empty (ec3a939) 27.0.0 (2020-03-26) remove room feature for now (#122) (87dd495), closes #122Server Disconnect is now an event not a message (#121) (82ebd71), closes #121 "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-46","content":"Remove offline/online scenes (#120) (a4c881a) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-148","content":"Room feature and example are goneoffline/online scenes are goneOnServerDisconnect is gone 26.0.0 (2020-03-25) remove OnClientStart virtual (eb5242d) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-149","content":"Removed OnStartClient virtual, use event from NetworkClient instead 25.0.0 (2020-03-25) Move on client stop (#118) (678e386), closes #118 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-271","content":"Added Virtual OnRoomStopServer to NetworkRoomManager and Script Template (d034ef6) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-150","content":"OnStopClient virtual is replaced by event in Client "},{"title":"24.1.1 (2020-03-25)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2411-2020-03-25","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-441","content":"#1593 - NetworkRoomManager.ServerChangeScene doesn't destroy the world player before replacing the connection. otherwise ReplacePlayerForConnection removes authority form a destroyed object, causing all kidns of errors. The call wasn't actually needed. (#1594) (347cb53) 24.1.0 (2020-03-24) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-272","content":"connections can retrieve end point (#114) (d239718)transports can give server uri (#113) (dc700ec) "},{"title":"24.0.1 (2020-03-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2401-2020-03-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-442","content":"Default port is 7777 (960c39d) 24.0.0 (2020-03-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-273","content":"individual events for SyncDictionary (#112) (b3c1b16) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-151","content":"SyncDictionary callback has been replaced 23.0.0 (2020-03-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-274","content":"individual events for SyncSet (#111) (261f5d6) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-152","content":"callback signature changed in SyncSet 22.0.0 (2020-03-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-275","content":"synclists has individual meaningful events (#109) (e326064), closes #103 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-153","content":"Sync lists no longer have a Callback event with an operation enum "},{"title":"21.2.1 (2020-03-23)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2121-2020-03-23","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-443","content":"overriden hooks are invoked (fixes #1581) (#1584) (cf55333) 21.2.0 (2020-03-23) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-276","content":"next gen async transport (#106) (4a8dc67) 21.1.0 (2020-03-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-277","content":"NetworkConnection manages messages handlers (#93) (5c79f0d) "},{"title":"21.0.1 (2020-03-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2101-2020-03-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-444","content":"calling Connect and Authenticate handler twice (#102) (515f5a1) 21.0.0 (2020-03-22) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-278","content":"NetworkIdentity lifecycle events (#88) (9a7c572) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-154","content":"NetworkBehavior no longer has virtuals for lifecycle events 20.1.0 (2020-03-22) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-445","content":"tcp server Tests (3b95477) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-279","content":"NetworkClient raises event after authentication (#96) (c332271) "},{"title":"20.0.6 (2020-03-22)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2006-2020-03-22","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-446","content":"NetworkConnectionEvent should be serialized in editor (0e756ce) "},{"title":"20.0.5 (2020-03-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2005-2020-03-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-447","content":"Added LogFilter.Debug check in a few places (#1575) (3156504)comment punctuation (4d827cd)Make SendToReady non-ambiguous (#1578) (b627779) "},{"title":"20.0.4 (2020-03-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2004-2020-03-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-448","content":"movement in room demo (49f7904) "},{"title":"20.0.3 (2020-03-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2003-2020-03-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-449","content":"additive scene player movement is client authoritative (e683a92)the Room scene references other scenes (9b60871) "},{"title":"20.0.2 (2020-03-21)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2002-2020-03-21","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-450","content":"additive scene example (9fa0169) "},{"title":"20.0.1 (2020-03-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#2001-2020-03-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-451","content":"NRE when destroying all objects (#85) (71e78a7) 20.0.0 (2020-03-20) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-452","content":"compilation issue after merge from mirror (daf07be) merge clientscene and networkclient (#84) (dee1046), closes #84 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-280","content":"SyncSet and SyncDictionary now show in inspector (#1561) (5510711) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-155","content":"ClientScene is gone "},{"title":"19.1.2 (2020-03-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1912-2020-03-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-453","content":"examples now work with prefabs in NC (df4149b) "},{"title":"19.1.1 (2020-03-20)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1911-2020-03-20","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-454","content":"Fixed ClienRpc typos (e946c79)Prevent Double Call of NetworkServer.Destroy (#1554) (2d1b142)show private serializable fields in network behavior inspector (#1557) (b8c87d9)Updated NetworkRoomPlayer inspector and doc and image (a4ffcbe) 19.1.0 (2020-03-19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-281","content":"Now you can pass NetworkIdentity and GameObjects (#83) (dca2d40) "},{"title":"19.0.1 (2020-03-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1901-2020-03-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-455","content":"calling syncvar hook when not connected yet (#77) (e64727b) 19.0.0 (2020-03-17) removed obsoletes (#1542) (4faec29), closes #1542 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-156","content":"removed obsoletes 18.0.0 (2020-03-17) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-282","content":"Time sync is now done per NetworkClient (b24542f) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-157","content":"NetworkTime.Time is no longer static "},{"title":"17.0.2 (2020-03-17)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1702-2020-03-17","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-456","content":"Command and Rpc debugging information (#1551) (658847b), closes #1550 "},{"title":"17.0.1 (2020-03-15)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1701-2020-03-15","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-457","content":"Report correct channel to profiler in SendToObservers (0b84d4c) 17.0.0 (2020-03-15) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-47","content":"observers is now a set of connections (#74) (4848920) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-158","content":"observers is now a set of connections, not a dictionary 16.0.0 (2020-03-10) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-48","content":"Client and server keep their own spawned list (#71) (c2599e2) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-159","content":"cannot pass GameObjects and NetworkIdentities anymore. Will be restored in the future. "},{"title":"15.0.7 (2020-03-10)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1507-2020-03-10","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-458","content":"Use big endian for packet size (1ddcbec) "},{"title":"15.0.6 (2020-03-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1506-2020-03-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-459","content":"compilation issues (22bf925)NetworkBehaviour.SyncVarGameObjectEqual made protected again so that Weaver finds it again (165a1dd)NetworkBehaviour.SyncVarNetworkIdentityEqual made protected again so that Weaver finds it again (20a2d09) "},{"title":"15.0.5 (2020-03-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1505-2020-03-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-460","content":"don't crash when stopping the client (f584388)race condition closing tcp connections (717f1f5) "},{"title":"15.0.4 (2020-03-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1504-2020-03-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-461","content":"attributes causing a NRE (#69) (fc99c67) "},{"title":"15.0.3 (2020-03-08)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1503-2020-03-08","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-462","content":"NetworkIdentity.RebuildObservers: added missing null check for observers coming from components that implement OnRebuildObservers. Previously this caused a NullReferenceException. (a5f495a)SendToObservers missing result variable (9c09c26) "},{"title":"15.0.2 (2020-03-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1502-2020-03-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-463","content":"rooms demo (44598e5) "},{"title":"15.0.1 (2020-03-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1501-2020-03-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-464","content":"chat example works (0609d50)there is no lobby example (b1e05ef) 15.0.0 (2020-03-05) "},{"title":"Code Refactoring​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#code-refactoring-49","content":"Remove networkAddress from NetworkManager (#67) (e89c32d) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-160","content":"StartClient now receives the server ipNetworkManager no longer has NetworkAddress "},{"title":"14.0.1 (2020-03-04)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1401-2020-03-04","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-465","content":"Avoid FindObjectOfType when not needed (#66) (e2a4afd) 14.0.0 (2020-03-03) Assign/Remove client authority now throws exception (7679d3b) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-161","content":"Assign/Remove client authority throws exception instead of returning boolean 13.0.0 (2020-03-02) Removed LLAPI (b0c936c) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-162","content":"Removed LLAPITransport "},{"title":"12.0.2 (2020-02-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1202-2020-02-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-466","content":"NetworkIdentity.OnStartLocalPlayer catches exceptions now too. fixes a potential bug where an exception in PlayerInventory.OnStartLocalPlayer would cause PlayerEquipment.OnStartLocalPlayer to not be called (5ed5f84) "},{"title":"12.0.1 (2020-02-29)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#1201-2020-02-29","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-467","content":"disconnect properly from the server (c89bb51) 12.0.0 (2020-02-28) Simplify unpacking messages (#65) (c369da8), closes #65 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-163","content":"MessagePacker.UnpackMessage replaced by UnpackId 11.1.0 (2020-02-27) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-468","content":"Add missing channelId to NetworkConnectionToClient.Send calls (#1509) (b8bcd9a)build in IL2CPP (#1524) (59faa81), closes #1519 #1520Fixed NetworkRoomManager Template (1662c5a)Fixed toc link (3a0c7fb)Host Player Ready Race Condition (#1498) (4c4a52b)NetworkIdentity.SetClientOwner: overwriting the owner was still possible even though it shouldn't be. all caller functions double check and return early if it already has an owner, so we should do the same here. (548db52)NetworkServer.SpawnObjects: return false if server isn't running (d4d524d)properly detect NT rotation (#1516) (f0a993c)return &amp; continue on separate line (#1504) (61fdd89)Room example to use new override (e1d1d41)SendToAll sends to that exact connection if it is detected as local connection, instead of falling back to the .localConnection field which might be something completely different. (4b90aaf)SendToObservers sends to that exact connection if it is detected as local connection, instead of falling back to the .localConnection field which might be something completely different. (4267983)SendToReady sends to that exact connection if it is detected as local connection, instead of falling back to the .localConnection field which might be something completely different. (4596b19) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-283","content":"Added NetworkConnection to OnRoomServerSceneLoadedForPlayer (b5dfcf4)Check for client authority in CmdClientToServerSync (#1500) (8b359ff)Check for client authority in NetworkAnimator Cmd's (#1501) (ecc0659)Cosmetic Enhancement of Network Manager (#1512) (f53b12b)NetworkSceneChecker use Scene instead of string name (#1496) (7bb80e3) 11.0.0 (2020-02-13) Remove all compiler defines (a394345) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-284","content":"Block Play Mode and Builds for Weaver Errors (#1479) (0e80e19)Disposable PooledNetworkReader / PooledNetworkWriter (#1490) (bb55baa) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-164","content":"removed compilation defines, use upm version defines instead 10.0.0 (2020-02-12) Simplify AddPlayerForConnection (#62) (fb26755), closes #62 "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-165","content":"AddPlayerForConnection no longer receives the client fix compilatio errors fix build errors 9.1.0 (2020-02-12) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-469","content":"weaver support array of custom types (#1470) (d0b0bc9) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-285","content":"Added Read&lt;T&gt; Method to NetworkReader (#1480) (58df3fd)supports scriptable objects (#1471) (0f10c72) 9.0.0 (2020-02-08) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-470","content":"don't report error when stopping the server (c965d4b) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-286","content":"awaitable connect (#55) (952e8a4) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-166","content":"ClientConnect replaced with ClientConnectAsync that can be awaited fix: TCP transport for async compliance use async connect Ignore telepathy tests until they are fixed It is ok to interrupt sockets Remove some warnings Remove some warnings Remove some warnings Remove some warnings Remove some warnings Remove some warnings Remove some warnings "},{"title":"8.0.1 (2020-02-06)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#801-2020-02-06","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-471","content":"first connection id = 1 (#60) (891dab9) 8.0.0 (2020-02-06) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-472","content":"call callback after update dictionary in host (#1476) (1736bb0)port network discovery (d6a1154)remove scriptableobject error Tests (479b78b)Telepathy reverted to older version to fix freezes when calling Client.Disconnect on some platforms like Windows 10 (d0d77b6)Telepathy updated to latest version. Threads are closed properly now. (4007423) Renamed localEulerAnglesSensitivity (#1474) (eee9692), closes #1474 "},{"title":"breaking​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-28","content":"Transports can now provide their Uri (#1454) (b916064), closes #38 "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-287","content":"Implemented NetworkReaderPool (#1464) (9257112)LAN Network discovery (#1453) (e75b45f), closes #38Mirror Icon for all components (#1452) (a7efb13)supports scriptable objects (4b8f819) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-167","content":"localEulerAnglesSensitivity renamed to localRotationSensitivityMake the server uri method mandatory in transports Co-authored-by: MrGadget &lt;chris@clevertech.net&gt; 7.0.0 (2020-01-27) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-288","content":"Network Scene Checker Component (#1271) (71c0d3b)network writer and reader now support uri (0c2556a) Rename NetworkServer.localClientActive (7cd0894)Simplify spawning (c87a38a) "},{"title":"BREAKING CHANGES​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#breaking-changes-168","content":"rename localClientActive to LocalClientActiveSpawn no longer receives NetworkClient 6.0.0 (2020-01-22) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-473","content":"compilation error (df7baa4)compilation error (dc74256)Fix Room Slots for clients (#1439) (268753c) 5.0.0 (2020-01-19) 4.0.0 (2020-01-18) 3.1.0 (2020-01-16) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-474","content":"Decouple ChatWindow from player (#1429) (42a2f9b)StopHost with offline scene calls scene change twice (#1409) (a0c96f8)Telepathy works on .net core again (cb3d9f0) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-289","content":"Add Sensitivity to NetworkTransform (#1425) (f69f174) "},{"title":"3.0.4 (2020-01-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#304-2020-01-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-475","content":"comply with MIT license in upm package (b879bef) "},{"title":"3.0.3 (2020-01-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#303-2020-01-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-476","content":"auto reference mirrorng assembly (93f8688)Mirage works with 2019.2 (9f35d6b) "},{"title":"3.0.2 (2020-01-12)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#302-2020-01-12","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-477","content":"remove Tests from upm package (#34) (8d8ea0f) "},{"title":"3.0.1 (2020-01-11)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#301-2020-01-11","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-478","content":"remove Tests from UPM (#33) (8f42af0) 3.0.0 (2020-01-11) "},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-479","content":"#723 - NetworkTransform teleport works properly now (fd7dc5e)fix release pipeline (2a3db0b)release job requires node 10 (3f50e63)remove tests from npm package (#32) (5ed9b4f)syntax error in release job (2eeaea4) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-290","content":"Network Animator can reset triggers (#1420) (dffdf02)NetworkAnimator warns if you use it incorrectly (#1424) (c30e4a9) "},{"title":"Performance Improvements​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#performance-improvements-67","content":"Use NetworkWriterPool in NetworkAnimator (#1421) (7d472f2)Use NetworkWriterPool in NetworkTransform (#1422) (a457845) 2.0.0 (2020-01-09) "},{"title":"1.1.2 (2020-01-09)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#112-2020-01-09","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-480","content":"#1241 - Telepathy updated to latest version. All tests are passing again. Thread.Interrupt was replaced by Abort+Join. (228b32e)#1278 - only call initial state SyncVar hooks on clients if the SyncVar value is different from the default one. (#1414) (a3ffd12)#1380 - NetworkConnection.clientOwnedObjects changed from uint HashSet to NetworkIdentity HashSet for ease of use and to fix a bug where DestroyOwnedObjects wouldn't find a netId anymore in some cases. (a71ecdb)FinishLoadSceneHost calls FinishStart host which now calls StartHostClient AFTER server online scene was loaded. Previously there was a race condition where StartHostClient was called immediately in StartHost, before the scene change even finished. This was still from UNET. (df9c29a) "},{"title":"1.1.1 (2020-01-05)​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#111-2020-01-05","content":""},{"title":"Bug Fixes​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#bug-fixes-481","content":"add Changelog metadata fix #31 (c67de22) 1.1.0 (2020-01-04) "},{"title":"Features​","type":1,"pageTitle":"Change Log","url":"docs/general/CHANGELOG#features-291","content":"include generated changelog (#27) (a60f1ac) "},{"title":"Interface ISyncObject","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/ISyncObject","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface ISyncObject","url":"docs/reference/Mirage.Collections/ISyncObject#properties","content":"IsDirty​ true if there are changes since the last flush Declaration​ bool IsDirty { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Interface ISyncObject","url":"docs/reference/Mirage.Collections/ISyncObject#methods","content":"SetShouldSyncFrom(Boolean)​ Are we sending or receiving data from this instance. This is used to determine if we should throw if a change is made on the wrong instance Declaration​ void SetShouldSyncFrom(bool shouldSync)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tshouldSync\t Flush()​ Discard all the queued changes Consider the object fully synchronized with clients Declaration​ void Flush()  OnSerializeAll(NetworkWriter)​ Write a full copy of the object Declaration​ void OnSerializeAll(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnSerializeDelta(NetworkWriter)​ Write the changes made to the object since last sync Declaration​ void OnSerializeDelta(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnDeserializeAll(NetworkReader)​ Reads a full copy of the object Declaration​ void OnDeserializeAll(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t OnDeserializeDelta(NetworkReader)​ Reads the changes made to the object since last sync Declaration​ void OnDeserializeDelta(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Reset()​ Resets the SyncObject so that it can be re-used Declaration​ void Reset()  SetNetworkBehaviour(NetworkBehaviour)​ Sets the NetworkBehaviour that owns this SyncObject This can be used by custom syncObjects to listen to events on NetworkBehaviour This will only be called once, the first time the object is spawned (similar to unity's awake call) Declaration​ void SetNetworkBehaviour(NetworkBehaviour networkBehaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tnetworkBehaviour\t "},{"title":"Class SyncDictionary<TKey, TValue>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncDictionary-2","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncDictionary<TKey, TValue>","url":"docs/reference/Mirage.Collections/SyncDictionary-2#constructors","content":"SyncDictionary()​ Declaration​ public SyncDictionary()  SyncDictionary(IEqualityComparer&lt;TKey&gt;)​ Declaration​ public SyncDictionary(IEqualityComparer&lt;TKey&gt; eq)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEqualityComparer&lt;TKey&gt;\teq\t "},{"title":"Properties​","type":1,"pageTitle":"Class SyncDictionary<TKey, TValue>","url":"docs/reference/Mirage.Collections/SyncDictionary-2#properties","content":"Values​ Declaration​ public Dictionary&lt;TKey, TValue&gt;.ValueCollection Values { get; }  Keys​ Declaration​ public Dictionary&lt;TKey, TValue&gt;.KeyCollection Keys { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class SyncDictionary<TKey, TValue>","url":"docs/reference/Mirage.Collections/SyncDictionary-2#methods","content":"GetEnumerator()​ Declaration​ public Dictionary&lt;TKey, TValue&gt;.Enumerator GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.Generic.Dictionary.Enumerator&lt;&gt;\t "},{"title":"Class SyncHashSet<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncHashSet-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncHashSet<T>","url":"docs/reference/Mirage.Collections/SyncHashSet-1#constructors","content":"SyncHashSet()​ Declaration​ public SyncHashSet()  SyncHashSet(IEqualityComparer&lt;T&gt;)​ Declaration​ public SyncHashSet(IEqualityComparer&lt;T&gt; comparer)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEqualityComparer&lt;T&gt;\tcomparer\t "},{"title":"Methods​","type":1,"pageTitle":"Class SyncHashSet<T>","url":"docs/reference/Mirage.Collections/SyncHashSet-1#methods","content":"GetEnumerator()​ Declaration​ public HashSet&lt;T&gt;.Enumerator GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.Generic.HashSet.Enumerator&lt;&gt;\t "},{"title":"Class SyncObjectUtils","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncObjectUtils","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class SyncObjectUtils","url":"docs/reference/Mirage.Collections/SyncObjectUtils#methods","content":"ThrowIfReadOnly(Boolean)​ Declaration​ public static void ThrowIfReadOnly(bool isReadOnly)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tisReadOnly\t "},{"title":"Struct SyncList<T>.Enumerator","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncList-1.Enumerator","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct SyncList<T>.Enumerator","url":"docs/reference/Mirage.Collections/SyncList-1.Enumerator#constructors","content":"Enumerator(SyncList&lt;T&gt;)​ Declaration​ public Enumerator(SyncList&lt;T&gt; list)  Parameters​ Type\tName\tDescriptionMirage.Collections.SyncList&lt;T&gt;\tlist\t "},{"title":"Properties​","type":1,"pageTitle":"Struct SyncList<T>.Enumerator","url":"docs/reference/Mirage.Collections/SyncList-1.Enumerator#properties","content":"Current​ Declaration​ public T Current { get; }  IEnumerator.Current​ Declaration​ object IEnumerator.Current { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Struct SyncList<T>.Enumerator","url":"docs/reference/Mirage.Collections/SyncList-1.Enumerator#methods","content":"MoveNext()​ Declaration​ public bool MoveNext()  Returns​ Type\tDescriptionSystem.Boolean\t Reset()​ Declaration​ public void Reset()  Dispose()​ Declaration​ public void Dispose()  "},{"title":"Class SyncSortedSet<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncSortedSet-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncSortedSet<T>","url":"docs/reference/Mirage.Collections/SyncSortedSet-1#constructors","content":"SyncSortedSet()​ Declaration​ public SyncSortedSet()  SyncSortedSet(IComparer&lt;T&gt;)​ Declaration​ public SyncSortedSet(IComparer&lt;T&gt; comparer)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IComparer&lt;T&gt;\tcomparer\t "},{"title":"Methods​","type":1,"pageTitle":"Class SyncSortedSet<T>","url":"docs/reference/Mirage.Collections/SyncSortedSet-1#methods","content":"GetEnumerator()​ Declaration​ public SortedSet&lt;T&gt;.Enumerator GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.Generic.SortedSet.Enumerator&lt;&gt;\t "},{"title":"Class SyncList<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncList-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncList<T>","url":"docs/reference/Mirage.Collections/SyncList-1#constructors","content":"SyncList()​ Declaration​ public SyncList()  SyncList(IEqualityComparer&lt;T&gt;)​ Declaration​ public SyncList(IEqualityComparer&lt;T&gt; comparer)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEqualityComparer&lt;T&gt;\tcomparer\t SyncList(IList&lt;T&gt;, IEqualityComparer&lt;T&gt;)​ Declaration​ public SyncList(IList&lt;T&gt; objects, IEqualityComparer&lt;T&gt; comparer = null)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IList&lt;T&gt;\tobjects System.Collections.Generic.IEqualityComparer&lt;T&gt;\tcomparer\t "},{"title":"Properties​","type":1,"pageTitle":"Class SyncList<T>","url":"docs/reference/Mirage.Collections/SyncList-1#properties","content":"Count​ Declaration​ public int Count { get; }  IsReadOnly​ Declaration​ public bool IsReadOnly { get; }  IsDirty​ Declaration​ public bool IsDirty { get; }  Item[Int32]​ Declaration​ public T this[int i] { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Class SyncList<T>","url":"docs/reference/Mirage.Collections/SyncList-1#methods","content":"ISyncObject.SetShouldSyncFrom(Boolean)​ Declaration​ void ISyncObject.SetShouldSyncFrom(bool shouldSync)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tshouldSync\t ISyncObject.SetNetworkBehaviour(NetworkBehaviour)​ Declaration​ void ISyncObject.SetNetworkBehaviour(NetworkBehaviour networkBehaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tnetworkBehaviour\t Flush()​ Declaration​ public void Flush()  Reset()​ Declaration​ public void Reset()  OnSerializeAll(NetworkWriter)​ Declaration​ public void OnSerializeAll(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnSerializeDelta(NetworkWriter)​ Declaration​ public void OnSerializeDelta(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnDeserializeAll(NetworkReader)​ Declaration​ public void OnDeserializeAll(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t OnDeserializeDelta(NetworkReader)​ Declaration​ public void OnDeserializeDelta(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Add(T)​ Declaration​ public void Add(T item)  Parameters​ Type\tName\tDescriptionT\titem\t AddRange(IEnumerable&lt;T&gt;)​ Declaration​ public void AddRange(IEnumerable&lt;T&gt; range)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\trange\t Clear()​ Declaration​ public void Clear()  Contains(T)​ Declaration​ public bool Contains(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Boolean\t CopyTo(T[], Int32)​ Declaration​ public void CopyTo(T[] array, int arrayIndex)  Parameters​ Type\tName\tDescription{T}[]\tarray System.Int32\tarrayIndex\t IndexOf(T)​ Declaration​ public int IndexOf(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Int32\t FindIndex(Predicate&lt;T&gt;)​ Declaration​ public int FindIndex(Predicate&lt;T&gt; match)  Parameters​ Type\tName\tDescriptionSystem.Predicate&lt;T&gt;\tmatch\t Returns​ Type\tDescriptionSystem.Int32\t Find(Predicate&lt;T&gt;)​ Declaration​ public T Find(Predicate&lt;T&gt; match)  Parameters​ Type\tName\tDescriptionSystem.Predicate&lt;T&gt;\tmatch\t Returns​ Type\tDescriptionT\t FindAll(Predicate&lt;T&gt;)​ Declaration​ public List&lt;T&gt; FindAll(Predicate&lt;T&gt; match)  Parameters​ Type\tName\tDescriptionSystem.Predicate&lt;T&gt;\tmatch\t Returns​ Type\tDescriptionSystem.Collections.Generic.List&lt;T&gt;\t Insert(Int32, T)​ Declaration​ public void Insert(int index, T item)  Parameters​ Type\tName\tDescriptionSystem.Int32\tindex T\titem\t InsertRange(Int32, IEnumerable&lt;T&gt;)​ Declaration​ public void InsertRange(int index, IEnumerable&lt;T&gt; range)  Parameters​ Type\tName\tDescriptionSystem.Int32\tindex System.Collections.Generic.IEnumerable&lt;T&gt;\trange\t Remove(T)​ Declaration​ public bool Remove(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Boolean\t RemoveAt(Int32)​ Declaration​ public void RemoveAt(int index)  Parameters​ Type\tName\tDescriptionSystem.Int32\tindex\t RemoveAll(Predicate&lt;T&gt;)​ Declaration​ public int RemoveAll(Predicate&lt;T&gt; match)  Parameters​ Type\tName\tDescriptionSystem.Predicate&lt;T&gt;\tmatch\t Returns​ Type\tDescriptionSystem.Int32\t SetItemDirty(T)​ Can be used to set item dirty manually. should be used with classes to avoid having to clear field first Will invoke OnSet Declaration​ public void SetItemDirty(T item)  Parameters​ Type\tName\tDescriptionT\titem\t SetItemDirtyAt(Int32)​ Can be used to set item dirty manually. should be used with classes to avoid having to clear field first Declaration​ public void SetItemDirtyAt(int index)  Parameters​ Type\tName\tDescriptionSystem.Int32\tindex\t GetEnumerator()​ Declaration​ public SyncList&lt;T&gt;.Enumerator GetEnumerator()  Returns​ Type\tDescriptionMirage.Collections.SyncList.Enumerator&lt;&gt;\t IEnumerable&lt;T&gt;.GetEnumerator()​ Declaration​ IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.Generic.IEnumerator&lt;T&gt;\t IEnumerable.GetEnumerator()​ Declaration​ IEnumerator IEnumerable.GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.IEnumerator\t "},{"title":"Class SyncSet<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncSet-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncSet<T>","url":"docs/reference/Mirage.Collections/SyncSet-1#constructors","content":"SyncSet(ISet&lt;T&gt;)​ Declaration​ public SyncSet(ISet&lt;T&gt; objects)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.ISet&lt;T&gt;\tobjects\t "},{"title":"Fields​","type":1,"pageTitle":"Class SyncSet<T>","url":"docs/reference/Mirage.Collections/SyncSet-1#fields","content":"objects​ Declaration​ protected readonly ISet&lt;T&gt; objects  "},{"title":"Properties​","type":1,"pageTitle":"Class SyncSet<T>","url":"docs/reference/Mirage.Collections/SyncSet-1#properties","content":"Count​ Declaration​ public int Count { get; }  IsReadOnly​ Declaration​ public bool IsReadOnly { get; }  IsDirty​ Declaration​ public bool IsDirty { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class SyncSet<T>","url":"docs/reference/Mirage.Collections/SyncSet-1#methods","content":"ISyncObject.SetShouldSyncFrom(Boolean)​ Declaration​ void ISyncObject.SetShouldSyncFrom(bool shouldSync)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tshouldSync\t ISyncObject.SetNetworkBehaviour(NetworkBehaviour)​ Declaration​ void ISyncObject.SetNetworkBehaviour(NetworkBehaviour networkBehaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tnetworkBehaviour\t Reset()​ Declaration​ public void Reset()  Flush()​ Declaration​ public void Flush()  OnSerializeAll(NetworkWriter)​ Declaration​ public void OnSerializeAll(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnSerializeDelta(NetworkWriter)​ Declaration​ public void OnSerializeDelta(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnDeserializeAll(NetworkReader)​ Declaration​ public void OnDeserializeAll(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t OnDeserializeDelta(NetworkReader)​ Declaration​ public void OnDeserializeDelta(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Add(T)​ Declaration​ public bool Add(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Boolean\t ICollection&lt;T&gt;.Add(T)​ Declaration​ void ICollection&lt;T&gt;.Add(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Clear()​ Declaration​ public void Clear()  Contains(T)​ Declaration​ public bool Contains(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Boolean\t CopyTo(T[], Int32)​ Declaration​ public void CopyTo(T[] array, int arrayIndex)  Parameters​ Type\tName\tDescription{T}[]\tarray System.Int32\tarrayIndex\t Remove(T)​ Declaration​ public bool Remove(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Boolean\t GetEnumerator()​ Declaration​ public IEnumerator&lt;T&gt; GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.Generic.IEnumerator&lt;T&gt;\t IEnumerable.GetEnumerator()​ Declaration​ IEnumerator IEnumerable.GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.IEnumerator\t ExceptWith(IEnumerable&lt;T&gt;)​ Declaration​ public void ExceptWith(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t IntersectWith(IEnumerable&lt;T&gt;)​ Declaration​ public void IntersectWith(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t IsProperSubsetOf(IEnumerable&lt;T&gt;)​ Declaration​ public bool IsProperSubsetOf(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t Returns​ Type\tDescriptionSystem.Boolean\t IsProperSupersetOf(IEnumerable&lt;T&gt;)​ Declaration​ public bool IsProperSupersetOf(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t Returns​ Type\tDescriptionSystem.Boolean\t IsSubsetOf(IEnumerable&lt;T&gt;)​ Declaration​ public bool IsSubsetOf(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t Returns​ Type\tDescriptionSystem.Boolean\t IsSupersetOf(IEnumerable&lt;T&gt;)​ Declaration​ public bool IsSupersetOf(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t Returns​ Type\tDescriptionSystem.Boolean\t Overlaps(IEnumerable&lt;T&gt;)​ Declaration​ public bool Overlaps(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t Returns​ Type\tDescriptionSystem.Boolean\t SetEquals(IEnumerable&lt;T&gt;)​ Declaration​ public bool SetEquals(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t Returns​ Type\tDescriptionSystem.Boolean\t SymmetricExceptWith(IEnumerable&lt;T&gt;)​ Declaration​ public void SymmetricExceptWith(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t UnionWith(IEnumerable&lt;T&gt;)​ Declaration​ public void UnionWith(IEnumerable&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\tother\t "},{"title":"Mirage.Components","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Components/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Components","url":"docs/reference/Mirage.Components/#classes","content":"LobbyReady​ ReadyCheck​ Simple component to track if a player is ready in a lobby To best use this component Set Sync Direction from owner to server SyncObjectActive​ "},{"title":"Class SyncStack<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncStack-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncStack<T>","url":"docs/reference/Mirage.Collections/SyncStack-1#constructors","content":"SyncStack()​ Declaration​ public SyncStack()  SyncStack(Stack&lt;T&gt;)​ Declaration​ public SyncStack(Stack&lt;T&gt; objects)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.Stack&lt;T&gt;\tobjects\t "},{"title":"Properties​","type":1,"pageTitle":"Class SyncStack<T>","url":"docs/reference/Mirage.Collections/SyncStack-1#properties","content":"Count​ Declaration​ public int Count { get; }  IsReadOnly​ Declaration​ public bool IsReadOnly { get; }  IsDirty​ Declaration​ public bool IsDirty { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class SyncStack<T>","url":"docs/reference/Mirage.Collections/SyncStack-1#methods","content":"ISyncObject.SetShouldSyncFrom(Boolean)​ Declaration​ void ISyncObject.SetShouldSyncFrom(bool shouldSync)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tshouldSync\t ISyncObject.SetNetworkBehaviour(NetworkBehaviour)​ Declaration​ void ISyncObject.SetNetworkBehaviour(NetworkBehaviour networkBehaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tnetworkBehaviour\t Flush()​ Declaration​ public void Flush()  Reset()​ Declaration​ public void Reset()  OnSerializeAll(NetworkWriter)​ Declaration​ public void OnSerializeAll(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnSerializeDelta(NetworkWriter)​ Declaration​ public void OnSerializeDelta(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnDeserializeAll(NetworkReader)​ Declaration​ public void OnDeserializeAll(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t OnDeserializeDelta(NetworkReader)​ Declaration​ public void OnDeserializeDelta(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Push(T)​ Declaration​ public void Push(T item)  Parameters​ Type\tName\tDescriptionT\titem\t AddRange(IEnumerable&lt;T&gt;)​ Declaration​ public void AddRange(IEnumerable&lt;T&gt; range)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;T&gt;\trange\t Clear()​ Declaration​ public void Clear()  CopyTo(T[], Int32)​ Declaration​ public void CopyTo(T[] array, int arrayIndex)  Parameters​ Type\tName\tDescription{T}[]\tarray System.Int32\tarrayIndex\t Pop()​ Declaration​ public T Pop()  Returns​ Type\tDescriptionT\t IEnumerable&lt;T&gt;.GetEnumerator()​ Declaration​ IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.Generic.IEnumerator&lt;T&gt;\t IEnumerable.GetEnumerator()​ Declaration​ IEnumerator IEnumerable.GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.IEnumerator\t "},{"title":"Class SyncIDictionary<TKey, TValue>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Collections/SyncIDictionary-2","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncIDictionary<TKey, TValue>","url":"docs/reference/Mirage.Collections/SyncIDictionary-2#constructors","content":"SyncIDictionary(IDictionary&lt;TKey, TValue&gt;)​ Declaration​ public SyncIDictionary(IDictionary&lt;TKey, TValue&gt; objects)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IDictionary&lt;TKey, TValue&gt;\tobjects\t "},{"title":"Fields​","type":1,"pageTitle":"Class SyncIDictionary<TKey, TValue>","url":"docs/reference/Mirage.Collections/SyncIDictionary-2#fields","content":"objects​ Declaration​ protected readonly IDictionary&lt;TKey, TValue&gt; objects  "},{"title":"Properties​","type":1,"pageTitle":"Class SyncIDictionary<TKey, TValue>","url":"docs/reference/Mirage.Collections/SyncIDictionary-2#properties","content":"Count​ Declaration​ public int Count { get; }  IsReadOnly​ Declaration​ public bool IsReadOnly { get; }  IsDirty​ Declaration​ public bool IsDirty { get; }  Keys​ Declaration​ public ICollection&lt;TKey&gt; Keys { get; }  Values​ Declaration​ public ICollection&lt;TValue&gt; Values { get; }  IReadOnlyDictionary&lt;TKey, TValue&gt;.Keys​ Declaration​ IEnumerable&lt;TKey&gt; IReadOnlyDictionary&lt;TKey, TValue&gt;.Keys { get; }  IReadOnlyDictionary&lt;TKey, TValue&gt;.Values​ Declaration​ IEnumerable&lt;TValue&gt; IReadOnlyDictionary&lt;TKey, TValue&gt;.Values { get; }  Item[TKey]​ Declaration​ public TValue this[TKey i] { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Class SyncIDictionary<TKey, TValue>","url":"docs/reference/Mirage.Collections/SyncIDictionary-2#methods","content":"ISyncObject.SetShouldSyncFrom(Boolean)​ Declaration​ void ISyncObject.SetShouldSyncFrom(bool shouldSync)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tshouldSync\t ISyncObject.SetNetworkBehaviour(NetworkBehaviour)​ Declaration​ void ISyncObject.SetNetworkBehaviour(NetworkBehaviour networkBehaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tnetworkBehaviour\t Reset()​ Declaration​ public void Reset()  Flush()​ Declaration​ public void Flush()  OnSerializeAll(NetworkWriter)​ Declaration​ public void OnSerializeAll(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnSerializeDelta(NetworkWriter)​ Declaration​ public void OnSerializeDelta(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t OnDeserializeAll(NetworkReader)​ Declaration​ public void OnDeserializeAll(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t OnDeserializeDelta(NetworkReader)​ Declaration​ public void OnDeserializeDelta(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Clear()​ Declaration​ public void Clear()  ContainsKey(TKey)​ Declaration​ public bool ContainsKey(TKey key)  Parameters​ Type\tName\tDescriptionTKey\tkey\t Returns​ Type\tDescriptionSystem.Boolean\t Remove(TKey)​ Declaration​ public bool Remove(TKey key)  Parameters​ Type\tName\tDescriptionTKey\tkey\t Returns​ Type\tDescriptionSystem.Boolean\t TryGetValue(TKey, out TValue)​ Declaration​ public bool TryGetValue(TKey key, out TValue value)  Parameters​ Type\tName\tDescriptionTKey\tkey TValue\tvalue\t Returns​ Type\tDescriptionSystem.Boolean\t Add(TKey, TValue)​ Declaration​ public void Add(TKey key, TValue value)  Parameters​ Type\tName\tDescriptionTKey\tkey TValue\tvalue\t Add(KeyValuePair&lt;TKey, TValue&gt;)​ Declaration​ public void Add(KeyValuePair&lt;TKey, TValue&gt; item)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.KeyValuePair&lt;TKey, TValue&gt;\titem\t Contains(KeyValuePair&lt;TKey, TValue&gt;)​ Declaration​ public bool Contains(KeyValuePair&lt;TKey, TValue&gt; item)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.KeyValuePair&lt;TKey, TValue&gt;\titem\t Returns​ Type\tDescriptionSystem.Boolean\t CopyTo(KeyValuePair&lt;TKey, TValue&gt;[], Int32)​ Declaration​ public void CopyTo(KeyValuePair&lt;TKey, TValue&gt;[] array, int arrayIndex)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]\tarray System.Int32\tarrayIndex\t Remove(KeyValuePair&lt;TKey, TValue&gt;)​ Declaration​ public bool Remove(KeyValuePair&lt;TKey, TValue&gt; item)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.KeyValuePair&lt;TKey, TValue&gt;\titem\t Returns​ Type\tDescriptionSystem.Boolean\t GetEnumerator()​ Declaration​ public IEnumerator&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey, TValue&gt;&gt;\t IEnumerable.GetEnumerator()​ Declaration​ IEnumerator IEnumerable.GetEnumerator()  Returns​ Type\tDescriptionSystem.Collections.IEnumerator\t "},{"title":"Class ReadyCheck","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Components/ReadyCheck","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class ReadyCheck","url":"docs/reference/Mirage.Components/ReadyCheck#properties","content":"IsReady​ Declaration​ public bool IsReady { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class ReadyCheck","url":"docs/reference/Mirage.Components/ReadyCheck#methods","content":"SetReady(Boolean)​ Declaration​ public void SetReady(bool ready)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tready\t "},{"title":"Class LobbyReady","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Components/LobbyReady","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class LobbyReady","url":"docs/reference/Mirage.Components/LobbyReady#fields","content":"Server​ Declaration​ public NetworkServer Server  Players​ Declaration​ public Dictionary&lt;NetworkIdentity, ReadyCheck&gt; Players  "},{"title":"Methods​","type":1,"pageTitle":"Class LobbyReady","url":"docs/reference/Mirage.Components/LobbyReady#methods","content":"SetAllClientsNotReady()​ Declaration​ public void SetAllClientsNotReady()  SendToReady&lt;T&gt;(T, Boolean, NetworkIdentity, Channel)​ Send a message to players that are ready on check, or not ready if sendToReady fakse Declaration​ public void SendToReady&lt;T&gt;(T msg, bool sendToReady = true, NetworkIdentity exclude = null, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionT\tmsg System.Boolean\tsendToReady\tUse to send message no not ready players instead, not this doesn't check server for players with out character, only players with PlayerReadyCheck on their character Mirage.NetworkIdentity\texclude\tAdd Identity to exclude here, useful when you want to send to all players except the owner Mirage.Channel\tchannelId\t "},{"title":"Class SyncObjectActive","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Components/SyncObjectActive","content":"Class SyncObjectActive Inheritance​ System.Object Mirage.NetworkBehaviour Inherited Members​ Show Mirage.NetworkBehaviour._nextSyncTime Mirage.NetworkBehaviour.SyncSettings Mirage.NetworkBehaviour.IsServer Mirage.NetworkBehaviour.IsClient Mirage.NetworkBehaviour.IsLocalClient Mirage.NetworkBehaviour.IsHost Mirage.NetworkBehaviour.IsLocalPlayer Mirage.NetworkBehaviour.IsServerOnly Mirage.NetworkBehaviour.IsClientOnly Mirage.NetworkBehaviour.HasAuthority Mirage.NetworkBehaviour.NetId Mirage.NetworkBehaviour.Server Mirage.NetworkBehaviour.ServerObjectManager Mirage.NetworkBehaviour.Client Mirage.NetworkBehaviour.ClientObjectManager Mirage.NetworkBehaviour.Owner Mirage.NetworkBehaviour.World Mirage.NetworkBehaviour.NetworkTime Mirage.NetworkBehaviour.BehaviourId Mirage.NetworkBehaviour.SyncVarDirtyBits Mirage.NetworkBehaviour.AnySyncObjectDirty Mirage.NetworkBehaviour.syncObjects Mirage.NetworkBehaviour.Identity Mirage.NetworkBehaviour.COMPONENT_INDEX_NOT_FOUND Mirage.NetworkBehaviour.ComponentIndex Mirage.NetworkBehaviour.InitSyncObject(Mirage.Collections.ISyncObject) Mirage.NetworkBehaviour.UpdateSyncObjectShouldSync() Mirage.NetworkBehaviour.SyncVarEqual&lt;T&gt;(T, T) Mirage.NetworkBehaviour.ClearDirtyBits() Mirage.NetworkBehaviour.AnyDirtyBits() Mirage.NetworkBehaviour.SerializeObjectsAll(Mirage.Serialization.NetworkWriter) Mirage.NetworkBehaviour.SerializeObjectsDelta(Mirage.Serialization.NetworkWriter) Mirage.NetworkBehaviour.GetRpcCount() Mirage.NetworkBehaviour.RegisterRpc(Mirage.RemoteCalls.RemoteCallCollection) Syntax​ public class SyncObjectActive : NetworkBehaviour ","keywords":""},{"title":"Mirage.DisplayMetrics","type":0,"sectionRef":"#","url":"docs/reference/Mirage.DisplayMetrics/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.DisplayMetrics","url":"docs/reference/Mirage.DisplayMetrics/#classes","content":"DisplayMetricsAverageGui​ This is an example of how to show metrics, It only shows some of the values inside If you want to show more of the values then create a copy of this class and add values to DrawAverage RequestServerMetrics​ SetDisplayMetrics​ "},{"title":"Class SetDisplayMetrics","type":0,"sectionRef":"#","url":"docs/reference/Mirage.DisplayMetrics/SetDisplayMetrics","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class SetDisplayMetrics","url":"docs/reference/Mirage.DisplayMetrics/SetDisplayMetrics#fields","content":"server​ Declaration​ public NetworkServer server  client​ Declaration​ public NetworkClient client  displayMetrics​ Declaration​ public DisplayMetricsAverageGui displayMetrics  "},{"title":"Class DisplayMetricsAverageGui","type":0,"sectionRef":"#","url":"docs/reference/Mirage.DisplayMetrics/DisplayMetricsAverageGui","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class DisplayMetricsAverageGui","url":"docs/reference/Mirage.DisplayMetrics/DisplayMetricsAverageGui#fields","content":"offset​ Declaration​ public Rect offset  background​ Declaration​ public Color background  "},{"title":"Properties​","type":1,"pageTitle":"Class DisplayMetricsAverageGui","url":"docs/reference/Mirage.DisplayMetrics/DisplayMetricsAverageGui#properties","content":"Metrics​ Declaration​ public Metrics Metrics { get; set; }  "},{"title":"Class RequestServerMetrics","type":0,"sectionRef":"#","url":"docs/reference/Mirage.DisplayMetrics/RequestServerMetrics","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class RequestServerMetrics","url":"docs/reference/Mirage.DisplayMetrics/RequestServerMetrics#fields","content":"server​ Declaration​ public NetworkServer server  client​ Declaration​ public NetworkClient client  displayMetrics​ Declaration​ public DisplayMetricsAverageGui displayMetrics  RequestMetrics​ Declaration​ public bool RequestMetrics  "},{"title":"Methods​","type":1,"pageTitle":"Class RequestServerMetrics","url":"docs/reference/Mirage.DisplayMetrics/RequestServerMetrics#methods","content":"Runner()​ Declaration​ public IEnumerator Runner()  Returns​ Type\tDescriptionSystem.Collections.IEnumerator\t "},{"title":"Class AddLateEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/AddLateEvent","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class AddLateEvent","url":"docs/reference/Mirage.Events/AddLateEvent#methods","content":"AddListener(Action)​ Declaration​ public void AddListener(Action handler)  Parameters​ Type\tName\tDescriptionSystem.Action\thandler\t RemoveListener(Action)​ Declaration​ public void RemoveListener(Action handler)  Parameters​ Type\tName\tDescriptionSystem.Action\thandler\t Invoke()​ Declaration​ public virtual void Invoke()  OnDestroyCleanup()​ Clears listeners, should be called from OnDestroy Declaration​ public void OnDestroyCleanup()  "},{"title":"Mirage.Events","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Events","url":"docs/reference/Mirage.Events/#classes","content":"AddLateEvent​ An event that will invoke handlers immediately if they are added after has been called AddLateEvent&lt;T0, T1&gt;​ Version of with 2 arguments Create a non-generic class inheriting from this to use in inspector. Same rules as AddLateEvent&lt;T0&gt;​ Version of with 1 argument Create a non-generic class inheriting from this to use in inspector. Same rules as AddLateEventBase​ AddLateEventUnity​ An event that will invoke handlers immediately if they are added after has been called AddLateEventUnity&lt;T0, T1, TEvent&gt;​ Version of with 2 arguments Create a non-generic class inheriting from this to use in inspector. Same rules as AddLateEventUnity&lt;T0, TEvent&gt;​ Version of with 1 argument Create a non-generic class inheriting from this to use in inspector. Same rules as BoolAddLateEvent​ BoolUnityEvent​ DisconnectAddLateEvent​ Event fires from a when it fails to connect to the server DisconnectEvent​ NetworkPlayerAddLateEvent​ Event fires from a or during a new connection, a new authentication, or a disconnection. NetworkPlayerEvent​ "},{"title":"Interfaces​","type":1,"pageTitle":"Mirage.Events","url":"docs/reference/Mirage.Events/#interfaces","content":"IAddLateEvent​ Event that can only run once, adding handler late will it invoke right away IAddLateEvent&lt;T0, T1&gt;​ Version of with 2 arguments IAddLateEvent&lt;T0&gt;​ Version of with 1 argument IAddLateEventUnity​ Event that can only run once, adding handler late will it invoke right away IAddLateEventUnity&lt;T0, T1&gt;​ Version of with 2 arguments IAddLateEventUnity&lt;T0&gt;​ Version of with 1 argument "},{"title":"Class AddLateEvent<T0>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/AddLateEvent-1","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class AddLateEvent<T0>","url":"docs/reference/Mirage.Events/AddLateEvent-1#fields","content":"_arg0​ Declaration​ protected T0 _arg0  "},{"title":"Methods​","type":1,"pageTitle":"Class AddLateEvent<T0>","url":"docs/reference/Mirage.Events/AddLateEvent-1#methods","content":"AddListener(Action&lt;T0&gt;)​ Declaration​ public void AddListener(Action&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0&gt;\thandler\t RemoveListener(Action&lt;T0&gt;)​ Declaration​ public void RemoveListener(Action&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0&gt;\thandler\t Invoke(T0)​ Declaration​ public virtual void Invoke(T0 arg0)  Parameters​ Type\tName\tDescriptionT0\targ0\t OnDestroyCleanup()​ Clears listeners, should be called from OnDestroy Declaration​ public void OnDestroyCleanup()  "},{"title":"Class AddLateEvent<T0, T1>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/AddLateEvent-2","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class AddLateEvent<T0, T1>","url":"docs/reference/Mirage.Events/AddLateEvent-2#fields","content":"_arg0​ Declaration​ protected T0 _arg0  _arg1​ Declaration​ protected T1 _arg1  "},{"title":"Methods​","type":1,"pageTitle":"Class AddLateEvent<T0, T1>","url":"docs/reference/Mirage.Events/AddLateEvent-2#methods","content":"AddListener(Action&lt;T0, T1&gt;)​ Declaration​ public void AddListener(Action&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0, T1&gt;\thandler\t RemoveListener(Action&lt;T0, T1&gt;)​ Declaration​ public void RemoveListener(Action&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0, T1&gt;\thandler\t Invoke(T0, T1)​ Declaration​ public virtual void Invoke(T0 arg0, T1 arg1)  Parameters​ Type\tName\tDescriptionT0\targ0 T1\targ1\t OnDestroyCleanup()​ Clears listeners, should be called from OnDestroy Declaration​ public void OnDestroyCleanup()  "},{"title":"Class AddLateEventBase","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/AddLateEventBase","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class AddLateEventBase","url":"docs/reference/Mirage.Events/AddLateEventBase#fields","content":"HasInvoked​ Declaration​ protected bool HasInvoked  "},{"title":"Methods​","type":1,"pageTitle":"Class AddLateEventBase","url":"docs/reference/Mirage.Events/AddLateEventBase#methods","content":"MarkInvoked()​ Declaration​ protected void MarkInvoked()  Reset()​ Resets invoked flag, meaning new handles wont be invoked untill invoke is called again Reset does not remove listeners Declaration​ public void Reset()  "},{"title":"Class AddLateEventUnity","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/AddLateEventUnity","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class AddLateEventUnity","url":"docs/reference/Mirage.Events/AddLateEventUnity#methods","content":"AddListener(UnityAction)​ Declaration​ public void AddListener(UnityAction handler)  Parameters​ Type\tName\tDescriptionUnityAction\thandler\t RemoveListener(UnityAction)​ Declaration​ public void RemoveListener(UnityAction handler)  Parameters​ Type\tName\tDescriptionUnityAction\thandler\t Invoke()​ Declaration​ public override void Invoke()  RemoveAllListeners()​ Remove all non-persisent (ie created from script) listeners from the event. Declaration​ public void RemoveAllListeners()  "},{"title":"Class BoolAddLateEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/BoolAddLateEvent","content":"Class BoolAddLateEvent Inheritance​ System.Object Mirage.Events.AddLateEventBase Mirage.Events.AddLateEvent&lt;System.Boolean&gt; Mirage.Events.AddLateEventUnity&lt;System.Boolean, Mirage.Events.BoolUnityEvent&gt; Inherited Members​ Show Mirage.Events.AddLateEventUnity&lt;System.Boolean, Mirage.Events.BoolUnityEvent&gt;.AddListener(UnityAction&lt;System.Boolean&gt;) Mirage.Events.AddLateEventUnity&lt;System.Boolean, Mirage.Events.BoolUnityEvent&gt;.RemoveListener(UnityAction&lt;System.Boolean&gt;) Mirage.Events.AddLateEventUnity&lt;System.Boolean, Mirage.Events.BoolUnityEvent&gt;.Invoke(System.Boolean) Mirage.Events.AddLateEventUnity&lt;System.Boolean, Mirage.Events.BoolUnityEvent&gt;.RemoveAllListeners() Mirage.Events.AddLateEvent&lt;System.Boolean&gt;._arg0 Mirage.Events.AddLateEvent&lt;System.Boolean&gt;.AddListener(System.Action&lt;System.Boolean&gt;) Mirage.Events.AddLateEvent&lt;System.Boolean&gt;.RemoveListener(System.Action&lt;System.Boolean&gt;) Mirage.Events.AddLateEvent&lt;System.Boolean&gt;.Invoke(System.Boolean) Mirage.Events.AddLateEvent&lt;System.Boolean&gt;.OnDestroyCleanup() Mirage.Events.AddLateEventBase.HasInvoked Mirage.Events.AddLateEventBase.MarkInvoked() Mirage.Events.AddLateEventBase.Reset() Syntax​ [Serializable] public class BoolAddLateEvent : AddLateEventUnity&lt;bool, BoolUnityEvent&gt;, IAddLateEventUnity&lt;bool&gt;, IAddLateEvent&lt;bool&gt; ","keywords":""},{"title":"Class AddLateEventUnity<T0, T1, TEvent>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/AddLateEventUnity-3","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class AddLateEventUnity<T0, T1, TEvent>","url":"docs/reference/Mirage.Events/AddLateEventUnity-3#methods","content":"AddListener(UnityAction&lt;T0, T1&gt;)​ Declaration​ public void AddListener(UnityAction&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0, T1&gt;\thandler\t RemoveListener(UnityAction&lt;T0, T1&gt;)​ Declaration​ public void RemoveListener(UnityAction&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0, T1&gt;\thandler\t Invoke(T0, T1)​ Declaration​ public override void Invoke(T0 arg0, T1 arg1)  Parameters​ Type\tName\tDescriptionT0\targ0 T1\targ1\t RemoveAllListeners()​ Remove all non-persisent (ie created from script) listeners from the event. Declaration​ public void RemoveAllListeners()  "},{"title":"Class AddLateEventUnity<T0, TEvent>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/AddLateEventUnity-2","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class AddLateEventUnity<T0, TEvent>","url":"docs/reference/Mirage.Events/AddLateEventUnity-2#methods","content":"AddListener(UnityAction&lt;T0&gt;)​ Declaration​ public void AddListener(UnityAction&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0&gt;\thandler\t RemoveListener(UnityAction&lt;T0&gt;)​ Declaration​ public void RemoveListener(UnityAction&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0&gt;\thandler\t Invoke(T0)​ Declaration​ public override void Invoke(T0 arg0)  Parameters​ Type\tName\tDescriptionT0\targ0\t RemoveAllListeners()​ Remove all non-persisent (ie created from script) listeners from the event. Declaration​ public void RemoveAllListeners()  "},{"title":"Class BoolUnityEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/BoolUnityEvent","content":"Class BoolUnityEvent Inheritance​ System.Object Syntax​ [Serializable] public class BoolUnityEvent : UnityEvent&lt;bool&gt; ","keywords":""},{"title":"Class DisconnectEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/DisconnectEvent","content":"Class DisconnectEvent Inheritance​ System.Object Syntax​ [Serializable] public class DisconnectEvent : UnityEvent&lt;ClientStoppedReason&gt; ","keywords":""},{"title":"Class DisconnectAddLateEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/DisconnectAddLateEvent","content":"Class DisconnectAddLateEvent Event fires from a when it fails to connect to the server Inheritance​ System.Object Mirage.Events.AddLateEventBase Mirage.Events.AddLateEvent&lt;Mirage.ClientStoppedReason&gt; Mirage.Events.AddLateEventUnity&lt;Mirage.ClientStoppedReason, Mirage.Events.DisconnectEvent&gt; Inherited Members​ Show Mirage.Events.AddLateEventUnity&lt;Mirage.ClientStoppedReason, Mirage.Events.DisconnectEvent&gt;.AddListener(UnityAction&lt;Mirage.ClientStoppedReason&gt;) Mirage.Events.AddLateEventUnity&lt;Mirage.ClientStoppedReason, Mirage.Events.DisconnectEvent&gt;.RemoveListener(UnityAction&lt;Mirage.ClientStoppedReason&gt;) Mirage.Events.AddLateEventUnity&lt;Mirage.ClientStoppedReason, Mirage.Events.DisconnectEvent&gt;.Invoke(Mirage.ClientStoppedReason) Mirage.Events.AddLateEventUnity&lt;Mirage.ClientStoppedReason, Mirage.Events.DisconnectEvent&gt;.RemoveAllListeners() Mirage.Events.AddLateEvent&lt;Mirage.ClientStoppedReason&gt;._arg0 Mirage.Events.AddLateEvent&lt;Mirage.ClientStoppedReason&gt;.AddListener(System.Action&lt;Mirage.ClientStoppedReason&gt;) Mirage.Events.AddLateEvent&lt;Mirage.ClientStoppedReason&gt;.RemoveListener(System.Action&lt;Mirage.ClientStoppedReason&gt;) Mirage.Events.AddLateEvent&lt;Mirage.ClientStoppedReason&gt;.Invoke(Mirage.ClientStoppedReason) Mirage.Events.AddLateEvent&lt;Mirage.ClientStoppedReason&gt;.OnDestroyCleanup() Mirage.Events.AddLateEventBase.HasInvoked Mirage.Events.AddLateEventBase.MarkInvoked() Mirage.Events.AddLateEventBase.Reset() Syntax​ [Serializable] public class DisconnectAddLateEvent : AddLateEventUnity&lt;ClientStoppedReason, DisconnectEvent&gt;, IAddLateEventUnity&lt;ClientStoppedReason&gt;, IAddLateEvent&lt;ClientStoppedReason&gt; ","keywords":""},{"title":"Interface IAddLateEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/IAddLateEvent","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IAddLateEvent","url":"docs/reference/Mirage.Events/IAddLateEvent#methods","content":"AddListener(Action)​ Declaration​ void AddListener(Action handler)  Parameters​ Type\tName\tDescriptionSystem.Action\thandler\t RemoveListener(Action)​ Declaration​ void RemoveListener(Action handler)  Parameters​ Type\tName\tDescriptionSystem.Action\thandler\t "},{"title":"Interface IAddLateEvent<T0, T1>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/IAddLateEvent-2","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IAddLateEvent<T0, T1>","url":"docs/reference/Mirage.Events/IAddLateEvent-2#methods","content":"AddListener(Action&lt;T0, T1&gt;)​ Declaration​ void AddListener(Action&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0, T1&gt;\thandler\t RemoveListener(Action&lt;T0, T1&gt;)​ Declaration​ void RemoveListener(Action&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0, T1&gt;\thandler\t "},{"title":"Interface IAddLateEvent<T0>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/IAddLateEvent-1","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IAddLateEvent<T0>","url":"docs/reference/Mirage.Events/IAddLateEvent-1#methods","content":"AddListener(Action&lt;T0&gt;)​ Declaration​ void AddListener(Action&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0&gt;\thandler\t RemoveListener(Action&lt;T0&gt;)​ Declaration​ void RemoveListener(Action&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T0&gt;\thandler\t "},{"title":"Interface IAddLateEventUnity","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/IAddLateEventUnity","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IAddLateEventUnity","url":"docs/reference/Mirage.Events/IAddLateEventUnity#methods","content":"AddListener(UnityAction)​ Declaration​ void AddListener(UnityAction handler)  Parameters​ Type\tName\tDescriptionUnityAction\thandler\t RemoveListener(UnityAction)​ Declaration​ void RemoveListener(UnityAction handler)  Parameters​ Type\tName\tDescriptionUnityAction\thandler\t "},{"title":"Interface IAddLateEventUnity<T0>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/IAddLateEventUnity-1","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IAddLateEventUnity<T0>","url":"docs/reference/Mirage.Events/IAddLateEventUnity-1#methods","content":"AddListener(UnityAction&lt;T0&gt;)​ Declaration​ void AddListener(UnityAction&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0&gt;\thandler\t RemoveListener(UnityAction&lt;T0&gt;)​ Declaration​ void RemoveListener(UnityAction&lt;T0&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0&gt;\thandler\t "},{"title":"Interface IAddLateEventUnity<T0, T1>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/IAddLateEventUnity-2","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IAddLateEventUnity<T0, T1>","url":"docs/reference/Mirage.Events/IAddLateEventUnity-2#methods","content":"AddListener(UnityAction&lt;T0, T1&gt;)​ Declaration​ void AddListener(UnityAction&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0, T1&gt;\thandler\t RemoveListener(UnityAction&lt;T0, T1&gt;)​ Declaration​ void RemoveListener(UnityAction&lt;T0, T1&gt; handler)  Parameters​ Type\tName\tDescriptionUnityAction&lt;T0, T1&gt;\thandler\t "},{"title":"Class NetworkPlayerEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/NetworkPlayerEvent","content":"Class NetworkPlayerEvent Inheritance​ System.Object Syntax​ [Serializable] public class NetworkPlayerEvent : UnityEvent&lt;INetworkPlayer&gt; ","keywords":""},{"title":"Class NetworkPlayerAddLateEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Events/NetworkPlayerAddLateEvent","content":"Class NetworkPlayerAddLateEvent Event fires from a or during a new connection, a new authentication, or a disconnection. Inheritance​ System.Object Mirage.Events.AddLateEventBase Mirage.Events.AddLateEvent&lt;Mirage.INetworkPlayer&gt; Mirage.Events.AddLateEventUnity&lt;Mirage.INetworkPlayer, Mirage.Events.NetworkPlayerEvent&gt; Inherited Members​ Show Mirage.Events.AddLateEventUnity&lt;Mirage.INetworkPlayer, Mirage.Events.NetworkPlayerEvent&gt;.AddListener(UnityAction&lt;Mirage.INetworkPlayer&gt;) Mirage.Events.AddLateEventUnity&lt;Mirage.INetworkPlayer, Mirage.Events.NetworkPlayerEvent&gt;.RemoveListener(UnityAction&lt;Mirage.INetworkPlayer&gt;) Mirage.Events.AddLateEventUnity&lt;Mirage.INetworkPlayer, Mirage.Events.NetworkPlayerEvent&gt;.Invoke(Mirage.INetworkPlayer) Mirage.Events.AddLateEventUnity&lt;Mirage.INetworkPlayer, Mirage.Events.NetworkPlayerEvent&gt;.RemoveAllListeners() Mirage.Events.AddLateEvent&lt;Mirage.INetworkPlayer&gt;._arg0 Mirage.Events.AddLateEvent&lt;Mirage.INetworkPlayer&gt;.AddListener(System.Action&lt;Mirage.INetworkPlayer&gt;) Mirage.Events.AddLateEvent&lt;Mirage.INetworkPlayer&gt;.RemoveListener(System.Action&lt;Mirage.INetworkPlayer&gt;) Mirage.Events.AddLateEvent&lt;Mirage.INetworkPlayer&gt;.Invoke(Mirage.INetworkPlayer) Mirage.Events.AddLateEvent&lt;Mirage.INetworkPlayer&gt;.OnDestroyCleanup() Mirage.Events.AddLateEventBase.HasInvoked Mirage.Events.AddLateEventBase.MarkInvoked() Mirage.Events.AddLateEventBase.Reset() Syntax​ [Serializable] public class NetworkPlayerAddLateEvent : AddLateEventUnity&lt;INetworkPlayer, NetworkPlayerEvent&gt;, IAddLateEventUnity&lt;INetworkPlayer&gt;, IAddLateEvent&lt;INetworkPlayer&gt; ","keywords":""},{"title":"Mirage.Logging","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Logging","url":"docs/reference/Mirage.Logging/#classes","content":"ILoggerExtensions​ LogFactory​ LogSettings​ Used to load LogSettings in build LogSettingsExtensions​ LogSettingsSO​ LogSettingsSO.LoggerSettings​ MirageLogHandler​ Log handler that adds prefixes to logging MirageLogHandler.Settings​ "},{"title":"Enums​","type":1,"pageTitle":"Mirage.Logging","url":"docs/reference/Mirage.Logging/#enums","content":"MirageLogHandler.TimePrefix​ "},{"title":"Class LogFactory","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/LogFactory","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class LogFactory","url":"docs/reference/Mirage.Logging/LogFactory#properties","content":"Loggers​ Declaration​ public static IReadOnlyDictionary&lt;string, ILogger&gt; Loggers { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class LogFactory","url":"docs/reference/Mirage.Logging/LogFactory#methods","content":"GetLogger&lt;T&gt;(LogType)​ Declaration​ public static ILogger GetLogger&lt;T&gt;(LogType defaultLogLevel = null)  Parameters​ Type\tName\tDescriptionLogType\tdefaultLogLevel\t Returns​ Type\tDescriptionILogger\t GetLogger(Type, LogType)​ Declaration​ public static ILogger GetLogger(Type type, LogType defaultLogLevel = null)  Parameters​ Type\tName\tDescriptionSystem.Type\ttype LogType\tdefaultLogLevel\t Returns​ Type\tDescriptionILogger\t GetLogger(String, LogType)​ Declaration​ public static ILogger GetLogger(string loggerName, LogType defaultLogLevel = null)  Parameters​ Type\tName\tDescriptionSystem.String\tloggerName LogType\tdefaultLogLevel\t Returns​ Type\tDescriptionILogger\t ReplaceLogHandler(ILogHandler, Boolean)​ Replacing log handlers for loggers, with the option to replace for exisitng or just new loggers Declaration​ public static void ReplaceLogHandler(ILogHandler logHandler, bool replaceExisting = true)  Parameters​ Type\tName\tDescriptionILogHandler\tlogHandler System.Boolean\treplaceExisting\t ReplaceLogHandler(Func&lt;String, ILogHandler&gt;, Boolean)​ Replaceing log handlers for loggers, allows for unique log handlers for each type this can be used to add labels or other processing before logging the result Declaration​ public static void ReplaceLogHandler(Func&lt;string, ILogHandler&gt; createHandler, bool replaceExisting = true)  Parameters​ Type\tName\tDescriptionSystem.Func&lt;System.String, ILogHandler&gt;\tcreateHandler System.Boolean\treplaceExisting\t "},{"title":"Class ILoggerExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/ILoggerExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class ILoggerExtensions","url":"docs/reference/Mirage.Logging/ILoggerExtensions#methods","content":"LogError(ILogger, Object)​ Declaration​ public static void LogError(this ILogger logger, object message)  Parameters​ Type\tName\tDescriptionILogger\tlogger System.Object\tmessage\t Assert(ILogger, Boolean, Object)​ Declaration​ [Conditional(&quot;UNITY_ASSERTIONS&quot;)] public static void Assert(this ILogger logger, bool condition, object message)  Parameters​ Type\tName\tDescriptionILogger\tlogger System.Boolean\tcondition System.Object\tmessage\t Assert(ILogger, Boolean)​ Declaration​ [Conditional(&quot;UNITY_ASSERTIONS&quot;)] public static void Assert(this ILogger logger, bool condition)  Parameters​ Type\tName\tDescriptionILogger\tlogger System.Boolean\tcondition\t LogWarning(ILogger, Object)​ Declaration​ public static void LogWarning(this ILogger logger, object message)  Parameters​ Type\tName\tDescriptionILogger\tlogger System.Object\tmessage\t LogEnabled(ILogger)​ Declaration​ public static bool LogEnabled(this ILogger logger)  Parameters​ Type\tName\tDescriptionILogger\tlogger\t Returns​ Type\tDescriptionSystem.Boolean\t WarnEnabled(ILogger)​ Declaration​ public static bool WarnEnabled(this ILogger logger)  Parameters​ Type\tName\tDescriptionILogger\tlogger\t Returns​ Type\tDescriptionSystem.Boolean\t ErrorEnabled(ILogger)​ Declaration​ public static bool ErrorEnabled(this ILogger logger)  Parameters​ Type\tName\tDescriptionILogger\tlogger\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Class LogSettings","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/LogSettings","content":"Class LogSettings Used to load LogSettings in build Inheritance​ System.Object Syntax​ public class LogSettings : MonoBehaviour ","keywords":""},{"title":"Class LogSettingsExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/LogSettingsExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class LogSettingsExtensions","url":"docs/reference/Mirage.Logging/LogSettingsExtensions#methods","content":"SaveFromLogFactory(LogSettingsSO)​ Declaration​ public static void SaveFromLogFactory(this LogSettingsSO settings)  Parameters​ Type\tName\tDescriptionMirage.Logging.LogSettingsSO\tsettings\t LoadIntoLogFactory(LogSettingsSO)​ Declaration​ public static void LoadIntoLogFactory(this LogSettingsSO settings)  Parameters​ Type\tName\tDescriptionMirage.Logging.LogSettingsSO\tsettings\t "},{"title":"Class LogSettingsSO","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/LogSettingsSO","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class LogSettingsSO","url":"docs/reference/Mirage.Logging/LogSettingsSO#fields","content":"LogLevels​ Declaration​ public List&lt;LogSettingsSO.LoggerSettings&gt; LogLevels  "},{"title":"Enum MirageLogHandler.TimePrefix","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/MirageLogHandler.TimePrefix","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum MirageLogHandler.TimePrefix","url":"docs/reference/Mirage.Logging/MirageLogHandler.TimePrefix#fields","content":"None​ Declaration​ None = 0  FrameCount​ Declaration​ FrameCount = 1  UnscaledTime​ Declaration​ UnscaledTime = 2  DateTimeMilliSeconds​ Declaration​ DateTimeMilliSeconds = 3  DateTimeSeconds​ Declaration​ DateTimeSeconds = 4  "},{"title":"Class MirageLogHandler","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/MirageLogHandler","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class MirageLogHandler","url":"docs/reference/Mirage.Logging/MirageLogHandler#constructors","content":"MirageLogHandler(MirageLogHandler.Settings, String, ILogHandler)​ Declaration​ public MirageLogHandler(MirageLogHandler.Settings settings, string fullTypeName = null, ILogHandler inner = null)  Parameters​ Type\tName\tDescriptionMirage.Logging.MirageLogHandler.Settings\tsettings System.String\tfullTypeName ILogHandler\tinner\t "},{"title":"Methods​","type":1,"pageTitle":"Class MirageLogHandler","url":"docs/reference/Mirage.Logging/MirageLogHandler#methods","content":"LogException(Exception, UnityEngine.Object)​ Declaration​ public void LogException(Exception exception, UnityEngine.Object context)  Parameters​ Type\tName\tDescriptionSystem.Exception\texception UnityEngine.Object\tcontext\t LogFormat(LogType, UnityEngine.Object, String, Object[])​ Declaration​ public void LogFormat(LogType logType, UnityEngine.Object context, string format, params object[] args)  Parameters​ Type\tName\tDescriptionLogType\tlogType UnityEngine.Object\tcontext System.String\tformat System.Object[]\targs\t "},{"title":"Class LogSettingsSO.LoggerSettings","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/LogSettingsSO.LoggerSettings","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class LogSettingsSO.LoggerSettings","url":"docs/reference/Mirage.Logging/LogSettingsSO.LoggerSettings#constructors","content":"LoggerSettings(String, String, LogType)​ Declaration​ public LoggerSettings(string name, string namespace, LogType level)  Parameters​ Type\tName\tDescriptionSystem.String\tname System.String\tnamespace LogType\tlevel\t LoggerSettings(String, LogType)​ Declaration​ public LoggerSettings(string fullname, LogType level)  Parameters​ Type\tName\tDescriptionSystem.String\tfullname LogType\tlevel\t "},{"title":"Fields​","type":1,"pageTitle":"Class LogSettingsSO.LoggerSettings","url":"docs/reference/Mirage.Logging/LogSettingsSO.LoggerSettings#fields","content":"Name​ Declaration​ public string Name  Namespace​ Declaration​ public string Namespace  logLevel​ Declaration​ public LogType logLevel  "},{"title":"Properties​","type":1,"pageTitle":"Class LogSettingsSO.LoggerSettings","url":"docs/reference/Mirage.Logging/LogSettingsSO.LoggerSettings#properties","content":"FullName​ Declaration​ public string FullName { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class LogSettingsSO.LoggerSettings","url":"docs/reference/Mirage.Logging/LogSettingsSO.LoggerSettings#methods","content":"GetNameAndNameSpaceFromFullname(String)​ Declaration​ public static (string name, string namespace ) GetNameAndNameSpaceFromFullname(string fullname)  Parameters​ Type\tName\tDescriptionSystem.String\tfullname\t Returns​ Type\tDescriptionSystem.ValueTuple{System.String,System.String}\t "},{"title":"Class MirageLogHandler.Settings","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Logging/MirageLogHandler.Settings","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class MirageLogHandler.Settings","url":"docs/reference/Mirage.Logging/MirageLogHandler.Settings#constructors","content":"Settings(MirageLogHandler.TimePrefix, Boolean, Boolean)​ Declaration​ public Settings(MirageLogHandler.TimePrefix timePrefix, bool coloredLabel, bool label)  Parameters​ Type\tName\tDescriptionMirage.Logging.MirageLogHandler.TimePrefix\ttimePrefix System.Boolean\tcoloredLabel System.Boolean\tlabel\t "},{"title":"Fields​","type":1,"pageTitle":"Class MirageLogHandler.Settings","url":"docs/reference/Mirage.Logging/MirageLogHandler.Settings#fields","content":"TimePrefix​ Declaration​ public MirageLogHandler.TimePrefix TimePrefix  ColoredLabel​ Declaration​ public readonly bool ColoredLabel  Label​ Declaration​ public readonly bool Label  ColorSeed​ Used to change the colors of names number is multiple by hash unchecked, so small changes to seed will cause large changes in result 403 seems like a good starting seed, common class like NetworkServer and NetworkClient have different colors Declaration​ public int ColorSeed  ColorSaturation​ Declaration​ public float ColorSaturation  ColorValue​ Declaration​ public float ColorValue  "},{"title":"Methods​","type":1,"pageTitle":"Class MirageLogHandler.Settings","url":"docs/reference/Mirage.Logging/MirageLogHandler.Settings#methods","content":"AllowColorToLabel(String, String)​ Declaration​ public string AllowColorToLabel(string fullname, string label)  Parameters​ Type\tName\tDescriptionSystem.String\tfullname System.String\tlabel\t Returns​ Type\tDescriptionSystem.String\t ColorFromName(String)​ Declaration​ public Color ColorFromName(string fullName)  Parameters​ Type\tName\tDescriptionSystem.String\tfullName\t Returns​ Type\tDescriptionColor\t "},{"title":"Mirage.RemoteCalls","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.RemoteCalls","url":"docs/reference/Mirage.RemoteCalls/#classes","content":"ClientRpcSender​ RemoteCall​ Used for invoking a RPC methods RemoteCallCollection​ ReturnRpcException​ ServerRpcSender​ Methods used by weaver to send RPCs "},{"title":"Structs​","type":1,"pageTitle":"Mirage.RemoteCalls","url":"docs/reference/Mirage.RemoteCalls/#structs","content":"RpcMessage​ RpcReply​ RpcWithReplyMessage​ "},{"title":"Enums​","type":1,"pageTitle":"Mirage.RemoteCalls","url":"docs/reference/Mirage.RemoteCalls/#enums","content":"RpcInvokeType​ "},{"title":"Delegates​","type":1,"pageTitle":"Mirage.RemoteCalls","url":"docs/reference/Mirage.RemoteCalls/#delegates","content":"RequestDelegate&lt;T&gt;​ RpcDelegate​ Delegate for ServerRpc functions. "},{"title":"Class RemoteCall","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RemoteCall","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class RemoteCall","url":"docs/reference/Mirage.RemoteCalls/RemoteCall#constructors","content":"RemoteCall(NetworkBehaviour, RpcInvokeType, RpcDelegate, Boolean, String)​ Declaration​ public RemoteCall(NetworkBehaviour behaviour, RpcInvokeType invokeType, RpcDelegate function, bool requireAuthority, string name)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour Mirage.RemoteCalls.RpcInvokeType\tinvokeType Mirage.RemoteCalls.RpcDelegate\tfunction System.Boolean\trequireAuthority System.String\tname\t "},{"title":"Fields​","type":1,"pageTitle":"Class RemoteCall","url":"docs/reference/Mirage.RemoteCalls/RemoteCall#fields","content":"DeclaringType​ Type that rpc was declared in Declaration​ public readonly Type DeclaringType  InvokeType​ Server rpc or client rpc Declaration​ public readonly RpcInvokeType InvokeType  Function​ Function to be invoked when receiving message Declaration​ public readonly RpcDelegate Function  RequireAuthority​ Used by ServerRpc Declaration​ public readonly bool RequireAuthority  Name​ User friendly name Declaration​ public readonly string Name  Behaviour​ Declaration​ public readonly NetworkBehaviour Behaviour  "},{"title":"Methods​","type":1,"pageTitle":"Class RemoteCall","url":"docs/reference/Mirage.RemoteCalls/RemoteCall#methods","content":"ToString()​ User friendly name used for debug/error messages Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t "},{"title":"Delegate RequestDelegate<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RequestDelegate-1","content":"Delegate RequestDelegate&lt;T&gt; Syntax​ public delegate UniTask&lt;T&gt; RequestDelegate&lt;T&gt;(NetworkBehaviour obj, NetworkReader reader, INetworkPlayer senderPlayer, int replyId); Type Parameters​ Name\tDescriptionT\t","keywords":""},{"title":"Class RemoteCallCollection","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RemoteCallCollection","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class RemoteCallCollection","url":"docs/reference/Mirage.RemoteCalls/RemoteCallCollection#fields","content":"IndexOffset​ This is set by NetworkIdentity when we register each NetworkBehaviour so that they can pass their own idnex in Declaration​ public int[] IndexOffset  RemoteCalls​ Declaration​ public RemoteCall[] RemoteCalls  "},{"title":"Methods​","type":1,"pageTitle":"Class RemoteCallCollection","url":"docs/reference/Mirage.RemoteCalls/RemoteCallCollection#methods","content":"RegisterAll(NetworkBehaviour[])​ Declaration​ public void RegisterAll(NetworkBehaviour[] behaviours)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour[]\tbehaviours\t Register(Int32, String, Boolean, RpcInvokeType, NetworkBehaviour, RpcDelegate)​ Declaration​ public void Register(int index, string name, bool cmdRequireAuthority, RpcInvokeType invokerType, NetworkBehaviour behaviour, RpcDelegate func)  Parameters​ Type\tName\tDescriptionSystem.Int32\tindex System.String\tname System.Boolean\tcmdRequireAuthority Mirage.RemoteCalls.RpcInvokeType\tinvokerType Mirage.NetworkBehaviour\tbehaviour Mirage.RemoteCalls.RpcDelegate\tfunc\t RegisterRequest&lt;T&gt;(Int32, String, Boolean, RpcInvokeType, NetworkBehaviour, RequestDelegate&lt;T&gt;)​ Declaration​ public void RegisterRequest&lt;T&gt;(int index, string name, bool cmdRequireAuthority, RpcInvokeType invokerType, NetworkBehaviour behaviour, RequestDelegate&lt;T&gt; func)  Parameters​ Type\tName\tDescriptionSystem.Int32\tindex System.String\tname System.Boolean\tcmdRequireAuthority Mirage.RemoteCalls.RpcInvokeType\tinvokerType Mirage.NetworkBehaviour\tbehaviour Mirage.RemoteCalls.RequestDelegate&lt;T&gt;\tfunc\t GetIndexOffset(NetworkBehaviour)​ Declaration​ public int GetIndexOffset(NetworkBehaviour behaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour\t Returns​ Type\tDescriptionSystem.Int32\t GetRelative(NetworkBehaviour, Int32)​ Declaration​ public RemoteCall GetRelative(NetworkBehaviour behaviour, int index)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Int32\tindex\t Returns​ Type\tDescriptionMirage.RemoteCalls.RemoteCall\t GetAbsolute(Int32)​ Declaration​ public RemoteCall GetAbsolute(int index)  Parameters​ Type\tName\tDescriptionSystem.Int32\tindex\t Returns​ Type\tDescriptionMirage.RemoteCalls.RemoteCall\t "},{"title":"Class ClientRpcSender","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/ClientRpcSender","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class ClientRpcSender","url":"docs/reference/Mirage.RemoteCalls/ClientRpcSender#methods","content":"Send(NetworkBehaviour, Int32, NetworkWriter, Channel, Boolean)​ Declaration​ public static void Send(NetworkBehaviour behaviour, int relativeIndex, NetworkWriter writer, Channel channelId, bool excludeOwner)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Int32\trelativeIndex Mirage.Serialization.NetworkWriter\twriter Mirage.Channel\tchannelId System.Boolean\texcludeOwner\t SendTarget(NetworkBehaviour, Int32, NetworkWriter, Channel, INetworkPlayer)​ Declaration​ public static void SendTarget(NetworkBehaviour behaviour, int relativeIndex, NetworkWriter writer, Channel channelId, INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Int32\trelativeIndex Mirage.Serialization.NetworkWriter\twriter Mirage.Channel\tchannelId Mirage.INetworkPlayer\tplayer\t SendTargetWithReturn&lt;T&gt;(NetworkBehaviour, Int32, NetworkWriter, INetworkPlayer)​ Declaration​ public static UniTask&lt;T&gt; SendTargetWithReturn&lt;T&gt;(NetworkBehaviour behaviour, int relativeIndex, NetworkWriter writer, INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Int32\trelativeIndex Mirage.Serialization.NetworkWriter\twriter Mirage.INetworkPlayer\tplayer\t Returns​ Type\tDescriptionUniTask&lt;T&gt;\t ShouldInvokeLocally(NetworkBehaviour, RpcTarget, INetworkPlayer, Boolean)​ Used by weaver to check if ClientRPC should be invoked locally in host mode Declaration​ public static bool ShouldInvokeLocally(NetworkBehaviour behaviour, RpcTarget target, INetworkPlayer player, bool excludeOwner)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour Mirage.RpcTarget\ttarget Mirage.INetworkPlayer\tplayer\tplayer used for RpcTarget.Player System.Boolean\texcludeOwner\t Returns​ Type\tDescriptionSystem.Boolean\t IsLocalPlayerObserver(NetworkBehaviour, Boolean)​ Checks if host player can see the object Weaver uses this to check if RPC should be invoked locally Declaration​ public static bool IsLocalPlayerObserver(NetworkBehaviour behaviour, bool excludeOwner)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Boolean\texcludeOwner\t Returns​ Type\tDescriptionSystem.Boolean\t IsLocalPlayerTarget(NetworkBehaviour, INetworkPlayer)​ Checks if host player is the target player Weaver uses this to check if RPC should be invoked locally Declaration​ public static bool IsLocalPlayerTarget(NetworkBehaviour behaviour, INetworkPlayer target)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour Mirage.INetworkPlayer\ttarget\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Delegate RpcDelegate","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RpcDelegate","content":"Delegate RpcDelegate Delegate for ServerRpc functions. Syntax​ public delegate void RpcDelegate(NetworkBehaviour obj, NetworkReader reader, INetworkPlayer senderPlayer, int replyId); ","keywords":""},{"title":"Class ReturnRpcException","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/ReturnRpcException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class ReturnRpcException","url":"docs/reference/Mirage.RemoteCalls/ReturnRpcException#constructors","content":"ReturnRpcException(String)​ Declaration​ public ReturnRpcException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Enum RpcInvokeType","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RpcInvokeType","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum RpcInvokeType","url":"docs/reference/Mirage.RemoteCalls/RpcInvokeType#fields","content":"ServerRpc​ Declaration​ ServerRpc = 0  ClientRpc​ Declaration​ ClientRpc = 1  "},{"title":"Struct RpcReply","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RpcReply","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct RpcReply","url":"docs/reference/Mirage.RemoteCalls/RpcReply#fields","content":"ReplyId​ Declaration​ public int ReplyId  Success​ If result is returned, or exception was thrown Declaration​ public bool Success  Payload​ Declaration​ public ArraySegment&lt;byte&gt; Payload  "},{"title":"Struct RpcMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RpcMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct RpcMessage","url":"docs/reference/Mirage.RemoteCalls/RpcMessage#fields","content":"NetId​ Declaration​ public uint NetId  FunctionIndex​ Declaration​ public int FunctionIndex  Payload​ Declaration​ public ArraySegment&lt;byte&gt; Payload  "},{"title":"Struct RpcWithReplyMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/RpcWithReplyMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct RpcWithReplyMessage","url":"docs/reference/Mirage.RemoteCalls/RpcWithReplyMessage#fields","content":"NetId​ Declaration​ public uint NetId  FunctionIndex​ Declaration​ public int FunctionIndex  ReplyId​ Id sent with rpc so that server can reply with and send the same Id Declaration​ public int ReplyId  Payload​ Declaration​ public ArraySegment&lt;byte&gt; Payload  "},{"title":"Class ServerRpcSender","type":0,"sectionRef":"#","url":"docs/reference/Mirage.RemoteCalls/ServerRpcSender","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class ServerRpcSender","url":"docs/reference/Mirage.RemoteCalls/ServerRpcSender#methods","content":"Send(NetworkBehaviour, Int32, NetworkWriter, Channel, Boolean)​ Declaration​ public static void Send(NetworkBehaviour behaviour, int relativeIndex, NetworkWriter writer, Channel channelId, bool requireAuthority)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Int32\trelativeIndex Mirage.Serialization.NetworkWriter\twriter Mirage.Channel\tchannelId System.Boolean\trequireAuthority\t SendWithReturn&lt;T&gt;(NetworkBehaviour, Int32, NetworkWriter, Boolean)​ Declaration​ public static UniTask&lt;T&gt; SendWithReturn&lt;T&gt;(NetworkBehaviour behaviour, int relativeIndex, NetworkWriter writer, bool requireAuthority)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Int32\trelativeIndex Mirage.Serialization.NetworkWriter\twriter System.Boolean\trequireAuthority\t Returns​ Type\tDescriptionUniTask&lt;T&gt;\t ShouldInvokeLocally(NetworkBehaviour, Boolean, Boolean)​ Used by weaver to check if ClientRPC should be invoked locally in host mode Declaration​ public static bool ShouldInvokeLocally(NetworkBehaviour behaviour, bool requireAuthority, bool allowServerToCall)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour System.Boolean\trequireAuthority System.Boolean\tallowServerToCall\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Class BitCountAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/BitCountAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class BitCountAttribute","url":"docs/reference/Mirage.Serialization/BitCountAttribute#constructors","content":"BitCountAttribute(Int32)​ Declaration​ public BitCountAttribute(int bitCount)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbitCount\tValue should be between 1 and 64 "},{"title":"Class AnglePacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/AnglePacker","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class AnglePacker","url":"docs/reference/Mirage.Serialization/AnglePacker#constructors","content":"AnglePacker(Single)​ Declaration​ public AnglePacker(float lowestPrecision)  Parameters​ Type\tName\tDescriptionSystem.Single\tlowestPrecision\tlowest precision, actual precision will be caculated from number of bits used "},{"title":"Methods​","type":1,"pageTitle":"Class AnglePacker","url":"docs/reference/Mirage.Serialization/AnglePacker#methods","content":"Pack(Single)​ Declaration​ public uint Pack(float value)  Parameters​ Type\tName\tDescriptionSystem.Single\tvalue\t Returns​ Type\tDescriptionSystem.UInt32\t Pack(NetworkWriter, Single)​ Declaration​ public void Pack(NetworkWriter writer, float value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Single\tvalue\t Unpack(UInt32)​ Declaration​ public float Unpack(uint value)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tvalue\t Returns​ Type\tDescriptionSystem.Single\t Unpack(NetworkReader)​ Declaration​ public float Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Single\t "},{"title":"Mirage.Serialization","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Serialization","url":"docs/reference/Mirage.Serialization/#classes","content":"AnglePacker​ BitCountAttribute​ Tells weaver how many bits to sue for field Only works with integer fields (byte, int, ulong, enums etc) NOTE: bits are truncated when using this, so signed values will lose their sign. Use as well if value might be negative Also See: Bit Packing Documentation BitCountFromRangeAttribute​ Calculates bitcount from then given min/max values and then packs using Also See: Bit Packing Documentation BitHelper​ BitMask​ CollectionExtensions​ CompressedExtensions​ FloatPackAttribute​ Packs a float field, clamped from -max to +max, with Also See: Bit Packing Documentation FloatPacker​ Helps compresses a float into a reduced number of bits FromBitCount​ The max value for N number of bits GenericTypesSerializationExtensions​ MessageIdCache&lt;T&gt;​ Class that will cache the ID for type T avoids needing to calculate the stable hash of the full name each time a message is sent MessagePacker​ MirageNetworkReader​ NetworkReader but has a ObjectLocator field that can be used by Reader functions to fetch NetworkIdentity MirageTypesExtensions​ NetworkReader​ Bit writer, writes values to a buffer on a bit level Use to reduce memory allocation NetworkReaderPool​ Holds static reference to of NetworkWriter​ Bit writer, writes values to a buffer on a bit level Use to reduce memory allocation NetworkWriterPool​ PackedExtensions​ PooledNetworkReader​ NetworkReader to be used with PooledNetworkWriter​ NetworkWriter to be used with QuaternionPackAttribute​ QuaternionPacker​ Reader&lt;T&gt;​ a class that holds readers for the different types Note that c# creates a different static variable for each type This will be populated by the weaver StringExtensions​ SystemTypesExtensions​ UnityTypesExtensions​ VarDoublePacker​ Packs a double using and VarFloatPacker​ Packs a float using and VarIntAttribute​ Tells weaver the max range for small, medium and large values. Allows small values to be sent using less bits Only works with integer fields (byte, int, ulong, enums etc) VarIntBlocksAttribute​ Tells weaver the block size to use for packing int values Allows small values to be sent using less bits Only works with integer fields (byte, int, ulong, enums etc) VarIntBlocksPacker​ VarIntPacker​ VarVector2Packer​ Packs a vector3 using and VarVector3Packer​ Packs a vector3 using and Vector2PackAttribute​ Vector2Packer​ Vector3PackAttribute​ Vector3Packer​ WeaverIgnoreAttribute​ Tells Weaver to ignore an Extension method WeaverSerializeCollectionAttribute​ Tells weaver to use this method to write a generic type or collection Can also be used for other generic types like Nullable WeaverWriteAsGenericAttribute​ Tells Weaver to serialize a type as generic instead of creating a custom functions. Use this when you have created and assigned your own Read/Write functions or when you can't use extension methods for types and need to manually assign them. This will cause Weaver to use the and generic functions instead of creating new ones. You must set these functions manually when using this attribute. Writer&lt;T&gt;​ a class that holds writers for the different types Note that c# creates a different static variable for each type This will be populated by the weaver ZigZag​ See zigzag encoding ZigZagEncodeAttribute​ Used along size to encodes a integer value using so that both positive and negative values can be sent Also See: Bit Packing Documentation "},{"title":"Class BitMask","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/BitMask","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class BitMask","url":"docs/reference/Mirage.Serialization/BitMask#methods","content":"Mask(Int32)​ Creates mask for bits (showing 32 bits for simplify, result is 64 bit) Example bits = 4 =&gt; mask = 00000000_00000000_00000000_00001111 Example bits = 10 =&gt; mask = 00000000_00000000_00000011_11111111 Declaration​ public static ulong Mask(int bits)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbits\t Returns​ Type\tDescriptionSystem.UInt64\t OuterMask(Int32, Int32)​ Creates Mask either side of start and end Note this mask is only valid for start [0..63] and end [0..64] Declaration​ public static ulong OuterMask(int start, int end)  Parameters​ Type\tName\tDescriptionSystem.Int32\tstart System.Int32\tend\t Returns​ Type\tDescriptionSystem.UInt64\t "},{"title":"Class BitCountFromRangeAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/BitCountFromRangeAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class BitCountFromRangeAttribute","url":"docs/reference/Mirage.Serialization/BitCountFromRangeAttribute#constructors","content":"BitCountFromRangeAttribute(Int32, Int32)​ Declaration​ public BitCountFromRangeAttribute(int min, int max)  Parameters​ Type\tName\tDescriptionSystem.Int32\tmin\tminimum possible int value System.Int32\tmax\tminimum possible max value "},{"title":"Class BitHelper","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/BitHelper","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class BitHelper","url":"docs/reference/Mirage.Serialization/BitHelper#methods","content":"BitCount(Single, Single)​ Gets the number of bits need for precision in range negative to positive max WARNING: these methods are not fast, dont use in hotpath Declaration​ public static int BitCount(float max, float precision)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax System.Single\tprecision\tlowest precision required, bit count will round up so real precision might be higher Returns​ Type\tDescriptionSystem.Int32\t BitCount(Single, Single, Boolean)​ Gets the number of bits need for precision in range max If signed then range is negative max to positive max, If unsigned then 0 to max WARNING: these methods are not fast, dont use in hotpath Declaration​ public static int BitCount(float max, float precision, bool signed)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax System.Single\tprecision\tlowest precision required, bit count will round up so real precision might be higher System.Boolean\tsigned\t Returns​ Type\tDescriptionSystem.Int32\t BitCount(UInt64)​ Gets the number of bits need for max WARNING: these methods are not fast, dont use in hotpath Declaration​ public static int BitCount(ulong max)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tmax\t Returns​ Type\tDescriptionSystem.Int32\t "},{"title":"Class CompressedExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/CompressedExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class CompressedExtensions","url":"docs/reference/Mirage.Serialization/CompressedExtensions#methods","content":"WriteQuaternion(NetworkWriter, Quaternion)​ Packs Quaternion using Declaration​ public static void WriteQuaternion(this NetworkWriter writer, Quaternion rotation)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Quaternion\trotation\t ReadQuaternion(NetworkReader)​ Unpacks Quaternion using Declaration​ public static Quaternion ReadQuaternion(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionQuaternion\t "},{"title":"Class FloatPackAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/FloatPackAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class FloatPackAttribute","url":"docs/reference/Mirage.Serialization/FloatPackAttribute#constructors","content":"FloatPackAttribute(Single, Single)​ Declaration​ public FloatPackAttribute(float max, float precision)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax\tMax value of the float System.Single\tprecision\tSmallest possible value of the field. Real precision will be calculated using bitcount but will always be lower than this parameter FloatPackAttribute(Single, Int32)​ Declaration​ public FloatPackAttribute(float max, int bitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax\tMax value of the float System.Int32\tbitCount\tnumber of bits to pack the field into "},{"title":"Class FloatPacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/FloatPacker","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class FloatPacker","url":"docs/reference/Mirage.Serialization/FloatPacker#constructors","content":"FloatPacker(Single, Single)​ Declaration​ public FloatPacker(float max, float lowestPrecision)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax System.Single\tlowestPrecision\tlowest precision, actual precision will be caculated from number of bits used FloatPacker(Single, Int32)​ Declaration​ public FloatPacker(float max, int bitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax System.Int32\tbitCount\t FloatPacker(Single, Single, Boolean)​ Declaration​ public FloatPacker(float max, float lowestPrecision, bool signed)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax System.Single\tlowestPrecision\tlowest precision, actual precision will be caculated from number of bits used System.Boolean\tsigned\tif negative values will be allowed or not FloatPacker(Single, Int32, Boolean)​ Declaration​ public FloatPacker(float max, int bitCount, bool signed)  Parameters​ Type\tName\tDescriptionSystem.Single\tmax System.Int32\tbitCount System.Boolean\tsigned\tif negative values will be allowed or not "},{"title":"Methods​","type":1,"pageTitle":"Class FloatPacker","url":"docs/reference/Mirage.Serialization/FloatPacker#methods","content":"Pack(Single)​ Packs a float value into a uint Clamps the value within min/max range Declaration​ public uint Pack(float value)  Parameters​ Type\tName\tDescriptionSystem.Single\tvalue\t Returns​ Type\tDescriptionSystem.UInt32\t Pack(NetworkWriter, Single)​ Packs and Writes a float value Clamps the value within min/max range Declaration​ public void Pack(NetworkWriter writer, float value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Single\tvalue\t PackNoClamp(Single)​ Packs a float value into a uint without clamping it in range WARNING: only use this method if value is always in range. Out of range values may not be unpacked correctly Declaration​ public uint PackNoClamp(float value)  Parameters​ Type\tName\tDescriptionSystem.Single\tvalue\t Returns​ Type\tDescriptionSystem.UInt32\t PackNoClamp(NetworkWriter, Single)​ Declaration​ public void PackNoClamp(NetworkWriter writer, float value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Single\tvalue\t Unpack(UInt32)​ Unpacks uint value to float Declaration​ public float Unpack(uint value)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tvalue\t Returns​ Type\tDescriptionSystem.Single\t Unpack(NetworkReader)​ Reads and unpacks float value Declaration​ public float Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Single\t "},{"title":"Class GenericTypesSerializationExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/GenericTypesSerializationExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class GenericTypesSerializationExtensions","url":"docs/reference/Mirage.Serialization/GenericTypesSerializationExtensions#methods","content":"Write&lt;T&gt;(NetworkWriter, T)​ Writes any type that mirage supports Declaration​ public static void Write&lt;T&gt;(this NetworkWriter writer, T value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter T\tvalue\t Read&lt;T&gt;(NetworkReader)​ Reads any data type that mirage supports Declaration​ public static T Read&lt;T&gt;(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionT\t "},{"title":"Class MessageIdCache<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/MessageIdCache-1","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class MessageIdCache<T>","url":"docs/reference/Mirage.Serialization/MessageIdCache-1#fields","content":"Id​ Declaration​ public static readonly int Id  "},{"title":"Class CollectionExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/CollectionExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class CollectionExtensions","url":"docs/reference/Mirage.Serialization/CollectionExtensions#methods","content":"WriteBytesAndSize(NetworkWriter, Byte[], Int32, Int32)​ For byte arrays with dynamic size, where the reader doesn't know how many will come Declaration​ public static void WriteBytesAndSize(this NetworkWriter writer, byte[] buffer, int offset, int count)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Byte[]\tbuffer\tarray or null System.Int32\toffset System.Int32\tcount\t WriteBytesAndSize(NetworkWriter, Byte[])​ Write method for weaver to use Declaration​ public static void WriteBytesAndSize(this NetworkWriter writer, byte[] buffer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Byte[]\tbuffer\tarray or null WriteBytesAndSizeSegment(NetworkWriter, ArraySegment&lt;Byte&gt;)​ Declaration​ public static void WriteBytesAndSizeSegment(this NetworkWriter writer, ArraySegment&lt;byte&gt; buffer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.ArraySegment&lt;System.Byte&gt;\tbuffer\t WriteList&lt;T&gt;(NetworkWriter, List&lt;T&gt;)​ Declaration​ [WeaverSerializeCollection] public static void WriteList&lt;T&gt;(this NetworkWriter writer, List&lt;T&gt; list)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Collections.Generic.List&lt;T&gt;\tlist\t WriteArray&lt;T&gt;(NetworkWriter, T[])​ Declaration​ public static void WriteArray&lt;T&gt;(this NetworkWriter writer, T[] array)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter {T}[]\tarray\t WriteArraySegment&lt;T&gt;(NetworkWriter, ArraySegment&lt;T&gt;)​ Declaration​ [WeaverSerializeCollection] public static void WriteArraySegment&lt;T&gt;(this NetworkWriter writer, ArraySegment&lt;T&gt; segment)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.ArraySegment&lt;T&gt;\tsegment\t WriteDictionary&lt;TKey, TValue&gt;(NetworkWriter, Dictionary&lt;TKey, TValue&gt;)​ Declaration​ [WeaverSerializeCollection] public static void WriteDictionary&lt;TKey, TValue&gt;(this NetworkWriter writer, Dictionary&lt;TKey, TValue&gt; dictionary)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Collections.Generic.Dictionary&lt;TKey, TValue&gt;\tdictionary\t ReadBytesAndSize(NetworkReader)​ Declaration​ public static byte[] ReadBytesAndSize(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Byte[]\tarray or null ReadBytesAndSizeSegment(NetworkReader)​ Declaration​ public static ArraySegment&lt;byte&gt; ReadBytesAndSizeSegment(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\t ReadBytes(NetworkReader, Int32)​ Declaration​ public static byte[] ReadBytes(this NetworkReader reader, int count)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Int32\tcount\t Returns​ Type\tDescriptionSystem.Byte[]\t ReadList&lt;T&gt;(NetworkReader)​ Declaration​ [WeaverSerializeCollection] public static List&lt;T&gt; ReadList&lt;T&gt;(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Collections.Generic.List&lt;T&gt;\t ReadArray&lt;T&gt;(NetworkReader)​ Declaration​ public static T[] ReadArray&lt;T&gt;(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescription{T}[]\t ReadArraySegment&lt;T&gt;(NetworkReader)​ Declaration​ [WeaverSerializeCollection] public static ArraySegment&lt;T&gt; ReadArraySegment&lt;T&gt;(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.ArraySegment&lt;T&gt;\t ReadDictionary&lt;TKey, TValue&gt;(NetworkReader)​ Declaration​ [WeaverSerializeCollection] public static Dictionary&lt;TKey, TValue&gt; ReadDictionary&lt;TKey, TValue&gt;(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Collections.Generic.Dictionary&lt;TKey, TValue&gt;\t ReadListNonAlloc&lt;T&gt;(NetworkReader, List&lt;T&gt;, out Boolean)​ Reads a list from the reader into a provided list so that no new list is allocated. This will clear the list before adding the new items. Declaration​ public static void ReadListNonAlloc&lt;T&gt;(this NetworkReader reader, List&lt;T&gt; outList, out bool wasNull)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Collections.Generic.List&lt;T&gt;\toutList System.Boolean\twasNull\ttrue if the list was null on the wire ReadDictionaryNonAlloc&lt;TKey, TValue&gt;(NetworkReader, Dictionary&lt;TKey, TValue&gt;, out Boolean)​ Reads a dictionary from the reader into a provided dictionary so that no new dictionary is allocated. This will clear the dictionary before adding the new items. Declaration​ public static void ReadDictionaryNonAlloc&lt;TKey, TValue&gt;(this NetworkReader reader, Dictionary&lt;TKey, TValue&gt; outDictionary, out bool wasNull)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Collections.Generic.Dictionary&lt;TKey, TValue&gt;\toutDictionary System.Boolean\twasNull\t ReadArrayNonAlloc&lt;T&gt;(NetworkReader, T[])​ Reads an array from the reader into a provided array so that no new array is allocated. Declaration​ public static int? ReadArrayNonAlloc&lt;T&gt;(this NetworkReader reader, T[] outArray)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader {T}[]\toutArray\tArray to be populated with data. Must be large enough to hold all elements. Returns​ Type\tDescriptionSystem.Nullable&lt;System.Int32&gt;\tThe number of elements read, or null if the array was null when sent WriteCountPlusOne(NetworkWriter, Nullable&lt;Int32&gt;)​ Writes null as 0, and all over values as +1 Declaration​ public static void WriteCountPlusOne(NetworkWriter writer, int? count)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Nullable&lt;System.Int32&gt;\tcount\tThe real count or null if collection is is null ReadCountPlusOne(NetworkReader, out Int32)​ Reads 0 as null, and all over values as -1 Declaration​ public static bool ReadCountPlusOne(NetworkReader reader, out int count)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Int32\tcount\tThe real count of the Returns​ Type\tDescriptionSystem.Boolean\ttrue if collection has value, false if collection is null ValidateSize(NetworkReader, Int32)​ Use to check max size in reader before allocating array/list Assumes each element is only 1 bit, so max size allocated will be MTU*8 if attacks tries to attack Declaration​ public static void ValidateSize(NetworkReader reader, int lengthInBits)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Int32\tlengthInBits\t "},{"title":"Class MirageNetworkReader","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/MirageNetworkReader","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class MirageNetworkReader","url":"docs/reference/Mirage.Serialization/MirageNetworkReader#properties","content":"ObjectLocator​ Used to find objects by net id Declaration​ public IObjectLocator ObjectLocator { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Class MirageNetworkReader","url":"docs/reference/Mirage.Serialization/MirageNetworkReader#methods","content":"Dispose(Boolean)​ Declaration​ protected override void Dispose(bool disposing)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tdisposing\t "},{"title":"Class MessagePacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/MessagePacker","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class MessagePacker","url":"docs/reference/Mirage.Serialization/MessagePacker#properties","content":"MessageTypes​ Map of Message Id =&gt; Type When we receive a message, we can lookup here to find out what type it was. This is populated by the weaver. Declaration​ public static IReadOnlyDictionary&lt;int, Type&gt; MessageTypes { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class MessagePacker","url":"docs/reference/Mirage.Serialization/MessagePacker#methods","content":"RegisterMessage&lt;T&gt;()​ Registers a message with its ID, Useful for debugging if a message handler is missing Used by weaver Declaration​ public static void RegisterMessage&lt;T&gt;()  GetId&lt;T&gt;()​ Gets the Id from for T Declaration​ public static int GetId&lt;T&gt;()  Returns​ Type\tDescriptionSystem.Int32\t GetId(Type)​ Used to calculate new hash for type Declaration​ public static int GetId(Type type)  Parameters​ Type\tName\tDescriptionSystem.Type\ttype\t Returns​ Type\tDescriptionSystem.Int32\t Pack&lt;T&gt;(T, NetworkWriter)​ Declaration​ public static void Pack&lt;T&gt;(T message, NetworkWriter writer)  Parameters​ Type\tName\tDescriptionT\tmessage Mirage.Serialization.NetworkWriter\twriter\t Pack&lt;T&gt;(T)​ Declaration​ public static byte[] Pack&lt;T&gt;(T message)  Parameters​ Type\tName\tDescriptionT\tmessage\t Returns​ Type\tDescriptionSystem.Byte[]\t Unpack&lt;T&gt;(Byte[], IObjectLocator)​ unpack a message we received Declaration​ public static T Unpack&lt;T&gt;(byte[] data, IObjectLocator objectLocator)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tdata Mirage.IObjectLocator\tobjectLocator\tCan be null, but must be set in order to read NetworkIdentity Values Returns​ Type\tDescriptionT\t UnpackId(NetworkReader)​ Declaration​ public static int UnpackId(NetworkReader messageReader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\tmessageReader\t Returns​ Type\tDescriptionSystem.Int32\t "},{"title":"Class MirageTypesExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/MirageTypesExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class MirageTypesExtensions","url":"docs/reference/Mirage.Serialization/MirageTypesExtensions#methods","content":"WriteNetworkIdentity(NetworkWriter, NetworkIdentity)​ Declaration​ public static void WriteNetworkIdentity(this NetworkWriter writer, NetworkIdentity value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Mirage.NetworkIdentity\tvalue\t WriteNetworkBehaviour(NetworkWriter, NetworkBehaviour)​ Declaration​ public static void WriteNetworkBehaviour(this NetworkWriter writer, NetworkBehaviour value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Mirage.NetworkBehaviour\tvalue\t WriteGameObject(NetworkWriter, GameObject)​ Declaration​ public static void WriteGameObject(this NetworkWriter writer, GameObject value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter GameObject\tvalue\t ToMirageReader(NetworkReader)​ Casts reader to , throw if cast is invalid Declaration​ public static MirageNetworkReader ToMirageReader(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.Serialization.MirageNetworkReader\t ReadNetworkIdentity(NetworkReader)​ Declaration​ public static NetworkIdentity ReadNetworkIdentity(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.NetworkIdentity\t ReadNetworkBehaviour(NetworkReader)​ Declaration​ public static NetworkBehaviour ReadNetworkBehaviour(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.NetworkBehaviour\t ReadNetworkBehaviour&lt;T&gt;(NetworkReader)​ Declaration​ public static T ReadNetworkBehaviour&lt;T&gt;(this NetworkReader reader) where T : NetworkBehaviour  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionT\t ReadGameObject(NetworkReader)​ Declaration​ public static GameObject ReadGameObject(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionGameObject\t "},{"title":"Class FromBitCount","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/FromBitCount","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class FromBitCount","url":"docs/reference/Mirage.Serialization/FromBitCount#fields","content":"b1​ Declaration​ public const ulong b1 = 1UL  b2​ Declaration​ public const ulong b2 = 3UL  b3​ Declaration​ public const ulong b3 = 7UL  b4​ Declaration​ public const ulong b4 = 15UL  b5​ Declaration​ public const ulong b5 = 31UL  b6​ Declaration​ public const ulong b6 = 63UL  b7​ Declaration​ public const ulong b7 = 127UL  b8​ Declaration​ public const ulong b8 = 255UL  b9​ Declaration​ public const ulong b9 = 511UL  b10​ Declaration​ public const ulong b10 = 1023UL  b11​ Declaration​ public const ulong b11 = 2047UL  b12​ Declaration​ public const ulong b12 = 4095UL  b13​ Declaration​ public const ulong b13 = 8191UL  b14​ Declaration​ public const ulong b14 = 16383UL  b15​ Declaration​ public const ulong b15 = 32767UL  b16​ Declaration​ public const ulong b16 = 65535UL  b17​ Declaration​ public const ulong b17 = 131071UL  b18​ Declaration​ public const ulong b18 = 262143UL  b19​ Declaration​ public const ulong b19 = 524287UL  b20​ Declaration​ public const ulong b20 = 1048575UL  b21​ Declaration​ public const ulong b21 = 2097151UL  b22​ Declaration​ public const ulong b22 = 4194303UL  b23​ Declaration​ public const ulong b23 = 8388607UL  b24​ Declaration​ public const ulong b24 = 16777215UL  b25​ Declaration​ public const ulong b25 = 33554431UL  b26​ Declaration​ public const ulong b26 = 67108863UL  b27​ Declaration​ public const ulong b27 = 134217727UL  b28​ Declaration​ public const ulong b28 = 268435455UL  b29​ Declaration​ public const ulong b29 = 536870911UL  b30​ Declaration​ public const ulong b30 = 1073741823UL  b31​ Declaration​ public const ulong b31 = 2147483647UL  b32​ Declaration​ public const ulong b32 = 4294967295UL  b33​ Declaration​ public const ulong b33 = 8589934591UL  b34​ Declaration​ public const ulong b34 = 17179869183UL  b35​ Declaration​ public const ulong b35 = 34359738367UL  b36​ Declaration​ public const ulong b36 = 68719476735UL  b37​ Declaration​ public const ulong b37 = 137438953471UL  b38​ Declaration​ public const ulong b38 = 274877906943UL  b39​ Declaration​ public const ulong b39 = 549755813887UL  b40​ Declaration​ public const ulong b40 = 1099511627775UL  b41​ Declaration​ public const ulong b41 = 2199023255551UL  b42​ Declaration​ public const ulong b42 = 4398046511103UL  b43​ Declaration​ public const ulong b43 = 8796093022207UL  b44​ Declaration​ public const ulong b44 = 17592186044415UL  b45​ Declaration​ public const ulong b45 = 35184372088831UL  b46​ Declaration​ public const ulong b46 = 70368744177663UL  b47​ Declaration​ public const ulong b47 = 140737488355327UL  b48​ Declaration​ public const ulong b48 = 281474976710655UL  b49​ Declaration​ public const ulong b49 = 562949953421311UL  b50​ Declaration​ public const ulong b50 = 1125899906842623UL  b51​ Declaration​ public const ulong b51 = 2251799813685247UL  b52​ Declaration​ public const ulong b52 = 4503599627370495UL  b53​ Declaration​ public const ulong b53 = 9007199254740991UL  b54​ Declaration​ public const ulong b54 = 18014398509481983UL  b55​ Declaration​ public const ulong b55 = 36028797018963967UL  b56​ Declaration​ public const ulong b56 = 72057594037927935UL  b57​ Declaration​ public const ulong b57 = 144115188075855871UL  b58​ Declaration​ public const ulong b58 = 288230376151711743UL  b59​ Declaration​ public const ulong b59 = 576460752303423487UL  b60​ Declaration​ public const ulong b60 = 1152921504606846975UL  b61​ Declaration​ public const ulong b61 = 2305843009213693951UL  b62​ Declaration​ public const ulong b62 = 4611686018427387903UL  b63​ Declaration​ public const ulong b63 = 9223372036854775807UL  b64​ Declaration​ public const ulong b64 = 18446744073709551615UL  "},{"title":"Class NetworkReaderPool","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/NetworkReaderPool","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class NetworkReaderPool","url":"docs/reference/Mirage.Serialization/NetworkReaderPool#methods","content":"Configure(Int32, Int32)​ Declaration​ public static void Configure(int startPoolSize = 5, int maxPoolSize = 100)  Parameters​ Type\tName\tDescriptionSystem.Int32\tstartPoolSize System.Int32\tmaxPoolSize\t GetReader(ArraySegment&lt;Byte&gt;, IObjectLocator)​ Gets reader from pool. sets internal array and objectLocator values Declaration​ public static PooledNetworkReader GetReader(ArraySegment&lt;byte&gt; packet, IObjectLocator objectLocator)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tpacket Mirage.IObjectLocator\tobjectLocator\tCan be null, but must be set in order to read NetworkIdentity Values Returns​ Type\tDescriptionMirage.Serialization.PooledNetworkReader\t GetReader(Byte[], IObjectLocator)​ Gets reader from pool. sets internal array and objectLocator values Declaration​ public static PooledNetworkReader GetReader(byte[] array, IObjectLocator objectLocator)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tarray Mirage.IObjectLocator\tobjectLocator\tCan be null, but must be set in order to read NetworkIdentity Values Returns​ Type\tDescriptionMirage.Serialization.PooledNetworkReader\t GetReader(Byte[], Int32, Int32, IObjectLocator)​ Gets reader from pool. sets internal array and objectLocator values Declaration​ public static PooledNetworkReader GetReader(byte[] array, int offset, int length, IObjectLocator objectLocator)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tarray System.Int32\toffset System.Int32\tlength Mirage.IObjectLocator\tobjectLocator\tCan be null, but must be set in order to read NetworkIdentity Values Returns​ Type\tDescriptionMirage.Serialization.PooledNetworkReader\t "},{"title":"Class NetworkWriterPool","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/NetworkWriterPool","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class NetworkWriterPool","url":"docs/reference/Mirage.Serialization/NetworkWriterPool#properties","content":"BufferSize​ Current Size of buffers, or null before Configure has been called Declaration​ public static int? BufferSize { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkWriterPool","url":"docs/reference/Mirage.Serialization/NetworkWriterPool#methods","content":"Configure(Int32, Int32, Int32)​ Configures an exist pool or creates a new one Does not create a new pool if bufferSize is less that current Declaration​ public static void Configure(int bufferSize, int startPoolSize = 5, int maxPoolSize = 100)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbufferSize\tstarting capacity of buffer System.Int32\tstartPoolSize System.Int32\tmaxPoolSize\t GetWriter()​ Declaration​ public static PooledNetworkWriter GetWriter()  Returns​ Type\tDescriptionMirage.Serialization.PooledNetworkWriter\t "},{"title":"Class PackedExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/PackedExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class PackedExtensions","url":"docs/reference/Mirage.Serialization/PackedExtensions#methods","content":"WritePackedInt32(NetworkWriter, Int32)​ Declaration​ public static void WritePackedInt32(this NetworkWriter writer, int i)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Int32\ti\t WritePackedUInt32(NetworkWriter, UInt32)​ Declaration​ public static void WritePackedUInt32(this NetworkWriter writer, uint value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.UInt32\tvalue\t WritePackedInt64(NetworkWriter, Int64)​ Declaration​ public static void WritePackedInt64(this NetworkWriter writer, long i)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Int64\ti\t WritePackedUInt64(NetworkWriter, UInt64)​ Declaration​ public static void WritePackedUInt64(this NetworkWriter writer, ulong value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.UInt64\tvalue\t ReadPackedInt32(NetworkReader)​ Declaration​ public static int ReadPackedInt32(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Int32\t ReadPackedUInt32(NetworkReader)​ Declaration​ public static uint ReadPackedUInt32(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.UInt32\t ReadPackedInt64(NetworkReader)​ Declaration​ public static long ReadPackedInt64(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Int64\t ReadPackedUInt64(NetworkReader)​ Declaration​ public static ulong ReadPackedUInt64(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.UInt64\t "},{"title":"Class NetworkReader","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/NetworkReader","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NetworkReader","url":"docs/reference/Mirage.Serialization/NetworkReader#constructors","content":"NetworkReader()​ Declaration​ public NetworkReader()  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkReader","url":"docs/reference/Mirage.Serialization/NetworkReader#properties","content":"BitLength​ Size of buffer that is being read from Declaration​ public int BitLength { get; }  BitPosition​ Current bit position for reading from buffer Declaration​ public int BitPosition { get; }  BytePosition​ Current rounded up to nearest multiple of 8 Declaration​ public int BytePosition { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkReader","url":"docs/reference/Mirage.Serialization/NetworkReader#methods","content":"Finalize()​ Declaration​ protected void Finalize()  Dispose(Boolean)​ Declaration​ protected virtual void Dispose(bool disposing)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tdisposing\ttrue if called from IDisposable Dispose()​ Declaration​ public void Dispose()  Reset(ArraySegment&lt;Byte&gt;)​ Declaration​ public void Reset(ArraySegment&lt;byte&gt; segment)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tsegment\t Reset(Byte[])​ Declaration​ public void Reset(byte[] array)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tarray\t Reset(Byte[], Int32, Int32)​ Declaration​ public void Reset(byte[] array, int position, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tarray System.Int32\tposition System.Int32\tlength\t CanRead()​ Can read atleast 1 bit Declaration​ public bool CanRead()  Returns​ Type\tDescriptionSystem.Boolean\t CanReadBits(Int32)​ Can atleast readCount bits Declaration​ public bool CanReadBits(int readCount)  Parameters​ Type\tName\tDescriptionSystem.Int32\treadCount\t Returns​ Type\tDescriptionSystem.Boolean\t CanReadBytes(Int32)​ Can atleast readCount bytes Declaration​ public bool CanReadBytes(int readCount)  Parameters​ Type\tName\tDescriptionSystem.Int32\treadCount\t Returns​ Type\tDescriptionSystem.Boolean\t PadToByte()​ Declaration​ public void PadToByte()  ReadBoolean()​ Declaration​ public bool ReadBoolean()  Returns​ Type\tDescriptionSystem.Boolean\t ReadBooleanAsUlong()​ Writes first bit of value to buffer Declaration​ public ulong ReadBooleanAsUlong()  Returns​ Type\tDescriptionSystem.UInt64\t ReadSByte()​ Declaration​ public sbyte ReadSByte()  Returns​ Type\tDescriptionSystem.SByte\t ReadByte()​ Declaration​ public byte ReadByte()  Returns​ Type\tDescriptionSystem.Byte\t ReadInt16()​ Declaration​ public short ReadInt16()  Returns​ Type\tDescriptionSystem.Int16\t ReadUInt16()​ Declaration​ public ushort ReadUInt16()  Returns​ Type\tDescriptionSystem.UInt16\t ReadInt32()​ Declaration​ public int ReadInt32()  Returns​ Type\tDescriptionSystem.Int32\t ReadUInt32()​ Declaration​ public uint ReadUInt32()  Returns​ Type\tDescriptionSystem.UInt32\t ReadInt64()​ Declaration​ public long ReadInt64()  Returns​ Type\tDescriptionSystem.Int64\t ReadUInt64()​ Declaration​ public ulong ReadUInt64()  Returns​ Type\tDescriptionSystem.UInt64\t ReadSingle()​ Declaration​ public float ReadSingle()  Returns​ Type\tDescriptionSystem.Single\t ReadDouble()​ Declaration​ public double ReadDouble()  Returns​ Type\tDescriptionSystem.Double\t Read(Int32)​ Declaration​ public ulong Read(int bits)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbits\t Returns​ Type\tDescriptionSystem.UInt64\t ReadAtPosition(Int32, Int32)​ Reads n bits from buffer at bitPosition Declaration​ public ulong ReadAtPosition(int bits, int bitPosition)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbits\tnumber of bits in value to write System.Int32\tbitPosition\twhere to write bits Returns​ Type\tDescriptionSystem.UInt64\t Skip(Int32)​ Declaration​ public void Skip(int bits)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbits\t MoveBitPosition(Int32)​ Moves the internal bit position For most usecases it is safer to use WARNING: When reading from earlier position make sure to move position back to end of buffer after reading Declaration​ public void MoveBitPosition(int newPosition)  Parameters​ Type\tName\tDescriptionSystem.Int32\tnewPosition\t PadAndCopy&lt;T&gt;(out T)​ Moves position to nearest byte then copies struct from that position Declaration​ public void PadAndCopy&lt;T&gt;(out T value) where T : struct  Parameters​ Type\tName\tDescriptionT\tvalue\t ReadBytes(Byte[], Int32, Int32)​ Moves position to nearest byte then copies bytes from that position Declaration​ public void ReadBytes(byte[] array, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tarray System.Int32\toffset System.Int32\tlength\t ReadBytesSegment(Int32)​ Declaration​ public ArraySegment&lt;byte&gt; ReadBytesSegment(int count)  Parameters​ Type\tName\tDescriptionSystem.Int32\tcount\t Returns​ Type\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\t "},{"title":"Class PooledNetworkReader","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/PooledNetworkReader","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class PooledNetworkReader","url":"docs/reference/Mirage.Serialization/PooledNetworkReader#methods","content":"CreateNew(Pool&lt;PooledNetworkReader&gt;)​ Declaration​ public static PooledNetworkReader CreateNew(Pool&lt;PooledNetworkReader&gt; pool)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.Pool&lt;Mirage.Serialization.PooledNetworkReader&gt;\tpool\t Returns​ Type\tDescriptionMirage.Serialization.PooledNetworkReader\t Release()​ Puts object back in Pool Declaration​ public void Release()  IDisposable.Dispose()​ Declaration​ void IDisposable.Dispose()  Dispose(Boolean)​ Declaration​ protected override void Dispose(bool disposing)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tdisposing\t "},{"title":"Class PooledNetworkWriter","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/PooledNetworkWriter","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class PooledNetworkWriter","url":"docs/reference/Mirage.Serialization/PooledNetworkWriter#methods","content":"CreateNew(Int32, Pool&lt;PooledNetworkWriter&gt;)​ Declaration​ public static PooledNetworkWriter CreateNew(int bufferSize, Pool&lt;PooledNetworkWriter&gt; pool)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbufferSize Mirage.SocketLayer.Pool&lt;Mirage.Serialization.PooledNetworkWriter&gt;\tpool\t Returns​ Type\tDescriptionMirage.Serialization.PooledNetworkWriter\t Release()​ Puts object back in Pool Declaration​ public void Release()  IDisposable.Dispose()​ Declaration​ void IDisposable.Dispose()  "},{"title":"Class NetworkWriter","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/NetworkWriter","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NetworkWriter","url":"docs/reference/Mirage.Serialization/NetworkWriter#constructors","content":"NetworkWriter(Int32)​ Declaration​ public NetworkWriter(int minByteCapacity)  Parameters​ Type\tName\tDescriptionSystem.Int32\tminByteCapacity\t NetworkWriter(Int32, Boolean)​ Declaration​ public NetworkWriter(int minByteCapacity, bool allowResize)  Parameters​ Type\tName\tDescriptionSystem.Int32\tminByteCapacity System.Boolean\tallowResize\t "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkWriter","url":"docs/reference/Mirage.Serialization/NetworkWriter#properties","content":"ByteCapacity​ Size limit of buffer Declaration​ public int ByteCapacity { get; }  ByteLength​ Current rounded up to nearest multiple of 8 To set byte position use multiple by 8 Declaration​ public int ByteLength { get; }  BitPosition​ Current bit position for writing to buffer To set bit position use Declaration​ public int BitPosition { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkWriter","url":"docs/reference/Mirage.Serialization/NetworkWriter#methods","content":"Finalize()​ Declaration​ protected void Finalize()  Reset()​ Declaration​ public void Reset()  ToArray()​ Copies internal buffer to new Array To reduce Allocations use instead Declaration​ public byte[] ToArray()  Returns​ Type\tDescriptionSystem.Byte[]\t ToArraySegment()​ Declaration​ public ArraySegment&lt;byte&gt; ToArraySegment()  Returns​ Type\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\t PadToByte()​ Declaration​ public void PadToByte()  WriteBoolean(Boolean)​ Declaration​ public void WriteBoolean(bool value)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tvalue\t WriteBoolean(UInt64)​ Writes first bit of value to buffer Declaration​ public void WriteBoolean(ulong value)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tvalue\t WriteSByte(SByte)​ Declaration​ public void WriteSByte(sbyte value)  Parameters​ Type\tName\tDescriptionSystem.SByte\tvalue\t WriteByte(Byte)​ Declaration​ public void WriteByte(byte value)  Parameters​ Type\tName\tDescriptionSystem.Byte\tvalue\t WriteInt16(Int16)​ Declaration​ public void WriteInt16(short value)  Parameters​ Type\tName\tDescriptionSystem.Int16\tvalue\t WriteUInt16(UInt16)​ Declaration​ public void WriteUInt16(ushort value)  Parameters​ Type\tName\tDescriptionSystem.UInt16\tvalue\t WriteInt32(Int32)​ Declaration​ public void WriteInt32(int value)  Parameters​ Type\tName\tDescriptionSystem.Int32\tvalue\t WriteUInt32(UInt32)​ Declaration​ public void WriteUInt32(uint value)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tvalue\t WriteInt64(Int64)​ Declaration​ public void WriteInt64(long value)  Parameters​ Type\tName\tDescriptionSystem.Int64\tvalue\t WriteUInt64(UInt64)​ Declaration​ public void WriteUInt64(ulong value)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tvalue\t WriteSingle(Single)​ Declaration​ public void WriteSingle(float value)  Parameters​ Type\tName\tDescriptionSystem.Single\tvalue\t WriteDouble(Double)​ Declaration​ public void WriteDouble(double value)  Parameters​ Type\tName\tDescriptionSystem.Double\tvalue\t Write(UInt64, Int32)​ Declaration​ public void Write(ulong value, int bits)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tvalue System.Int32\tbits\t WriteAtBytePosition(UInt64, Int32, Int32)​ Same as expect position given is in bytes instead of bits WARNING: When writing to bytes instead of bits make sure you are able to read at the right position when deserializing as it might cause data to be misaligned Declaration​ public void WriteAtBytePosition(ulong value, int bits, int bytePosition)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tvalue System.Int32\tbits System.Int32\tbytePosition\t WriteAtPosition(UInt64, Int32, Int32)​ Writes n bits from value to bitPosition This methods can be used to go back to a previous position to write length or other flags to the buffer after other data has been written WARNING: This method does not change the internal position so will not change the overall length if writing past internal position Declaration​ public void WriteAtPosition(ulong value, int bits, int bitPosition)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tvalue\tvalue to write System.Int32\tbits\tnumber of bits in value to write System.Int32\tbitPosition\twhere to write bits MoveBitPosition(Int32)​ Moves the internal bit position For most usecases it is safer to use WARNING: When writing to earlier position make sure to move position back to end of buffer after writing because position is also used as length Declaration​ public void MoveBitPosition(int newPosition)  Parameters​ Type\tName\tDescriptionSystem.Int32\tnewPosition\t PadAndCopy&lt;T&gt;(T)​ Moves position to nearest byte then copies struct to that position Declaration​ public void PadAndCopy&lt;T&gt;(in T value) where T : struct  Parameters​ Type\tName\tDescriptionT\tvalue\t WriteBytes(Byte[], Int32, Int32)​ Moves position to nearest byte then writes bytes to that position Declaration​ public void WriteBytes(byte[] array, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tarray System.Int32\toffset System.Int32\tlength\t CopyFromWriter(NetworkWriter)​ Copies all data from other Declaration​ public void CopyFromWriter(NetworkWriter other)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\tother\t CopyFromWriter(NetworkWriter, Int32, Int32)​ Copies bitLength bits from other starting at otherBitPosition Declaration​ public void CopyFromWriter(NetworkWriter other, int otherBitPosition, int bitLength)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\tother System.Int32\totherBitPosition System.Int32\tbitLength\t CopyFromPointer(Void*, Int32, Int32)​ Copies bitLength bits from ptr starting at otherBitPosition Declaration​ public void CopyFromPointer(void *ptr, int otherBitPosition, int bitLength)  Parameters​ Type\tName\tDescriptionSystem.Void*\tptr System.Int32\totherBitPosition System.Int32\tbitLength\t "},{"title":"Class QuaternionPackAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/QuaternionPackAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class QuaternionPackAttribute","url":"docs/reference/Mirage.Serialization/QuaternionPackAttribute#constructors","content":"QuaternionPackAttribute(Int32)​ Declaration​ public QuaternionPackAttribute(int bitPerElement = 9)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbitPerElement\t "},{"title":"Class QuaternionPacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/QuaternionPacker","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class QuaternionPacker","url":"docs/reference/Mirage.Serialization/QuaternionPacker#constructors","content":"QuaternionPacker(Int32)​ Declaration​ public QuaternionPacker(int quaternionBitLength = 10)  Parameters​ Type\tName\tDescriptionSystem.Int32\tquaternionBitLength\t10 per &quot;smallest 3&quot; is good enough for most people "},{"title":"Fields​","type":1,"pageTitle":"Class QuaternionPacker","url":"docs/reference/Mirage.Serialization/QuaternionPacker#fields","content":"Default9​ Default packer using 9 bits per element, 29 bits total Declaration​ public static readonly QuaternionPacker Default9  Default10​ Default packer using 10 bits per element, 32 bits total Declaration​ public static readonly QuaternionPacker Default10  "},{"title":"Methods​","type":1,"pageTitle":"Class QuaternionPacker","url":"docs/reference/Mirage.Serialization/QuaternionPacker#methods","content":"PackAsInt(Quaternion)​ Declaration​ public static uint PackAsInt(Quaternion value)  Parameters​ Type\tName\tDescriptionQuaternion\tvalue\t Returns​ Type\tDescriptionSystem.UInt32\t UnpackFromInt(UInt32)​ Declaration​ public static Quaternion UnpackFromInt(uint value)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tvalue\t Returns​ Type\tDescriptionQuaternion\t Pack(NetworkWriter, Quaternion)​ Declaration​ public void Pack(NetworkWriter writer, Quaternion value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Quaternion\tvalue\t Pack(Quaternion)​ Declaration​ public ulong Pack(Quaternion value)  Parameters​ Type\tName\tDescriptionQuaternion\tvalue\t Returns​ Type\tDescriptionSystem.UInt64\t Unpack(NetworkReader)​ Declaration​ public Quaternion Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionQuaternion\t Unpack(UInt64)​ Declaration​ public Quaternion Unpack(ulong combine)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tcombine\t Returns​ Type\tDescriptionQuaternion\t "},{"title":"Class Reader<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/Reader-1","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class Reader<T>","url":"docs/reference/Mirage.Serialization/Reader-1#properties","content":"Read​ Declaration​ public static Func&lt;NetworkReader, T&gt; Read { set; }  "},{"title":"Class StringExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/StringExtensions","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class StringExtensions","url":"docs/reference/Mirage.Serialization/StringExtensions#properties","content":"MaxStringLength​ Maximum number of bytes a string can be serialized to. This is to avoid allocation attack. Defaults MTU, 1300 NOTE: this is byte size after Encoding IMPORTANT: Setting this property will resize the internal buffer. Do not call in hotpath. It is best to call once when you start the application Declaration​ public static int MaxStringLength { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Class StringExtensions","url":"docs/reference/Mirage.Serialization/StringExtensions#methods","content":"WriteString(NetworkWriter, String)​ Declaration​ public static void WriteString(this NetworkWriter writer, string value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.String\tvalue\tstring or null ReadString(NetworkReader)​ Declaration​ public static string ReadString(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.String\tstring or null WriteString(NetworkWriter, String, Encoding)​ Declaration​ public static void WriteString(this NetworkWriter writer, string value, Encoding encoding)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.String\tvalue\tstring or null System.Text.Encoding\tencoding\tUse this for encoding other than the default (UTF8). Make sure to use same encoding for ReadString ReadString(NetworkReader, Encoding)​ Declaration​ public static string ReadString(this NetworkReader reader, Encoding encoding)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Text.Encoding\tencoding\tUse this for encoding other than the default (UTF8). Make sure to use same encoding for WriterString Returns​ Type\tDescriptionSystem.String\tstring or null "},{"title":"Class VarDoublePacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarDoublePacker","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class VarDoublePacker","url":"docs/reference/Mirage.Serialization/VarDoublePacker#constructors","content":"VarDoublePacker(Double, Int32)​ Declaration​ public VarDoublePacker(double precision, int blockSize)  Parameters​ Type\tName\tDescriptionSystem.Double\tprecision System.Int32\tblockSize\t "},{"title":"Methods​","type":1,"pageTitle":"Class VarDoublePacker","url":"docs/reference/Mirage.Serialization/VarDoublePacker#methods","content":"Pack(NetworkWriter, Double)​ Declaration​ public void Pack(NetworkWriter writer, double value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Double\tvalue\t Unpack(NetworkReader)​ Declaration​ public double Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Double\t "},{"title":"Class VarIntAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarIntAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class VarIntAttribute","url":"docs/reference/Mirage.Serialization/VarIntAttribute#constructors","content":"VarIntAttribute(UInt64, UInt64)​ Declaration​ public VarIntAttribute(ulong smallMax, ulong mediumMax)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tsmallMax System.UInt64\tmediumMax\t VarIntAttribute(UInt64, UInt64, UInt64, Boolean)​ Declaration​ public VarIntAttribute(ulong smallMax, ulong mediumMax, ulong largeMax, bool throwIfOverLarge = true)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tsmallMax System.UInt64\tmediumMax System.UInt64\tlargeMax System.Boolean\tthrowIfOverLarge\t "},{"title":"Class VarFloatPacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarFloatPacker","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class VarFloatPacker","url":"docs/reference/Mirage.Serialization/VarFloatPacker#constructors","content":"VarFloatPacker(Single, Int32)​ Declaration​ public VarFloatPacker(float precision, int blockSize)  Parameters​ Type\tName\tDescriptionSystem.Single\tprecision System.Int32\tblockSize\t "},{"title":"Methods​","type":1,"pageTitle":"Class VarFloatPacker","url":"docs/reference/Mirage.Serialization/VarFloatPacker#methods","content":"Pack(NetworkWriter, Single)​ Declaration​ public void Pack(NetworkWriter writer, float value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Single\tvalue\t Unpack(NetworkReader)​ Declaration​ public float Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Single\t "},{"title":"Class SystemTypesExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/SystemTypesExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class SystemTypesExtensions","url":"docs/reference/Mirage.Serialization/SystemTypesExtensions#methods","content":"WriteByteExtension(NetworkWriter, Byte)​ Declaration​ public static void WriteByteExtension(this NetworkWriter writer, byte value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Byte\tvalue\t WriteSByteExtension(NetworkWriter, SByte)​ Declaration​ public static void WriteSByteExtension(this NetworkWriter writer, sbyte value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.SByte\tvalue\t WriteChar(NetworkWriter, Char)​ Declaration​ public static void WriteChar(this NetworkWriter writer, char value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Char\tvalue\t WriteBooleanExtension(NetworkWriter, Boolean)​ Declaration​ public static void WriteBooleanExtension(this NetworkWriter writer, bool value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Boolean\tvalue\t WriteUInt16Extension(NetworkWriter, UInt16)​ Declaration​ public static void WriteUInt16Extension(this NetworkWriter writer, ushort value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.UInt16\tvalue\t WriteInt16Extension(NetworkWriter, Int16)​ Declaration​ public static void WriteInt16Extension(this NetworkWriter writer, short value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Int16\tvalue\t WriteSingleConverter(NetworkWriter, Single)​ Declaration​ public static void WriteSingleConverter(this NetworkWriter writer, float value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Single\tvalue\t WriteDoubleConverter(NetworkWriter, Double)​ Declaration​ public static void WriteDoubleConverter(this NetworkWriter writer, double value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Double\tvalue\t WriteDecimalConverter(NetworkWriter, Decimal)​ Declaration​ public static void WriteDecimalConverter(this NetworkWriter writer, decimal value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Decimal\tvalue\t WriteGuid(NetworkWriter, Guid)​ Declaration​ public static void WriteGuid(this NetworkWriter writer, Guid value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Guid\tvalue\t WriteNullable&lt;T&gt;(NetworkWriter, Nullable&lt;T&gt;)​ Declaration​ [WeaverSerializeCollection] public static void WriteNullable&lt;T&gt;(this NetworkWriter writer, T? nullable) where T : struct  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Nullable&lt;T&gt;\tnullable\t ReadByteExtension(NetworkReader)​ Declaration​ public static byte ReadByteExtension(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Byte\t ReadSByteExtension(NetworkReader)​ Declaration​ public static sbyte ReadSByteExtension(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.SByte\t ReadChar(NetworkReader)​ Declaration​ public static char ReadChar(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Char\t ReadBooleanExtension(NetworkReader)​ Declaration​ public static bool ReadBooleanExtension(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Boolean\t ReadInt16Extension(NetworkReader)​ Declaration​ public static short ReadInt16Extension(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Int16\t ReadUInt16Extension(NetworkReader)​ Declaration​ public static ushort ReadUInt16Extension(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.UInt16\t ReadSingleConverter(NetworkReader)​ Declaration​ public static float ReadSingleConverter(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Single\t ReadDoubleConverter(NetworkReader)​ Declaration​ public static double ReadDoubleConverter(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Double\t ReadDecimalConverter(NetworkReader)​ Declaration​ public static decimal ReadDecimalConverter(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Decimal\t ReadGuid(NetworkReader)​ Declaration​ public static Guid ReadGuid(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Guid\t ReadNullable&lt;T&gt;(NetworkReader)​ Declaration​ [WeaverSerializeCollection] public static T? ReadNullable&lt;T&gt;(this NetworkReader reader) where T : struct  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.Nullable&lt;T&gt;\t "},{"title":"Class UnityTypesExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/UnityTypesExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class UnityTypesExtensions","url":"docs/reference/Mirage.Serialization/UnityTypesExtensions#methods","content":"WriteVector2(NetworkWriter, Vector2)​ Declaration​ public static void WriteVector2(this NetworkWriter writer, Vector2 value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector2\tvalue\t WriteVector3(NetworkWriter, Vector3)​ Declaration​ public static void WriteVector3(this NetworkWriter writer, Vector3 value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector3\tvalue\t WriteVector4(NetworkWriter, Vector4)​ Declaration​ public static void WriteVector4(this NetworkWriter writer, Vector4 value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector4\tvalue\t WriteVector2Int(NetworkWriter, Vector2Int)​ Declaration​ public static void WriteVector2Int(this NetworkWriter writer, Vector2Int value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector2Int\tvalue\t WriteVector3Int(NetworkWriter, Vector3Int)​ Declaration​ public static void WriteVector3Int(this NetworkWriter writer, Vector3Int value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector3Int\tvalue\t WriteColor(NetworkWriter, Color)​ Declaration​ public static void WriteColor(this NetworkWriter writer, Color value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Color\tvalue\t WriteColor32(NetworkWriter, Color32)​ Declaration​ public static void WriteColor32(this NetworkWriter writer, Color32 value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Color32\tvalue\t WriteRect(NetworkWriter, Rect)​ Declaration​ public static void WriteRect(this NetworkWriter writer, Rect value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Rect\tvalue\t WritePlane(NetworkWriter, Plane)​ Declaration​ public static void WritePlane(this NetworkWriter writer, Plane value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Plane\tvalue\t WriteRay(NetworkWriter, Ray)​ Declaration​ public static void WriteRay(this NetworkWriter writer, Ray value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Ray\tvalue\t WriteMatrix4X4(NetworkWriter, Matrix4x4)​ Declaration​ public static void WriteMatrix4X4(this NetworkWriter writer, Matrix4x4 value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Matrix4x4\tvalue\t ReadVector2(NetworkReader)​ Declaration​ public static Vector2 ReadVector2(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector2\t ReadVector3(NetworkReader)​ Declaration​ public static Vector3 ReadVector3(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector3\t ReadVector4(NetworkReader)​ Declaration​ public static Vector4 ReadVector4(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector4\t ReadVector2Int(NetworkReader)​ Declaration​ public static Vector2Int ReadVector2Int(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector2Int\t ReadVector3Int(NetworkReader)​ Declaration​ public static Vector3Int ReadVector3Int(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector3Int\t ReadColor(NetworkReader)​ Declaration​ public static Color ReadColor(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionColor\t ReadColor32(NetworkReader)​ Declaration​ public static Color32 ReadColor32(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionColor32\t ReadRect(NetworkReader)​ Declaration​ public static Rect ReadRect(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionRect\t ReadPlane(NetworkReader)​ Declaration​ public static Plane ReadPlane(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionPlane\t ReadRay(NetworkReader)​ Declaration​ public static Ray ReadRay(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionRay\t ReadMatrix4x4(NetworkReader)​ Declaration​ public static Matrix4x4 ReadMatrix4x4(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMatrix4x4\t "},{"title":"Class VarIntBlocksAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarIntBlocksAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class VarIntBlocksAttribute","url":"docs/reference/Mirage.Serialization/VarIntBlocksAttribute#constructors","content":"VarIntBlocksAttribute(Int32)​ Bit size of each block how many bits per size bits, eg if size = 6 then values under 2^6 will be sent at 7 bits, values under 2^12 sent as 14 bits, etc Declaration​ public VarIntBlocksAttribute(int blockSize)  Parameters​ Type\tName\tDescriptionSystem.Int32\tblockSize\tValue should be between 1 and 64 "},{"title":"Class VarIntBlocksPacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarIntBlocksPacker","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class VarIntBlocksPacker","url":"docs/reference/Mirage.Serialization/VarIntBlocksPacker#methods","content":"Pack(NetworkWriter, UInt64, Int32)​ Declaration​ public static void Pack(NetworkWriter writer, ulong value, int blockSize)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.UInt64\tvalue System.Int32\tblockSize\t Unpack(NetworkReader, Int32)​ Declaration​ public static ulong Unpack(NetworkReader reader, int blockSize)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Int32\tblockSize\t Returns​ Type\tDescriptionSystem.UInt64\t "},{"title":"Class VarIntPacker","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarIntPacker","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class VarIntPacker","url":"docs/reference/Mirage.Serialization/VarIntPacker#constructors","content":"VarIntPacker(UInt64, UInt64)​ Declaration​ public VarIntPacker(ulong smallValue, ulong mediumValue)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tsmallValue System.UInt64\tmediumValue\t VarIntPacker(UInt64, UInt64, UInt64, Boolean)​ Declaration​ public VarIntPacker(ulong smallValue, ulong mediumValue, ulong largeValue, bool throwIfOverLarge = true)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tsmallValue System.UInt64\tmediumValue System.UInt64\tlargeValue System.Boolean\tthrowIfOverLarge\t "},{"title":"Methods​","type":1,"pageTitle":"Class VarIntPacker","url":"docs/reference/Mirage.Serialization/VarIntPacker#methods","content":"FromBitCount(Int32, Int32)​ Declaration​ public static VarIntPacker FromBitCount(int smallBits, int mediumBits)  Parameters​ Type\tName\tDescriptionSystem.Int32\tsmallBits System.Int32\tmediumBits\t Returns​ Type\tDescriptionMirage.Serialization.VarIntPacker\t FromBitCount(Int32, Int32, Int32, Boolean)​ Declaration​ public static VarIntPacker FromBitCount(int smallBits, int mediumBits, int largeBits, bool throwIfOverLarge = true)  Parameters​ Type\tName\tDescriptionSystem.Int32\tsmallBits System.Int32\tmediumBits System.Int32\tlargeBits System.Boolean\tthrowIfOverLarge\t Returns​ Type\tDescriptionMirage.Serialization.VarIntPacker\t PackUlong(NetworkWriter, UInt64)​ Declaration​ public void PackUlong(NetworkWriter writer, ulong value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.UInt64\tvalue\t PackUint(NetworkWriter, UInt32)​ Declaration​ public void PackUint(NetworkWriter writer, uint value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.UInt32\tvalue\t PackUshort(NetworkWriter, UInt16)​ Declaration​ public void PackUshort(NetworkWriter writer, ushort value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.UInt16\tvalue\t UnpackUlong(NetworkReader)​ Declaration​ public ulong UnpackUlong(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.UInt64\t UnpackUint(NetworkReader)​ Declaration​ public uint UnpackUint(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.UInt32\t UnpackUshort(NetworkReader)​ Declaration​ public ushort UnpackUshort(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionSystem.UInt16\t "},{"title":"Class Vector2PackAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/Vector2PackAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Vector2PackAttribute","url":"docs/reference/Mirage.Serialization/Vector2PackAttribute#constructors","content":"Vector2PackAttribute(Single, Single, Single, Single)​ Declaration​ public Vector2PackAttribute(float xMax, float yMax, float xPrecision, float yPrecision)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\txPrecision System.Single\tyPrecision\t Vector2PackAttribute(Single, Single, Single)​ Declaration​ public Vector2PackAttribute(float xMax, float yMax, float precision)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\tprecision\t Vector2PackAttribute(Single, Single, Int32, Int32)​ Declaration​ public Vector2PackAttribute(float xMax, float yMax, int xBitCount, int yBitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Int32\txBitCount System.Int32\tyBitCount\t Vector2PackAttribute(Single, Single, Int32)​ Declaration​ public Vector2PackAttribute(float xMax, float yMax, int bitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Int32\tbitCount\t "},{"title":"Class VarVector2Packer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarVector2Packer","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class VarVector2Packer","url":"docs/reference/Mirage.Serialization/VarVector2Packer#constructors","content":"VarVector2Packer(Vector2, Int32)​ Declaration​ public VarVector2Packer(Vector2 precision, int blocksize)  Parameters​ Type\tName\tDescriptionVector2\tprecision System.Int32\tblocksize\t "},{"title":"Methods​","type":1,"pageTitle":"Class VarVector2Packer","url":"docs/reference/Mirage.Serialization/VarVector2Packer#methods","content":"Pack(NetworkWriter, Vector2)​ Declaration​ public void Pack(NetworkWriter writer, Vector2 position)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector2\tposition\t Unpack(NetworkReader)​ Declaration​ public Vector2 Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector2\t "},{"title":"Class VarVector3Packer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/VarVector3Packer","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class VarVector3Packer","url":"docs/reference/Mirage.Serialization/VarVector3Packer#constructors","content":"VarVector3Packer(Vector3, Int32)​ Declaration​ public VarVector3Packer(Vector3 precision, int blocksize)  Parameters​ Type\tName\tDescriptionVector3\tprecision System.Int32\tblocksize\t "},{"title":"Methods​","type":1,"pageTitle":"Class VarVector3Packer","url":"docs/reference/Mirage.Serialization/VarVector3Packer#methods","content":"Pack(NetworkWriter, Vector3)​ Declaration​ public void Pack(NetworkWriter writer, Vector3 position)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector3\tposition\t Unpack(NetworkReader)​ Declaration​ public Vector3 Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector3\t "},{"title":"Class Vector3PackAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/Vector3PackAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Vector3PackAttribute","url":"docs/reference/Mirage.Serialization/Vector3PackAttribute#constructors","content":"Vector3PackAttribute(Single, Single, Single, Single, Single, Single)​ Declaration​ public Vector3PackAttribute(float xMax, float yMax, float zMax, float xPrecision, float yPrecision, float zPrecision)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\tzMax System.Single\txPrecision System.Single\tyPrecision System.Single\tzPrecision\t Vector3PackAttribute(Single, Single, Single, Single)​ Declaration​ public Vector3PackAttribute(float xMax, float yMax, float zMax, float precision)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\tzMax System.Single\tprecision\t Vector3PackAttribute(Single, Single, Single, Int32, Int32, Int32)​ Declaration​ public Vector3PackAttribute(float xMax, float yMax, float zMax, int xBitCount, int yBitCount, int zBitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\tzMax System.Int32\txBitCount System.Int32\tyBitCount System.Int32\tzBitCount\t Vector3PackAttribute(Single, Single, Single, Int32)​ Declaration​ public Vector3PackAttribute(float xMax, float yMax, float zMax, int bitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\tzMax System.Int32\tbitCount\t "},{"title":"Class Vector2Packer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/Vector2Packer","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Vector2Packer","url":"docs/reference/Mirage.Serialization/Vector2Packer#constructors","content":"Vector2Packer(Single, Single, Int32, Int32)​ Declaration​ public Vector2Packer(float xMax, float yMax, int xBitCount, int yBitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Int32\txBitCount System.Int32\tyBitCount\t Vector2Packer(Single, Single, Single, Single)​ Declaration​ public Vector2Packer(float xMax, float yMax, float xPrecision, float yPrecision)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\txPrecision System.Single\tyPrecision\t Vector2Packer(Vector2, Vector2)​ Declaration​ public Vector2Packer(Vector2 max, Vector2 precision)  Parameters​ Type\tName\tDescriptionVector2\tmax Vector2\tprecision\t "},{"title":"Methods​","type":1,"pageTitle":"Class Vector2Packer","url":"docs/reference/Mirage.Serialization/Vector2Packer#methods","content":"Pack(NetworkWriter, Vector2)​ Declaration​ public void Pack(NetworkWriter writer, Vector2 value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector2\tvalue\t Unpack(NetworkReader)​ Declaration​ public Vector2 Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector2\t "},{"title":"Class WeaverIgnoreAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/WeaverIgnoreAttribute","content":"Class WeaverIgnoreAttribute Tells Weaver to ignore an Extension method Inheritance​ System.Object System.Attribute Inherited Members​ Show Syntax​ [AttributeUsage(AttributeTargets.Method)] public sealed class WeaverIgnoreAttribute : Attribute, _Attribute ","keywords":""},{"title":"Class Vector3Packer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/Vector3Packer","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Vector3Packer","url":"docs/reference/Mirage.Serialization/Vector3Packer#constructors","content":"Vector3Packer(Single, Single, Single, Int32, Int32, Int32)​ Declaration​ public Vector3Packer(float xMax, float yMax, float zMax, int xBitCount, int yBitCount, int zBitCount)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\tzMax System.Int32\txBitCount System.Int32\tyBitCount System.Int32\tzBitCount\t Vector3Packer(Single, Single, Single, Single, Single, Single)​ Declaration​ public Vector3Packer(float xMax, float yMax, float zMax, float xPrecision, float yPrecision, float zPrecision)  Parameters​ Type\tName\tDescriptionSystem.Single\txMax System.Single\tyMax System.Single\tzMax System.Single\txPrecision System.Single\tyPrecision System.Single\tzPrecision\t Vector3Packer(Vector3, Vector3)​ Declaration​ public Vector3Packer(Vector3 max, Vector3 precision)  Parameters​ Type\tName\tDescriptionVector3\tmax Vector3\tprecision\t "},{"title":"Methods​","type":1,"pageTitle":"Class Vector3Packer","url":"docs/reference/Mirage.Serialization/Vector3Packer#methods","content":"Pack(NetworkWriter, Vector3)​ Declaration​ public void Pack(NetworkWriter writer, Vector3 value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector3\tvalue\t Unpack(NetworkReader)​ Declaration​ public Vector3 Unpack(NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionVector3\t "},{"title":"Class WeaverWriteAsGenericAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/WeaverWriteAsGenericAttribute","content":"Class WeaverWriteAsGenericAttribute Tells Weaver to serialize a type as generic instead of creating a custom functions. Use this when you have created and assigned your own Read/Write functions or when you can't use extension methods for types and need to manually assign them. This will cause Weaver to use the and generic functions instead of creating new ones. You must set these functions manually when using this attribute. Inheritance​ System.Object System.Attribute Inherited Members​ Show Syntax​ [AttributeUsage(AttributeTargets.Class | AttributeTargets.Enum | AttributeTargets.Interface | AttributeTargets.Struct)] public sealed class WeaverWriteAsGenericAttribute : Attribute, _Attribute ","keywords":""},{"title":"Class Writer<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/Writer-1","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class Writer<T>","url":"docs/reference/Mirage.Serialization/Writer-1#properties","content":"Write​ Declaration​ public static Action&lt;NetworkWriter, T&gt; Write { set; }  "},{"title":"Class ZigZag","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/ZigZag","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class ZigZag","url":"docs/reference/Mirage.Serialization/ZigZag#methods","content":"Encode(Int32)​ Declaration​ public static uint Encode(int v)  Parameters​ Type\tName\tDescriptionSystem.Int32\tv\t Returns​ Type\tDescriptionSystem.UInt32\t Encode(Int64)​ Declaration​ public static ulong Encode(long v)  Parameters​ Type\tName\tDescriptionSystem.Int64\tv\t Returns​ Type\tDescriptionSystem.UInt64\t Decode(UInt32)​ Declaration​ public static int Decode(uint v)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tv\t Returns​ Type\tDescriptionSystem.Int32\t Decode(UInt64)​ Declaration​ public static long Decode(ulong v)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tv\t Returns​ Type\tDescriptionSystem.Int64\t "},{"title":"Class WeaverSerializeCollectionAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/WeaverSerializeCollectionAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class WeaverSerializeCollectionAttribute","url":"docs/reference/Mirage.Serialization/WeaverSerializeCollectionAttribute#constructors","content":"WeaverSerializeCollectionAttribute()​ Declaration​ public WeaverSerializeCollectionAttribute()  "},{"title":"Class ZigZagEncodeAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Serialization/ZigZagEncodeAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class ZigZagEncodeAttribute","url":"docs/reference/Mirage.Serialization/ZigZagEncodeAttribute#constructors","content":"ZigZagEncodeAttribute()​ Declaration​ public ZigZagEncodeAttribute()  "},{"title":"Mirage.SocketLayer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.SocketLayer","url":"docs/reference/Mirage.SocketLayer/#classes","content":"AckSystem​ AckSystem.ReliablePacket​ ArrayBatch​ AutoCompleteToken​ Token that invokes immediately Batch​ BufferFullException​ ByteBuffer​ Warpper around a byte[] that belongs to a ByteUtils​ Config​ ConnectionExtensions​ INotifyCallBackExtensions​ MessageSizeException​ Metrics​ NoConnectionException​ NotifyToken​ Object returned from with events for when packet is Lost or Delivered NotifyTokenException​ Peer​ Controls flow of data in/out of mirage, Uses Pool&lt;T&gt;​ Holds a collection of so they can be re-used without allocations ReliableBatch​ RingBuffer&lt;T&gt;​ Sequencer​ A sequence generator that can wrap. For example a 2 bit sequencer would generate the following numbers: 0,1,2,3,0,1,2,3,0,1,2,3... SocketFactory​ Creates an instance of SocketLayerException​ Base Exception by all errors from using SocketLayer "},{"title":"Structs​","type":1,"pageTitle":"Mirage.SocketLayer","url":"docs/reference/Mirage.SocketLayer/#structs","content":"AckSystem.ReliableReceived​ Metrics.Frame​ PoolMetrics​ "},{"title":"Interfaces​","type":1,"pageTitle":"Mirage.SocketLayer","url":"docs/reference/Mirage.SocketLayer/#interfaces","content":"IConnection​ Connection for IDataHandler​ Handles data from SocketLayer A high level script should implement this interface give it to Peer when it is created IEndPoint​ Object that can be used as an endpoint for and Implementation of this should override and so that 2 instance wil be equal if they have the same address internally When a new connection is received by Peer a copy of this endpoint will be created and given to that connection. On future received the incoming endpoint will be compared to active connections inside a dictionary IHasAddress​ Can be added to SocketFactory that have an Address Setting IHasPort​ Can be added to SocketFactory that have a Port Setting INotifyCallBack​ Can be passed into and methods will be invoked when notify is delivered or lost See the Notify Example on how to use this interface INotifyToken​ Object returned from with events for when packet is Lost or Delivered IPeer​ IRawConnection​ A connection that can send data directly to sockets Only things inside socket layer should be sending raw packets. Others should use the methods inside ISocket​ Link between Mirage and the outside world ITime​ "},{"title":"Enums​","type":1,"pageTitle":"Mirage.SocketLayer","url":"docs/reference/Mirage.SocketLayer/#enums","content":"Commands​ Small message used to control a connection and Commands uses their own byte/enum to split up the flow and add struture to the code. ConnectionState​ DisconnectReason​ Reason why a connection was disconnected PacketType​ RejectReason​ Reason for reject sent from server "},{"title":"Delegates​","type":1,"pageTitle":"Mirage.SocketLayer","url":"docs/reference/Mirage.SocketLayer/#delegates","content":"Pool&lt;T&gt;.CreateNewItem​ Pool&lt;T&gt;.CreateNewItemNoCount​ "},{"title":"Struct AckSystem.ReliableReceived","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliableReceived","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct AckSystem.ReliableReceived","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliableReceived#constructors","content":"ReliableReceived(ByteBuffer, Int32, Boolean)​ Declaration​ public ReliableReceived(ByteBuffer buffer, int length, bool isFragment)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.ByteBuffer\tbuffer System.Int32\tlength System.Boolean\tisFragment\t "},{"title":"Fields​","type":1,"pageTitle":"Struct AckSystem.ReliableReceived","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliableReceived#fields","content":"Buffer​ Declaration​ public readonly ByteBuffer Buffer  Length​ Declaration​ public readonly int Length  IsFragment​ Declaration​ public readonly bool IsFragment  "},{"title":"Properties​","type":1,"pageTitle":"Struct AckSystem.ReliableReceived","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliableReceived#properties","content":"FragmentIndex​ Declaration​ public int FragmentIndex { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Struct AckSystem.ReliableReceived","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliableReceived#methods","content":"Equals(AckSystem.ReliableReceived)​ Declaration​ public bool Equals(AckSystem.ReliableReceived other)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.AckSystem.ReliableReceived\tother\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Class AckSystem.ReliablePacket","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliablePacket","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class AckSystem.ReliablePacket","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliablePacket#fields","content":"LastSequence​ Declaration​ public ushort LastSequence  Length​ Declaration​ public int Length  Buffer​ Declaration​ public ByteBuffer Buffer  Order​ Declaration​ public ushort Order  Sequences​ Declaration​ public readonly List&lt;ushort&gt; Sequences  "},{"title":"Methods​","type":1,"pageTitle":"Class AckSystem.ReliablePacket","url":"docs/reference/Mirage.SocketLayer/AckSystem.ReliablePacket#methods","content":"OnSend(UInt16)​ Declaration​ public void OnSend(ushort sequence)  Parameters​ Type\tName\tDescriptionSystem.UInt16\tsequence\t OnAck()​ Declaration​ public void OnAck()  Setup(UInt16, ByteBuffer, Int32)​ Declaration​ public void Setup(ushort order, ByteBuffer buffer, int length)  Parameters​ Type\tName\tDescriptionSystem.UInt16\torder Mirage.SocketLayer.ByteBuffer\tbuffer System.Int32\tlength\t GetHashCode()​ Declaration​ public override int GetHashCode()  Returns​ Type\tDescriptionSystem.Int32\t Equals(Object)​ Declaration​ public override bool Equals(object obj)  Parameters​ Type\tName\tDescriptionSystem.Object\tobj\t Returns​ Type\tDescriptionSystem.Boolean\t CreateNew(Pool&lt;AckSystem.ReliablePacket&gt;)​ Declaration​ public static AckSystem.ReliablePacket CreateNew(Pool&lt;AckSystem.ReliablePacket&gt; pool)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.Pool&lt;Mirage.SocketLayer.AckSystem.ReliablePacket&gt;\tpool\t Returns​ Type\tDescriptionMirage.SocketLayer.AckSystem.ReliablePacket\t "},{"title":"Class ArrayBatch","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ArrayBatch","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class ArrayBatch","url":"docs/reference/Mirage.SocketLayer/ArrayBatch#constructors","content":"ArrayBatch(Int32, Action&lt;Byte[], Int32&gt;, PacketType)​ Declaration​ public ArrayBatch(int maxPacketSize, Action&lt;byte[], int&gt; send, PacketType reliable)  Parameters​ Type\tName\tDescriptionSystem.Int32\tmaxPacketSize System.Action&lt;System.Byte[], System.Int32&gt;\tsend Mirage.SocketLayer.PacketType\treliable\t "},{"title":"Properties​","type":1,"pageTitle":"Class ArrayBatch","url":"docs/reference/Mirage.SocketLayer/ArrayBatch#properties","content":"Created​ Declaration​ protected override bool Created { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class ArrayBatch","url":"docs/reference/Mirage.SocketLayer/ArrayBatch#methods","content":"GetBatch()​ Declaration​ protected override byte[] GetBatch()  Returns​ Type\tDescriptionSystem.Byte[]\t GetBatchLength()​ Declaration​ protected override int GetBatchLength()  Returns​ Type\tDescriptionSystem.Int32\t CreateNewBatch()​ Declaration​ protected override void CreateNewBatch()  SendAndReset()​ Declaration​ protected override void SendAndReset()  "},{"title":"Class AutoCompleteToken","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/AutoCompleteToken","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class AutoCompleteToken","url":"docs/reference/Mirage.SocketLayer/AutoCompleteToken#constructors","content":"AutoCompleteToken()​ Declaration​ protected AutoCompleteToken()  "},{"title":"Fields​","type":1,"pageTitle":"Class AutoCompleteToken","url":"docs/reference/Mirage.SocketLayer/AutoCompleteToken#fields","content":"Instance​ this token just invokes event instantly, so only needs 1 instance to exist Declaration​ public static AutoCompleteToken Instance  "},{"title":"Class AckSystem","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/AckSystem","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class AckSystem","url":"docs/reference/Mirage.SocketLayer/AckSystem#constructors","content":"AckSystem(IRawConnection, Config, Int32, ITime, Pool&lt;ByteBuffer&gt;, ILogger, Metrics)​ Declaration​ public AckSystem(IRawConnection connection, Config config, int maxPacketSize, ITime time, Pool&lt;ByteBuffer&gt; bufferPool, ILogger logger = null, Metrics metrics = null)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IRawConnection\tconnection Mirage.SocketLayer.Config\tconfig System.Int32\tmaxPacketSize Mirage.SocketLayer.ITime\ttime Mirage.SocketLayer.Pool&lt;Mirage.SocketLayer.ByteBuffer&gt;\tbufferPool ILogger\tlogger Mirage.SocketLayer.Metrics\tmetrics\t "},{"title":"Fields​","type":1,"pageTitle":"Class AckSystem","url":"docs/reference/Mirage.SocketLayer/AckSystem#fields","content":"SEQUENCE_HEADER​ Declaration​ public const int SEQUENCE_HEADER = 13  NOTIFY_HEADER_SIZE​ PacketType, sequence, ack sequence, mask Declaration​ public const int NOTIFY_HEADER_SIZE = 13  RELIABLE_HEADER_SIZE​ PacketType, sequence, ack sequence, mask, order Declaration​ public const int RELIABLE_HEADER_SIZE = 15  ACK_HEADER_SIZE​ PacketType, ack sequence, mask Declaration​ public const int ACK_HEADER_SIZE = 11  FRAGMENT_INDEX_SIZE​ Declaration​ public const int FRAGMENT_INDEX_SIZE = 1  MIN_RELIABLE_HEADER_SIZE​ Smallest size a header for reliable packet, + 2 bytes per message Declaration​ public const int MIN_RELIABLE_HEADER_SIZE = 17  MIN_RELIABLE_FRAGMENT_HEADER_SIZE​ Smallest size a header for reliable packet, + 1 byte for fragment index Declaration​ public const int MIN_RELIABLE_FRAGMENT_HEADER_SIZE = 16  SizePerFragment​ Declaration​ public readonly int SizePerFragment  "},{"title":"Methods​","type":1,"pageTitle":"Class AckSystem","url":"docs/reference/Mirage.SocketLayer/AckSystem#methods","content":"Dispose()​ Declaration​ public void Dispose()  NextReliablePacket(out AckSystem.ReliableReceived)​ Gets next Reliable packet in order, packet consists for multiple messages[length, message, length, message, ...] Declaration​ public bool NextReliablePacket(out AckSystem.ReliableReceived packet)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.AckSystem.ReliableReceived\tpacket\t Returns​ Type\tDescriptionSystem.Boolean\ttrue if next packet is available GetNextFragment()​ Declaration​ public AckSystem.ReliableReceived GetNextFragment()  Returns​ Type\tDescriptionMirage.SocketLayer.AckSystem.ReliableReceived\t Update()​ Declaration​ public void Update()  SendNotify(Byte[], Int32, Int32)​ Use for non-alloc version Declaration​ public INotifyToken SendNotify(byte[] inPacket, int inOffset, int inLength)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tinPacket System.Int32\tinOffset System.Int32\tinLength\t Returns​ Type\tDescriptionMirage.SocketLayer.INotifyToken\t SendNotify(Byte[], Int32, Int32, INotifyCallBack)​ Declaration​ public void SendNotify(byte[] inPacket, int inOffset, int inLength, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tinPacket System.Int32\tinOffset System.Int32\tinLength Mirage.SocketLayer.INotifyCallBack\tcallBacks\t SendReliable(Byte[], Int32, Int32)​ Declaration​ public void SendReliable(byte[] message, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tmessage System.Int32\toffset System.Int32\tlength\t ReceiveNotify(Byte[], Int32)​ Receives incoming Notify packet Ignores duplicate or late packets Declaration​ public ArraySegment&lt;byte&gt; ReceiveNotify(byte[] packet, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\tlength\t Returns​ Type\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tdefault or new packet to handle InvalidFragment(Byte[])​ Checks if fragment index is less than max fragment size Declaration​ public bool InvalidFragment(byte[] array)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tarray\t Returns​ Type\tDescriptionSystem.Boolean\t ReceiveReliable(Byte[], Int32, Boolean)​ Declaration​ public void ReceiveReliable(byte[] packet, int length, bool isFragment)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\tlength System.Boolean\tisFragment\t ReceiveAck(Byte[])​ Declaration​ public void ReceiveAck(byte[] packet)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket\t "},{"title":"Class BufferFullException","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/BufferFullException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class BufferFullException","url":"docs/reference/Mirage.SocketLayer/BufferFullException#constructors","content":"BufferFullException(String)​ Declaration​ public BufferFullException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Class Batch","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Batch","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Batch","url":"docs/reference/Mirage.SocketLayer/Batch#constructors","content":"Batch(Int32)​ Declaration​ public Batch(int maxPacketSize)  Parameters​ Type\tName\tDescriptionSystem.Int32\tmaxPacketSize\t "},{"title":"Fields​","type":1,"pageTitle":"Class Batch","url":"docs/reference/Mirage.SocketLayer/Batch#fields","content":"MESSAGE_LENGTH_SIZE​ Declaration​ public const int MESSAGE_LENGTH_SIZE = 2  "},{"title":"Properties​","type":1,"pageTitle":"Class Batch","url":"docs/reference/Mirage.SocketLayer/Batch#properties","content":"Created​ Declaration​ protected abstract bool Created { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class Batch","url":"docs/reference/Mirage.SocketLayer/Batch#methods","content":"GetBatch()​ Declaration​ protected abstract byte[] GetBatch()  Returns​ Type\tDescriptionSystem.Byte[]\t GetBatchLength()​ Declaration​ protected abstract int GetBatchLength()  Returns​ Type\tDescriptionSystem.Int32\t CreateNewBatch()​ Declaration​ protected abstract void CreateNewBatch()  SendAndReset()​ Declaration​ protected abstract void SendAndReset()  AddMessage(Byte[], Int32, Int32)​ Declaration​ public void AddMessage(byte[] message, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tmessage System.Int32\toffset System.Int32\tlength\t Flush()​ Declaration​ public void Flush()  "},{"title":"Class ByteBuffer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ByteBuffer","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ByteBuffer","url":"docs/reference/Mirage.SocketLayer/ByteBuffer#fields","content":"array​ Declaration​ public readonly byte[] array  "},{"title":"Methods​","type":1,"pageTitle":"Class ByteBuffer","url":"docs/reference/Mirage.SocketLayer/ByteBuffer#methods","content":"CreateNew(Int32, Pool&lt;ByteBuffer&gt;)​ Declaration​ public static ByteBuffer CreateNew(int bufferSize, Pool&lt;ByteBuffer&gt; pool)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbufferSize Mirage.SocketLayer.Pool&lt;Mirage.SocketLayer.ByteBuffer&gt;\tpool\t Returns​ Type\tDescriptionMirage.SocketLayer.ByteBuffer\t Release()​ Declaration​ public void Release()  IDisposable.Dispose()​ Declaration​ void IDisposable.Dispose()  "},{"title":"Enum Commands","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Commands","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum Commands","url":"docs/reference/Mirage.SocketLayer/Commands#fields","content":"ConnectRequest​ Sent from client to request to connect to server Declaration​ ConnectRequest = 1  ConnectionAccepted​ Sent when Server accepts client Declaration​ ConnectionAccepted = 2  ConnectionRejected​ Sent when server rejects client Declaration​ ConnectionRejected = 3  Disconnect​ Sent from client or server to close connection Declaration​ Disconnect = 4  "},{"title":"Class Config","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Config","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class Config","url":"docs/reference/Mirage.SocketLayer/Config#fields","content":"MaxConnections​ Max concurrent connections server will accept Declaration​ public int MaxConnections  ConnectAttemptInterval​ How often connect attempt message will be re-sent if server does not reply Declaration​ public float ConnectAttemptInterval  MaxConnectAttempts​ How many times attempt to connect before giving up Declaration​ public int MaxConnectAttempts  KeepAliveInterval​ how long after previous send before sending keep alive message Keep alive is to stop connection from timing out keep alive is sent over unreliable so this interval should be low enough so that does not timeout if some unreliable packets are missed Declaration​ public float KeepAliveInterval  TimeoutDuration​ how long without a message before disconnecting connection Declaration​ public float TimeoutDuration  key​ Key sent with connection message (defaults to Major version of assmebly) Used to validate that server and client are same application/version NOTE: key will be ASCII encoded Declaration​ public string key  DisconnectDuration​ How long after disconnect before connection is fully removed from Peer Declaration​ public float DisconnectDuration  BufferPoolStartSize​ How many buffers to create at start Declaration​ public int BufferPoolStartSize  BufferPoolMaxSize​ max number of buffers allowed to be stored in pool buffers over this limit will be left for GC Declaration​ public int BufferPoolMaxSize  TimeBeforeEmptyAck​ how long after last send to send ack without a message Declaration​ public float TimeBeforeEmptyAck  ReceivesBeforeEmptyAck​ How many receives before sending an empty ack this is so that acks are still sent even if receives many message before replying Declaration​ public int ReceivesBeforeEmptyAck  EmptyAckLimit​ How many empty acks to send via Send enough acks that there is a high chances that 1 of them reaches other size Empty Ack count resets after receives new message Declaration​ public int EmptyAckLimit  MaxReliablePacketsInSendBufferPerConnection​ How many packets can exist it ring buffers for Ack and Reliable system This value wont count null packets so can be set lower than 's value to limit actual number of packets waiting to be acked Example: (max=2000) (MTU=1200) (connections=100) =&gt; 240MB Declaration​ public int MaxReliablePacketsInSendBufferPerConnection  SequenceSize​ Bit size of sequence used for AckSystem this value also determines the size of ring buffers for Ack and Reliable system Max of 16 Declaration​ public int SequenceSize  MaxReliableFragments​ How many fragments large reliable message can be split into if set to 0 then messages over will not be allowed to be sent max value is 255 Declaration​ public int MaxReliableFragments  DisableReliableLayer​ Enable if the Socket you are using has its own Reliable layer. For example using Websocket, which is TCP. Declaration​ public bool DisableReliableLayer  "},{"title":"Class ByteUtils","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ByteUtils","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class ByteUtils","url":"docs/reference/Mirage.SocketLayer/ByteUtils#methods","content":"WriteByte(Byte[], ref Int32, Byte)​ Declaration​ public static void WriteByte(byte[] buffer, ref int offset, byte value)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset System.Byte\tvalue\t ReadByte(Byte[], ref Int32)​ Declaration​ public static byte ReadByte(byte[] buffer, ref int offset)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset\t Returns​ Type\tDescriptionSystem.Byte\t WriteUShort(Byte[], ref Int32, UInt16)​ Declaration​ public static void WriteUShort(byte[] buffer, ref int offset, ushort value)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset System.UInt16\tvalue\t ReadUShort(Byte[], ref Int32)​ Declaration​ public static ushort ReadUShort(byte[] buffer, ref int offset)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset\t Returns​ Type\tDescriptionSystem.UInt16\t WriteUInt(Byte[], ref Int32, UInt32)​ Declaration​ public static void WriteUInt(byte[] buffer, ref int offset, uint value)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset System.UInt32\tvalue\t ReadUInt(Byte[], ref Int32)​ Declaration​ public static uint ReadUInt(byte[] buffer, ref int offset)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset\t Returns​ Type\tDescriptionSystem.UInt32\t WriteULong(Byte[], ref Int32, UInt64)​ Declaration​ public static void WriteULong(byte[] buffer, ref int offset, ulong value)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset System.UInt64\tvalue\t ReadULong(Byte[], ref Int32)​ Declaration​ public static ulong ReadULong(byte[] buffer, ref int offset)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer System.Int32\toffset\t Returns​ Type\tDescriptionSystem.UInt64\t "},{"title":"Enum ConnectionState","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ConnectionState","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum ConnectionState","url":"docs/reference/Mirage.SocketLayer/ConnectionState#fields","content":"Created​ Initial state Declaration​ Created = 1  Connecting​ Client is connecting to server Declaration​ Connecting = 2  Connected​ Server as accepted connection Declaration​ Connected = 3  Disconnected​ Server or client has disconnected the connection and is waiting to be cleaned up Declaration​ Disconnected = 9  Removing​ Marked to be removed from the connection collection Declaration​ Removing = 10  Destroyed​ Removed from collection and all state cleaned up Declaration​ Destroyed = 11  "},{"title":"Class ConnectionExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ConnectionExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class ConnectionExtensions","url":"docs/reference/Mirage.SocketLayer/ConnectionExtensions#methods","content":"SendUnreliable(IConnection, Byte[])​ Declaration​ public static void SendUnreliable(this IConnection conn, byte[] packet)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.Byte[]\tpacket\t SendUnreliable(IConnection, ArraySegment&lt;Byte&gt;)​ Declaration​ public static void SendUnreliable(this IConnection conn, ArraySegment&lt;byte&gt; packet)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.ArraySegment&lt;System.Byte&gt;\tpacket\t SendNotify(IConnection, Byte[])​ Declaration​ public static INotifyToken SendNotify(this IConnection conn, byte[] packet)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.Byte[]\tpacket\t Returns​ Type\tDescriptionMirage.SocketLayer.INotifyToken\t SendNotify(IConnection, ArraySegment&lt;Byte&gt;)​ Declaration​ public static INotifyToken SendNotify(this IConnection conn, ArraySegment&lt;byte&gt; packet)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.ArraySegment&lt;System.Byte&gt;\tpacket\t Returns​ Type\tDescriptionMirage.SocketLayer.INotifyToken\t SendNotify(IConnection, Byte[], INotifyCallBack)​ Declaration​ public static void SendNotify(this IConnection conn, byte[] packet, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.Byte[]\tpacket Mirage.SocketLayer.INotifyCallBack\tcallBacks\t SendNotify(IConnection, ArraySegment&lt;Byte&gt;, INotifyCallBack)​ Declaration​ public static void SendNotify(this IConnection conn, ArraySegment&lt;byte&gt; packet, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.ArraySegment&lt;System.Byte&gt;\tpacket Mirage.SocketLayer.INotifyCallBack\tcallBacks\t SendReliable(IConnection, Byte[])​ Declaration​ public static void SendReliable(this IConnection conn, byte[] packet)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.Byte[]\tpacket\t SendReliable(IConnection, ArraySegment&lt;Byte&gt;)​ Declaration​ public static void SendReliable(this IConnection conn, ArraySegment&lt;byte&gt; packet)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconn System.ArraySegment&lt;System.Byte&gt;\tpacket\t "},{"title":"Enum DisconnectReason","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/DisconnectReason","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum DisconnectReason","url":"docs/reference/Mirage.SocketLayer/DisconnectReason#fields","content":"None​ No reason given Declaration​ None = 0  Timeout​ No message Received in timeout window Declaration​ Timeout = 1  RequestedByRemotePeer​ Disconnect called by higher level Declaration​ RequestedByRemotePeer = 2  RequestedByLocalPeer​ Disconnect called by higher level Declaration​ RequestedByLocalPeer = 3  InvalidPacket​ Received packet was not allowed by config Declaration​ InvalidPacket = 4  SendBufferFull​ Send buffer was full and could not accept more data Declaration​ SendBufferFull = 5  "},{"title":"Interface IConnection","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/IConnection","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface IConnection","url":"docs/reference/Mirage.SocketLayer/IConnection#properties","content":"EndPoint​ Declaration​ IEndPoint EndPoint { get; }  State​ Declaration​ ConnectionState State { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Interface IConnection","url":"docs/reference/Mirage.SocketLayer/IConnection#methods","content":"Disconnect()​ Declaration​ void Disconnect()  Disconnect(DisconnectReason)​ Declaration​ void Disconnect(DisconnectReason reason)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.DisconnectReason\treason\t SendNotify(Byte[], Int32, Int32)​ Declaration​ INotifyToken SendNotify(byte[] packet, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\toffset System.Int32\tlength\t Returns​ Type\tDescriptionMirage.SocketLayer.INotifyToken\t SendNotify(Byte[], Int32, Int32, INotifyCallBack)​ Declaration​ void SendNotify(byte[] packet, int offset, int length, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\toffset System.Int32\tlength Mirage.SocketLayer.INotifyCallBack\tcallBacks\t SendReliable(Byte[], Int32, Int32)​ single message, batched by AckSystem Declaration​ void SendReliable(byte[] message, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tmessage System.Int32\toffset System.Int32\tlength\t SendUnreliable(Byte[], Int32, Int32)​ Declaration​ void SendUnreliable(byte[] packet, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\toffset System.Int32\tlength\t FlushBatch()​ Forces the connection to send any batched message immediately to the socket Note: this will only send the packet to the socket. Some sockets may not send on main thread so might not send immediately Declaration​ void FlushBatch()  "},{"title":"Interface IDataHandler","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/IDataHandler","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IDataHandler","url":"docs/reference/Mirage.SocketLayer/IDataHandler#methods","content":"ReceiveMessage(IConnection, ArraySegment&lt;Byte&gt;)​ Receives a new Packet from low level Declaration​ void ReceiveMessage(IConnection connection, ArraySegment&lt;byte&gt; message)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconnection\tconnection that sent data System.ArraySegment&lt;System.Byte&gt;\tmessage\tSingle message received by peer "},{"title":"Interface IHasAddress","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/IHasAddress","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface IHasAddress","url":"docs/reference/Mirage.SocketLayer/IHasAddress#properties","content":"Address​ Declaration​ string Address { get; set; }  "},{"title":"Interface IEndPoint","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/IEndPoint","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IEndPoint","url":"docs/reference/Mirage.SocketLayer/IEndPoint#methods","content":"CreateCopy()​ Creates a new instance of with same connection data this is called when a new connection is created by Declaration​ IEndPoint CreateCopy()  Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t "},{"title":"Interface IHasPort","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/IHasPort","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface IHasPort","url":"docs/reference/Mirage.SocketLayer/IHasPort#properties","content":"Port​ Declaration​ int Port { get; set; }  "},{"title":"Class INotifyCallBackExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/INotifyCallBackExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class INotifyCallBackExtensions","url":"docs/reference/Mirage.SocketLayer/INotifyCallBackExtensions#methods","content":"Notify(INotifyCallBack, Boolean)​ Declaration​ public static void Notify(this INotifyCallBack callBack, bool delivered)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.INotifyCallBack\tcallBack System.Boolean\tdelivered\t "},{"title":"Interface INotifyCallBack","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/INotifyCallBack","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface INotifyCallBack","url":"docs/reference/Mirage.SocketLayer/INotifyCallBack#methods","content":"OnDelivered()​ Declaration​ void OnDelivered()  OnLost()​ Declaration​ void OnLost()  "},{"title":"Interface INotifyToken","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/INotifyToken","content":"Interface INotifyToken Object returned from with events for when packet is Lost or Delivered Syntax​ public interface INotifyToken ","keywords":""},{"title":"Interface IRawConnection","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/IRawConnection","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IRawConnection","url":"docs/reference/Mirage.SocketLayer/IRawConnection#methods","content":"SendRaw(Byte[], Int32)​ Sends directly to socket without adding header packet given to this function as assumed to already have a header Declaration​ void SendRaw(byte[] packet, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket\theader and messages System.Int32\tlength\t "},{"title":"Interface ITime","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ITime","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface ITime","url":"docs/reference/Mirage.SocketLayer/ITime#properties","content":"Now​ Declaration​ double Now { get; }  "},{"title":"Interface IPeer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/IPeer","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IPeer","url":"docs/reference/Mirage.SocketLayer/IPeer#methods","content":"Bind(IEndPoint)​ Declaration​ void Bind(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Connect(IEndPoint)​ Declaration​ IConnection Connect(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Returns​ Type\tDescriptionMirage.SocketLayer.IConnection\t Close()​ Declaration​ void Close()  UpdateReceive()​ Call this at the start of the frame to receive new messages Declaration​ void UpdateReceive()  UpdateSent()​ Call this at end of frame to send new batches Declaration​ void UpdateSent()  "},{"title":"Class MessageSizeException","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/MessageSizeException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class MessageSizeException","url":"docs/reference/Mirage.SocketLayer/MessageSizeException#constructors","content":"MessageSizeException(String)​ Declaration​ public MessageSizeException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Interface ISocket","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ISocket","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface ISocket","url":"docs/reference/Mirage.SocketLayer/ISocket#methods","content":"Bind(IEndPoint)​ Starts listens for data on an endpoint Used by Server to allow clients to connect Declaration​ void Bind(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\tthe endpoint to listen on Connect(IEndPoint)​ Sets up Socket ready to send data to endpoint as a client Declaration​ void Connect(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Close()​ Closes the socket, stops receiving messages from other peers Declaration​ void Close()  Poll()​ Checks if a packet is available Declaration​ bool Poll()  Returns​ Type\tDescriptionSystem.Boolean\ttrue if there is atleast 1 packet to read Receive(Byte[], out IEndPoint)​ Gets next packet Should be called after Poll Implementation should check that incoming packet is within the size of buffer, and make sure not to return bytesReceived above that size  Declaration​ int Receive(byte[] buffer, out IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer\tbuffer to write recevived packet into Mirage.SocketLayer.IEndPoint\tendPoint\twhere packet came from Returns​ Type\tDescriptionSystem.Int32\tlength of packet, should not be above buffer length Send(IEndPoint, Byte[], Int32)​ Sends a packet to an endpoint Implementation should use length because packet is a buffer than may contain data from previous packets Declaration​ void Send(IEndPoint endPoint, byte[] packet, int length)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\twhere packet is being sent to System.Byte[]\tpacket\tbuffer that contains the packet, starting at index 0 System.Int32\tlength\tlength of the packet "},{"title":"Class Metrics","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Metrics","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Metrics","url":"docs/reference/Mirage.SocketLayer/Metrics#constructors","content":"Metrics(Int32)​ Declaration​ public Metrics(int bitSize = 10)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbitSize\t "},{"title":"Fields​","type":1,"pageTitle":"Class Metrics","url":"docs/reference/Mirage.SocketLayer/Metrics#fields","content":"Sequencer​ Declaration​ public readonly Sequencer Sequencer  buffer​ Declaration​ public readonly Metrics.Frame[] buffer  tick​ Declaration​ public uint tick  "},{"title":"Methods​","type":1,"pageTitle":"Class Metrics","url":"docs/reference/Mirage.SocketLayer/Metrics#methods","content":"OnTick(Int32)​ Declaration​ public void OnTick(int connectionCount)  Parameters​ Type\tName\tDescriptionSystem.Int32\tconnectionCount\t OnSend(Int32)​ Declaration​ public void OnSend(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnResend(Int32)​ Declaration​ public void OnResend(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnReceive(Int32)​ Declaration​ public void OnReceive(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnReceiveUnconnected(Int32)​ Declaration​ public void OnReceiveUnconnected(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnSendMessageUnreliable(Int32)​ Declaration​ public void OnSendMessageUnreliable(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnReceiveMessageUnreliable(Int32)​ Declaration​ public void OnReceiveMessageUnreliable(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnSendMessageReliable(Int32)​ Declaration​ public void OnSendMessageReliable(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnReceiveMessageReliable(Int32)​ Declaration​ public void OnReceiveMessageReliable(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnSendMessageNotify(Int32)​ Declaration​ public void OnSendMessageNotify(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnReceiveMessageNotify(Int32)​ Declaration​ public void OnReceiveMessageNotify(int length)  Parameters​ Type\tName\tDescriptionSystem.Int32\tlength\t OnReceiveMessage(PacketType, Int32)​ Declaration​ public void OnReceiveMessage(PacketType packetType, int length)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.PacketType\tpacketType System.Int32\tlength\t "},{"title":"Struct Metrics.Frame","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Metrics.Frame","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct Metrics.Frame","url":"docs/reference/Mirage.SocketLayer/Metrics.Frame#fields","content":"init​ Is this frame initialized (uninitialized frames can be excluded from averages) Declaration​ public bool init  connectionCount​ Number of connections Declaration​ public int connectionCount  sendCount​ Number of send calls to connections Declaration​ public int sendCount  sendBytes​ Number of bytes sent to connections Declaration​ public int sendBytes  resendCount​ Number of resend calls by reliable system Declaration​ public int resendCount  resendBytes​ Number of bytes resent by reliable system Declaration​ public int resendBytes  receiveCount​ Number of packets received from connections Declaration​ public int receiveCount  receiveBytes​ Number of bytes received from connections Declaration​ public int receiveBytes  sendUnconnectedCount​ Number of send calls to unconnected addresses Declaration​ public int sendUnconnectedCount  sendUnconnectedBytes​ Number of bytes sent to unconnected addresses Declaration​ public int sendUnconnectedBytes  receiveUnconnectedBytes​ Number of packets received from unconnected addresses Declaration​ public int receiveUnconnectedBytes  receiveUnconnectedCount​ Number of bytes received from unconnected addresses Declaration​ public int receiveUnconnectedCount  sendMessagesUnreliableCount​ Number of Unreliable message sent to connections Declaration​ public int sendMessagesUnreliableCount  sendMessagesUnreliableBytes​ Number of Unreliable bytes sent to connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int sendMessagesUnreliableBytes  receiveMessagesUnreliableCount​ Number of Unreliable message received from connections Declaration​ public int receiveMessagesUnreliableCount  receiveMessagesUnreliableBytes​ Number of Unreliable bytes received from connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int receiveMessagesUnreliableBytes  sendMessagesReliableCount​ Number of Reliable message sent to connections Declaration​ public int sendMessagesReliableCount  sendMessagesReliableBytes​ Number of Reliable bytes sent to connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int sendMessagesReliableBytes  receiveMessagesReliableCount​ Number of Reliable message received from connections Declaration​ public int receiveMessagesReliableCount  receiveMessagesReliableBytes​ Number of Reliable bytes received from connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int receiveMessagesReliableBytes  sendMessagesNotifyCount​ Number of Notify message sent to connections Declaration​ public int sendMessagesNotifyCount  sendMessagesNotifyBytes​ Number of Notify bytes sent to connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int sendMessagesNotifyBytes  receiveMessagesNotifyCount​ Number of Notify message received from connections Declaration​ public int receiveMessagesNotifyCount  receiveMessagesNotifyBytes​ Number of Notify bytes received from connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int receiveMessagesNotifyBytes  "},{"title":"Properties​","type":1,"pageTitle":"Struct Metrics.Frame","url":"docs/reference/Mirage.SocketLayer/Metrics.Frame#properties","content":"sendMessagesCountTotal​ Number of message sent to connections Declaration​ public int sendMessagesCountTotal { get; }  sendMessagesBytesTotal​ Number of bytes sent to connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int sendMessagesBytesTotal { get; }  receiveMessagesCountTotal​ Number of message received from connections Declaration​ public int receiveMessagesCountTotal { get; }  receiveMessagesBytesTotal​ Number of bytes received from connections (excludes packets headers, will just be the message sent by high level) Declaration​ public int receiveMessagesBytesTotal { get; }  "},{"title":"Class NotifyToken","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/NotifyToken","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class NotifyToken","url":"docs/reference/Mirage.SocketLayer/NotifyToken#methods","content":"OnDelivered()​ Declaration​ public void OnDelivered()  OnLost()​ Declaration​ public void OnLost()  "},{"title":"Class NotifyTokenException","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/NotifyTokenException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NotifyTokenException","url":"docs/reference/Mirage.SocketLayer/NotifyTokenException#constructors","content":"NotifyTokenException(String)​ Declaration​ public NotifyTokenException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Class NoConnectionException","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/NoConnectionException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NoConnectionException","url":"docs/reference/Mirage.SocketLayer/NoConnectionException#constructors","content":"NoConnectionException(String)​ Declaration​ public NoConnectionException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Delegate Pool<T>.CreateNewItem","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Pool-1.CreateNewItem","content":"Delegate Pool&lt;T&gt;.CreateNewItem Syntax​ public delegate T CreateNewItem(int bufferSize, Pool&lt;T&gt; pool); ","keywords":""},{"title":"Enum PacketType","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/PacketType","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum PacketType","url":"docs/reference/Mirage.SocketLayer/PacketType#fields","content":"Command​ see Declaration​ Command = 1  Unreliable​ data packet sent with no guarantee for order or reliability used for data that is fire and forget Declaration​ Unreliable = 2  Notify​ data packet sent with ack header so sender knows if packet gets delivered or lost Declaration​ Notify = 3  Reliable​ data packet that are guarantee to be in order, and not lost. contains ack header If a package is lost then other Reliable packets will be held until the lost packet is resent Declaration​ Reliable = 4  ReliableFragment​ part of a Reliable message. same as Reliable but only part of a message Declaration​ ReliableFragment = 6  Ack​ packet with just ack header only sent if no other packets with ack header were sent recently Declaration​ Ack = 5  KeepAlive​ Used to keep connection alive. Similar to ping/pong Declaration​ KeepAlive = 10  "},{"title":"Class Peer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Peer","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Peer","url":"docs/reference/Mirage.SocketLayer/Peer#constructors","content":"Peer(ISocket, Int32, IDataHandler, Config, ILogger, Metrics)​ Declaration​ public Peer(ISocket socket, int maxPacketSize, IDataHandler dataHandler, Config config = null, ILogger logger = null, Metrics metrics = null)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.ISocket\tsocket System.Int32\tmaxPacketSize Mirage.SocketLayer.IDataHandler\tdataHandler Mirage.SocketLayer.Config\tconfig ILogger\tlogger Mirage.SocketLayer.Metrics\tmetrics\t "},{"title":"Properties​","type":1,"pageTitle":"Class Peer","url":"docs/reference/Mirage.SocketLayer/Peer#properties","content":"PoolMetrics​ Declaration​ public PoolMetrics PoolMetrics { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class Peer","url":"docs/reference/Mirage.SocketLayer/Peer#methods","content":"Bind(IEndPoint)​ Declaration​ public void Bind(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Connect(IEndPoint)​ Declaration​ public IConnection Connect(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Returns​ Type\tDescriptionMirage.SocketLayer.IConnection\t Close()​ Declaration​ public void Close()  UpdateReceive()​ Call this at the start of the frame to receive new messages Declaration​ public void UpdateReceive()  UpdateSent()​ Call this at end of frame to send new batches Declaration​ public void UpdateSent()  GetMaxUnreliableMessageSize()​ Declaration​ public int GetMaxUnreliableMessageSize()  Returns​ Type\tDescriptionSystem.Int32\t GetMaxNotifyMessageSize()​ Declaration​ public int GetMaxNotifyMessageSize()  Returns​ Type\tDescriptionSystem.Int32\t GetMaxReliableMessageSize()​ Declaration​ public int GetMaxReliableMessageSize()  Returns​ Type\tDescriptionSystem.Int32\t "},{"title":"Delegate Pool<T>.CreateNewItemNoCount","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Pool-1.CreateNewItemNoCount","content":"Delegate Pool&lt;T&gt;.CreateNewItemNoCount Syntax​ public delegate T CreateNewItemNoCount(Pool&lt;T&gt; pool); ","keywords":""},{"title":"Class Pool<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Pool-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Pool<T>","url":"docs/reference/Mirage.SocketLayer/Pool-1#constructors","content":"Pool(Pool&lt;T&gt;.CreateNewItemNoCount, Int32, Int32, ILogger)​ Creates pool, that does not require Buffer size Declaration​ public Pool(Pool&lt;T&gt;.CreateNewItemNoCount createNew, int startPoolSize, int maxPoolSize, ILogger logger = null)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.Pool.CreateNewItemNoCount&lt;&gt;\tcreateNew System.Int32\tstartPoolSize\thow many buffers to create at start System.Int32\tmaxPoolSize\tmax number of buffers in pool ILogger\tlogger\t Pool(Pool&lt;T&gt;.CreateNewItem, Int32, Int32, Int32, ILogger)​ Creates pool where buffer size will be passed to items when created them Declaration​ public Pool(Pool&lt;T&gt;.CreateNewItem createNew, int bufferSize, int startPoolSize, int maxPoolSize, ILogger logger = null)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.Pool.CreateNewItem&lt;&gt;\tcreateNew System.Int32\tbufferSize\tsize of each buffer System.Int32\tstartPoolSize\thow many buffers to create at start System.Int32\tmaxPoolSize\tmax number of buffers in pool ILogger\tlogger\t "},{"title":"Properties​","type":1,"pageTitle":"Class Pool<T>","url":"docs/reference/Mirage.SocketLayer/Pool-1#properties","content":"Metrics​ Declaration​ public PoolMetrics Metrics { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class Pool<T>","url":"docs/reference/Mirage.SocketLayer/Pool-1#methods","content":"Configure(Int32, Int32)​ sets max pool size and then creates writers up to new start size Declaration​ public void Configure(int startPoolSize, int maxPoolSize)  Parameters​ Type\tName\tDescriptionSystem.Int32\tstartPoolSize System.Int32\tmaxPoolSize\t Take()​ Declaration​ public T Take()  Returns​ Type\tDescriptionT\t Put(T)​ Declaration​ public void Put(T buffer)  Parameters​ Type\tName\tDescriptionT\tbuffer\t "},{"title":"Struct PoolMetrics","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/PoolMetrics","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct PoolMetrics","url":"docs/reference/Mirage.SocketLayer/PoolMetrics#constructors","content":"PoolMetrics(Int32, Int32, Int32)​ Declaration​ public PoolMetrics(int inPool, int created, int poolSize)  Parameters​ Type\tName\tDescriptionSystem.Int32\tinPool System.Int32\tcreated System.Int32\tpoolSize\t "},{"title":"Fields​","type":1,"pageTitle":"Struct PoolMetrics","url":"docs/reference/Mirage.SocketLayer/PoolMetrics#fields","content":"InPool​ Declaration​ public readonly int InPool  Created​ Declaration​ public readonly int Created  PoolSize​ Declaration​ public readonly int PoolSize  "},{"title":"Methods​","type":1,"pageTitle":"Struct PoolMetrics","url":"docs/reference/Mirage.SocketLayer/PoolMetrics#methods","content":"ToString()​ Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t "},{"title":"Enum RejectReason","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/RejectReason","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum RejectReason","url":"docs/reference/Mirage.SocketLayer/RejectReason#fields","content":"None​ No reason given Declaration​ None = 0  ServerFull​ Server is at max connections and will not accept a new connection until one disconnects Declaration​ ServerFull = 1  Timeout​ Server did not reply to connection request Declaration​ Timeout = 2  ClosedByPeer​ Closed called locally before connect Declaration​ ClosedByPeer = 3  KeyInvalid​ Key given with first message did not match the value on the server Declaration​ KeyInvalid = 4  "},{"title":"Class ReliableBatch","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/ReliableBatch","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class ReliableBatch","url":"docs/reference/Mirage.SocketLayer/ReliableBatch#constructors","content":"ReliableBatch(Int32, Func&lt;PacketType, AckSystem.ReliablePacket&gt;, Action&lt;AckSystem.ReliablePacket&gt;)​ Declaration​ public ReliableBatch(int maxPacketSize, Func&lt;PacketType, AckSystem.ReliablePacket&gt; createReliableBuffer, Action&lt;AckSystem.ReliablePacket&gt; sendReliablePacket)  Parameters​ Type\tName\tDescriptionSystem.Int32\tmaxPacketSize System.Func&lt;Mirage.SocketLayer.PacketType, Mirage.SocketLayer.AckSystem.ReliablePacket&gt;\tcreateReliableBuffer System.Action&lt;Mirage.SocketLayer.AckSystem.ReliablePacket&gt;\tsendReliablePacket\t "},{"title":"Properties​","type":1,"pageTitle":"Class ReliableBatch","url":"docs/reference/Mirage.SocketLayer/ReliableBatch#properties","content":"Created​ Declaration​ protected override bool Created { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class ReliableBatch","url":"docs/reference/Mirage.SocketLayer/ReliableBatch#methods","content":"GetBatch()​ Declaration​ protected override byte[] GetBatch()  Returns​ Type\tDescriptionSystem.Byte[]\t GetBatchLength()​ Declaration​ protected override int GetBatchLength()  Returns​ Type\tDescriptionSystem.Int32\t CreateNewBatch()​ Declaration​ protected override void CreateNewBatch()  SendAndReset()​ Declaration​ protected override void SendAndReset()  IDisposable.Dispose()​ Declaration​ void IDisposable.Dispose()  "},{"title":"Class Sequencer","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/Sequencer","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class Sequencer","url":"docs/reference/Mirage.SocketLayer/Sequencer#constructors","content":"Sequencer(Int32)​ Declaration​ public Sequencer(int bits)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbits\tamount of bits for the sequence "},{"title":"Properties​","type":1,"pageTitle":"Class Sequencer","url":"docs/reference/Mirage.SocketLayer/Sequencer#properties","content":"Bits​ Number of bits used for the sequence generator up to 64 Declaration​ public int Bits { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class Sequencer","url":"docs/reference/Mirage.SocketLayer/Sequencer#methods","content":"Next()​ Generates the next value in the sequence starts with 0 Declaration​ public ulong Next()  Returns​ Type\tDescriptionSystem.UInt64\t0, 1, 2, ..., (2^n)-1, 0, 1, 2, ... NextAfter(UInt64)​ Gets the next sequence value after a given sequence wraps if necessary Declaration​ public ulong NextAfter(ulong sequence)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tsequence\tcurrent sequence value Returns​ Type\tDescriptionSystem.UInt64\tthe next sequence value MoveInBounds(UInt64)​ returns a sequence value from the given value wraps if necessary Declaration​ public ulong MoveInBounds(ulong sequence)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tsequence\tcurrent sequence value Returns​ Type\tDescriptionSystem.UInt64\tthe next sequence value Distance(UInt64, UInt64)​ Calculates the distance between 2 sequences, taking into account wrapping Declaration​ public long Distance(ulong from, ulong to)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tfrom\tcurrent sequence value System.UInt64\tto\tprevious sequence value Returns​ Type\tDescriptionSystem.Int64\tfrom - to, adjusted for wrapping "},{"title":"Class SocketFactory","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/SocketFactory","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class SocketFactory","url":"docs/reference/Mirage.SocketLayer/SocketFactory#properties","content":"MaxPacketSize​ Max size for packets sent to or received from Socket Called once when Sockets are created Declaration​ public abstract int MaxPacketSize { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class SocketFactory","url":"docs/reference/Mirage.SocketLayer/SocketFactory#methods","content":"CreateServerSocket()​ Creates a to be used by on the server Declaration​ public abstract ISocket CreateServerSocket()  Returns​ Type\tDescriptionMirage.SocketLayer.ISocket\t GetBindEndPoint()​ Creates the that the Server Socket will bind to Declaration​ public abstract IEndPoint GetBindEndPoint()  Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t CreateClientSocket()​ Creates a to be used by on the client Declaration​ public abstract ISocket CreateClientSocket()  Returns​ Type\tDescriptionMirage.SocketLayer.ISocket\t GetConnectEndPoint(String, Nullable&lt;UInt16&gt;)​ Creates the that the Client Socket will connect to using the parameter given Declaration​ public abstract IEndPoint GetConnectEndPoint(string address = null, ushort? port = default(ushort? ))  Parameters​ Type\tName\tDescriptionSystem.String\taddress System.Nullable&lt;System.UInt16&gt;\tport\t Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t "},{"title":"Class SocketLayerException","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/SocketLayerException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SocketLayerException","url":"docs/reference/Mirage.SocketLayer/SocketLayerException#constructors","content":"SocketLayerException(String)​ Declaration​ public SocketLayerException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Mirage.Sockets.Udp","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Sockets.Udp","url":"docs/reference/Mirage.Sockets.Udp/#classes","content":"EndPointWrapper​ InitUDP​ NanoEndPoint​ NanoSocket​ NanoSocketException​ UdpMTU​ UdpSocket​ UdpSocketFactory​ "},{"title":"Enums​","type":1,"pageTitle":"Mirage.Sockets.Udp","url":"docs/reference/Mirage.Sockets.Udp/#enums","content":"SocketLib​ "},{"title":"Class RingBuffer<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage.SocketLayer/RingBuffer-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class RingBuffer<T>","url":"docs/reference/Mirage.SocketLayer/RingBuffer-1#constructors","content":"RingBuffer(Int32, UnityEngine.ILogger)​ Declaration​ public RingBuffer(int bitCount, UnityEngine.ILogger logger)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbitCount UnityEngine.ILogger\tlogger\t RingBuffer(Int32, IEqualityComparer&lt;T&gt;, UnityEngine.ILogger)​ Declaration​ public RingBuffer(int bitCount, IEqualityComparer&lt;T&gt; comparer, UnityEngine.ILogger logger)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbitCount System.Collections.Generic.IEqualityComparer&lt;T&gt;\tcomparer UnityEngine.ILogger\tlogger\t "},{"title":"Fields​","type":1,"pageTitle":"Class RingBuffer<T>","url":"docs/reference/Mirage.SocketLayer/RingBuffer-1#fields","content":"Sequencer​ Declaration​ public readonly Sequencer Sequencer  "},{"title":"Properties​","type":1,"pageTitle":"Class RingBuffer<T>","url":"docs/reference/Mirage.SocketLayer/RingBuffer-1#properties","content":"Read​ Declaration​ public uint Read { get; }  Write​ Declaration​ public uint Write { get; }  Count​ Number of non-null items in buffer NOTE: this is not distance from read to write Declaration​ public int Count { get; }  Capacity​ Declaration​ public int Capacity { get; }  Item[UInt32]​ Declaration​ public T this[uint index] { get; }  Item[Int32]​ Declaration​ public T this[int index] { get; }  IsFull​ Declaration​ public bool IsFull { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class RingBuffer<T>","url":"docs/reference/Mirage.SocketLayer/RingBuffer-1#methods","content":"DistanceToRead(UInt32)​ Declaration​ public long DistanceToRead(uint from)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tfrom\t Returns​ Type\tDescriptionSystem.Int64\t Enqueue(T)​ Declaration​ public uint Enqueue(T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.UInt32\tsequence of written item TryPeak(out T)​ Tries to read the item at read index same as but does not remove the item after reading it Declaration​ public bool TryPeak(out T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Boolean\ttrue if item exists, or false if it is missing Exists(UInt32)​ Does item exist at index Index will be moved into bounds Declaration​ public bool Exists(uint index)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tindex\t Returns​ Type\tDescriptionSystem.Boolean\ttrue if item exists, or false if it is missing RemoveNext()​ Removes the item at read index and increments read index can be used after to do the same as Declaration​ public void RemoveNext()  Dequeue()​ Removes next item and increments read index Assumes next items exists, best to use this with Declaration​ public T Dequeue()  Returns​ Type\tDescriptionT\t TryDequeue(out T)​ Tries to remove the item at read index Declaration​ public bool TryDequeue(out T item)  Parameters​ Type\tName\tDescriptionT\titem\t Returns​ Type\tDescriptionSystem.Boolean\ttrue if item exists, or false if it is missing InsertAt(UInt32, T)​ Declaration​ public void InsertAt(uint index, T item)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tindex T\titem\t RemoveAt(UInt32)​ Declaration​ public void RemoveAt(uint index)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tindex\t MoveReadToNextNonEmpty()​ Moves read index to next non empty position this is useful when removing items from buffer in random order. Will stop when write == read, or when next buffer item is not empty Declaration​ public void MoveReadToNextNonEmpty()  MoveReadOne()​ Moves read 1 index Declaration​ public void MoveReadOne()  ClearAndRelease(Action&lt;T&gt;)​ Declaration​ public void ClearAndRelease(Action&lt;T&gt; releaseItem)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;T&gt;\treleaseItem\t "},{"title":"Class NanoEndPoint","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/NanoEndPoint","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NanoEndPoint","url":"docs/reference/Mirage.Sockets.Udp/NanoEndPoint#constructors","content":"NanoEndPoint(String, UInt16)​ Declaration​ public NanoEndPoint(string host, ushort port)  Parameters​ Type\tName\tDescriptionSystem.String\thost System.UInt16\tport\t "},{"title":"Methods​","type":1,"pageTitle":"Class NanoEndPoint","url":"docs/reference/Mirage.Sockets.Udp/NanoEndPoint#methods","content":"CreateCopy()​ Declaration​ public IEndPoint CreateCopy()  Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t "},{"title":"Class EndPointWrapper","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/EndPointWrapper","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class EndPointWrapper","url":"docs/reference/Mirage.Sockets.Udp/EndPointWrapper#constructors","content":"EndPointWrapper(EndPoint)​ Declaration​ public EndPointWrapper(EndPoint endPoint)  Parameters​ Type\tName\tDescriptionSystem.Net.EndPoint\tendPoint\t "},{"title":"Fields​","type":1,"pageTitle":"Class EndPointWrapper","url":"docs/reference/Mirage.Sockets.Udp/EndPointWrapper#fields","content":"inner​ Declaration​ public EndPoint inner  "},{"title":"Methods​","type":1,"pageTitle":"Class EndPointWrapper","url":"docs/reference/Mirage.Sockets.Udp/EndPointWrapper#methods","content":"Equals(Object)​ Declaration​ public override bool Equals(object obj)  Parameters​ Type\tName\tDescriptionSystem.Object\tobj\t Returns​ Type\tDescriptionSystem.Boolean\t GetHashCode()​ Declaration​ public override int GetHashCode()  Returns​ Type\tDescriptionSystem.Int32\t ToString()​ Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t IEndPoint.CreateCopy()​ Declaration​ IEndPoint IEndPoint.CreateCopy()  Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t "},{"title":"Class InitUDP","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/InitUDP","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class InitUDP","url":"docs/reference/Mirage.Sockets.Udp/InitUDP#methods","content":"Init()​ Declaration​ public static void Init()  Deinit()​ Declaration​ public static void Deinit()  "},{"title":"Class NanoSocketException","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/NanoSocketException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NanoSocketException","url":"docs/reference/Mirage.Sockets.Udp/NanoSocketException#constructors","content":"NanoSocketException(String)​ Declaration​ public NanoSocketException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Class UdpMTU","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/UdpMTU","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class UdpMTU","url":"docs/reference/Mirage.Sockets.Udp/UdpMTU#properties","content":"MaxPacketSize​ Max size of array that will be sent to or can be received from This will also be the size of all buffers used by This is not max message size because this size includes packets header added by Declaration​ public static int MaxPacketSize { get; }  "},{"title":"Class NanoSocket","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/NanoSocket","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NanoSocket","url":"docs/reference/Mirage.Sockets.Udp/NanoSocket#constructors","content":"NanoSocket(Int32)​ Declaration​ public NanoSocket(int bufferSize)  Parameters​ Type\tName\tDescriptionSystem.Int32\tbufferSize\t "},{"title":"Properties​","type":1,"pageTitle":"Class NanoSocket","url":"docs/reference/Mirage.Sockets.Udp/NanoSocket#properties","content":"Supported​ Declaration​ public static bool Supported { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NanoSocket","url":"docs/reference/Mirage.Sockets.Udp/NanoSocket#methods","content":"Bind(IEndPoint)​ Declaration​ public void Bind(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Connect(IEndPoint)​ Declaration​ public void Connect(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Close()​ Declaration​ public void Close()  Poll()​ Declaration​ public bool Poll()  Returns​ Type\tDescriptionSystem.Boolean\t Receive(Byte[], out IEndPoint)​ Declaration​ public int Receive(byte[] buffer, out IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer Mirage.SocketLayer.IEndPoint\tendPoint\t Returns​ Type\tDescriptionSystem.Int32\t Send(IEndPoint, Byte[], Int32)​ Declaration​ public void Send(IEndPoint endPoint, byte[] packet, int length)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint System.Byte[]\tpacket System.Int32\tlength\t "},{"title":"Enum SocketLib","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/SocketLib","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum SocketLib","url":"docs/reference/Mirage.Sockets.Udp/SocketLib#fields","content":"Automatic​ Declaration​ Automatic = 0  Native​ Declaration​ Native = 1  Managed​ Declaration​ Managed = 2  "},{"title":"Mirage.Visibility","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Visibility/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage.Visibility","url":"docs/reference/Mirage.Visibility/#classes","content":"AlwaysNetworkVisibility​ Always shows an object, even if player is loading scene This can be used to make sure that Managers in DontDestoryOnLoad dont get despawned "},{"title":"Class UdpSocket","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/UdpSocket","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class UdpSocket","url":"docs/reference/Mirage.Sockets.Udp/UdpSocket#methods","content":"Bind(IEndPoint)​ Declaration​ public void Bind(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Connect(IEndPoint)​ Declaration​ public void Connect(IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint\t Close()​ Declaration​ public void Close()  Poll()​ Is message avaliable Declaration​ public bool Poll()  Returns​ Type\tDescriptionSystem.Boolean\ttrue if data to read Receive(Byte[], out IEndPoint)​ Declaration​ public int Receive(byte[] buffer, out IEndPoint endPoint)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tbuffer Mirage.SocketLayer.IEndPoint\tendPoint\t Returns​ Type\tDescriptionSystem.Int32\t Send(IEndPoint, Byte[], Int32)​ Declaration​ public void Send(IEndPoint endPoint, byte[] packet, int length)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IEndPoint\tendPoint System.Byte[]\tpacket System.Int32\tlength\t "},{"title":"Class AlwaysNetworkVisibility","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Visibility/AlwaysNetworkVisibility","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class AlwaysNetworkVisibility","url":"docs/reference/Mirage.Visibility/AlwaysNetworkVisibility#methods","content":"OnCheckObserver(INetworkPlayer)​ Declaration​ public override bool OnCheckObserver(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\t Returns​ Type\tDescriptionSystem.Boolean\t OnRebuildObservers(HashSet&lt;INetworkPlayer&gt;, Boolean)​ Declaration​ public override void OnRebuildObservers(HashSet&lt;INetworkPlayer&gt; observers, bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.HashSet&lt;Mirage.INetworkPlayer&gt;\tobservers System.Boolean\tinitialize\t "},{"title":"Class UdpSocketFactory","type":0,"sectionRef":"#","url":"docs/reference/Mirage.Sockets.Udp/UdpSocketFactory","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class UdpSocketFactory","url":"docs/reference/Mirage.Sockets.Udp/UdpSocketFactory#fields","content":"Address​ Declaration​ public string Address  Port​ Declaration​ public ushort Port  SocketLib​ Declaration​ public SocketLib SocketLib  BufferSize​ Declaration​ public int BufferSize  "},{"title":"Properties​","type":1,"pageTitle":"Class UdpSocketFactory","url":"docs/reference/Mirage.Sockets.Udp/UdpSocketFactory#properties","content":"MaxPacketSize​ Declaration​ public override int MaxPacketSize { get; }  IHasAddress.Address​ Declaration​ string IHasAddress.Address { get; set; }  IHasPort.Port​ Declaration​ int IHasPort.Port { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Class UdpSocketFactory","url":"docs/reference/Mirage.Sockets.Udp/UdpSocketFactory#methods","content":"CreateClientSocket()​ Declaration​ public override ISocket CreateClientSocket()  Returns​ Type\tDescriptionMirage.SocketLayer.ISocket\t CreateServerSocket()​ Declaration​ public override ISocket CreateServerSocket()  Returns​ Type\tDescriptionMirage.SocketLayer.ISocket\t GetBindEndPoint()​ Declaration​ public override IEndPoint GetBindEndPoint()  Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t GetConnectEndPoint(String, Nullable&lt;UInt16&gt;)​ Declaration​ public override IEndPoint GetConnectEndPoint(string address = null, ushort? port = default(ushort? ))  Parameters​ Type\tName\tDescriptionSystem.String\taddress System.Nullable&lt;System.UInt16&gt;\tport\t Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t "},{"title":"Struct AddCharacterMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/AddCharacterMessage","content":"Struct AddCharacterMessage Syntax​ public struct AddCharacterMessage ","keywords":""},{"title":"Delegate AuthorityChanged","type":0,"sectionRef":"#","url":"docs/reference/Mirage/AuthorityChanged","content":"Delegate AuthorityChanged Event that can be used to check authority Syntax​ public delegate void AuthorityChanged(NetworkIdentity identity, bool hasAuthority, INetworkPlayer owner); ","keywords":""},{"title":"Class AutoPool<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage/AutoPool-1","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class AutoPool<T>","url":"docs/reference/Mirage/AutoPool-1#fields","content":"Pool​ Default pool instance, safe to use on main thread Declaration​ public static Pool&lt;AutoPool&lt;T&gt;.Wrapper&gt; Pool  "},{"title":"Methods​","type":1,"pageTitle":"Class AutoPool<T>","url":"docs/reference/Mirage/AutoPool-1#methods","content":"Take()​ Declaration​ public static AutoPool&lt;T&gt;.Wrapper Take()  Returns​ Type\tDescriptionMirage.AutoPool.Wrapper&lt;&gt;\t "},{"title":"Mirage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/","content":"","keywords":""},{"title":"Classes​","type":1,"pageTitle":"Mirage","url":"docs/reference/Mirage/#classes","content":"AutoPool&lt;T&gt;​ Pool class that will create a Disposable wrapper around T so it can be used with any class automatically without additional setup AutoPool&lt;T&gt;.Wrapper​ CharacterSpawner​ Spawns a player as soon as the connection is authenticated ClientAttribute​ Prevents this method from running if client is not active. Can only be used inside a NetworkBehaviour ClientObjectManager​ ClientRpcAttribute​ The server uses a Remote Procedure Call (RPC) to run this function on specific clients. Note that if you set the target as Connection, you need to pass a specific connection as a parameter of your method DeserializeFailedException​ ExponentialMovingAverage​ FoldoutEventAttribute​ Draws UnityEvent as a foldout GameObjectExtensions​ GameObjectSerializers​ HasAuthorityAttribute​ Prevents players without authority from running this method. Can only be used inside a NetworkBehaviour HeadlessAutoStart​ HeadlessFrameLimiter​ HostRendererVisibility​ Disables all Renders on GameObject when the NetworkIdentity is not visible too the host player because of a LocalPlayerAttribute​ Prevents nonlocal players from running this method. Can only be used inside a NetworkBehaviour MessageHandler​ MessageReceiverExtensions​ MessageWaiter&lt;T&gt;​ Register handler just for 1 message Useful on client when you want too receive a single auth message MethodInvocationException​ Exception thrown if a guarded method is invoked incorrectly NetworkAnimator​ A component to synchronize animation states for networked objects. NetworkBehaviorSerializers​ NetworkBehaviour​ Base class which should be inherited by scripts which contain networking functionality. NetworkClient​ This is a network client class used by the networking system. It contains a NetworkConnection that is used to connect to a network server. The handle connection state, messages handlers, and connection configuration. There can be many instances in a process at a time, but only one that is connected to a game server () that uses spawned objects. has an internal update function where it handles events from the transport layer. This includes asynchronous connect events, disconnect events and incoming data from a server. NetworkDiagnostics​ Provides profiling information from mirror A profiler can subscribe to these events and present the data in a friendly way to the user NetworkExtensions​ NetworkIdentity​ The NetworkIdentity identifies objects across the network, between server and clients. Its primary data is a NetworkInstanceId which is allocated by the server and then set on clients. This is used in network communications to be able to lookup game objects on different machines. NetworkIdentitySerializers​ NetworkInspectorCallbacks​ Callbacks for NetworkManager​ NetworkManagerGUI​ NetworkManagerHud​ NetworkMatchChecker​ Component that controls visibility of networked objects based on match id. Any object with this component on it will only be visible to other objects in the same match. This would be used to isolate players to their respective matches within a single game server instance. NetworkMessageAttribute​ Tell the weaver to generate reader and writer for a class NetworkMethodAttribute​ Prevents this method from running unless the NetworkFlags match the current state Can only be used inside a NetworkBehaviour NetworkPingDisplay​ Component that will display the clients ping in milliseconds NetworkPlayer​ A High level network connection. This is used for connections from client-to-server and for connection from server-to-client. NetworkPrefabs​ A scriptable object that contains a list of prefabs that can be spawned on the network. NetworkProximityChecker​ Component that controls visibility of networked objects for players. Any object with this component on it will not be visible to players more than a (configurable) distance away. NetworkSceneChecker​ Component that controls visibility of networked objects between scenes. Any object with this component on it will only be visible to other objects in the same scene This would be used when the server has multiple additive subscenes loaded to isolate players to their respective subscenes NetworkSceneManager​ NetworkSceneManager is an optional component that helps keep scene in sync between server and client. The loads scenes as instructed by the . The controls the currently active Scene and any additive Load/Unload. when a client connect NetworkSceneManager will send a message telling the new client to load the scene that is active on the server NetworkServer​ The NetworkServer. NetworkTime​ Synchronize time between the server and the clients NetworkTransform​ NetworkTransformBase​ NetworkTransformBase.DataPoint​ NetworkTransformChild​ A component to synchronize the position of child transforms of networked objects. There must be a NetworkTransform on the root object of the hierarchy. There can be multiple NetworkTransformChild components on an object. This does not use physics for synchronization, it simply synchronizes the localPosition and localRotation of the child transform and lerps towards the received values. NetworkVisibility​ NetworkBehaviour that calculates if the gameObject should be visible to different players or not NetworkWorld​ Holds collection of spawned network objects This class works on both server and client NetworkWorldExtensions​ NetworkedPrefabAttribute​ Forces the user to provide a prefab that has a NetworkIdentity component and is registered. Also provides a fix button to fix the prefab if it hasn't been networked. OnlineOfflineScene​ PendingAsyncSpawn​ PipePeerConnection​ A that is directly sends data to a PipePeerConnection.PipeEndPoint​ PlayerSceneChangeEvent​ ReadOnlyInspectorAttribute​ Makes field readonly in inspector. This is useful for fields that are set by code, but are shown iin inpector for debuggiing SceneAttribute​ Converts a string property into a Scene property in the inspector SceneChangeFinishedEvent​ Event fires from INetworkSceneManager when a scene change finishes on either Server or Client. Scene - Loaded scene SceneOperation - Scene change type (Normal, Additive Load, Additive Unload). SceneChangeStartedEvent​ Event fires from INetworkSceneManager when a scene change begins on either Server or Client. Scene - Name or path of the scene that's about to be loaded SceneOperation - Scene change type (Normal, Additive Load, Additive Unload). SceneVisibilityChecker​ ServerAttribute​ Prevents a method from running if server is not active. Can only be used inside a NetworkBehaviour ServerObjectManager​ The ServerObjectManager. ServerObjectManagerExtensions​ Extra helper methods for that dont add any extra logic ServerRpcAttribute​ Call this from a client to run this function on the server. Make sure to validate input etc. It's not possible to call this from a server. ShowInInspectorAttribute​ Used to show private SyncList in the inspector, Use instead of SerializeField for non Serializable types ShowSyncSettingsAttribute​ Add to NetworkBehaviour to force SyncSettings to be drawn, even if there are no syncvars SpawnEvent​ SpawnHandler​ SpawnObjectException​ Exception thrown when spawning fails StringHash​ SyncPrefabSerialize​ SyncVarAttribute​ SyncVars are used to synchronize a variable from the server to all clients automatically. Value must be changed on server, not directly by clients. Hook parameter allows you to define a client-side method to be invoked when the client gets an update from the server. SyncVarReceiver​ Class that handles syncvar message and passes it to correct SyncVarSender​ Class that Syncs syncvar and other State Version​ "},{"title":"Structs​","type":1,"pageTitle":"Mirage","url":"docs/reference/Mirage/#structs","content":"AddCharacterMessage​ GameObjectSyncvar​ backing struct for a NetworkIdentity when used as a syncvar the weaver will replace the syncvar with this struct. NetworkBehaviorSyncvar​ backing struct for a NetworkIdentity when used as a syncvar the weaver will replace the syncvar with this struct. NetworkBehaviorSyncvar&lt;T&gt;​ NetworkBehaviour.Id​ NetworkDiagnostics.MessageInfo​ Describes an outgoing message NetworkIdentitySyncvar​ backing struct for a NetworkIdentity when used as a syncvar the weaver will replace the syncvar with this struct. NetworkPingMessage​ NetworkPongMessage​ NetworkSpawnSettings​ Spawn Settings for ObjectDestroyMessage​ ObjectHideMessage​ RemoveAuthorityMessage​ RemoveCharacterMessage​ SceneMessage​ SceneNotReadyMessage​ Sent to client to mark their scene as not ready Client can sent once its scene is ready again SceneReadyMessage​ Sent to indicate the scene is finished loading SpawnMessage​ SpawnValues​ SyncPrefab​ SyncSettings​ UpdateVarsMessage​ "},{"title":"Interfaces​","type":1,"pageTitle":"Mirage","url":"docs/reference/Mirage/#interfaces","content":"IMessageReceiver​ An object that can receive messages IMessageSender​ An object that can send messages INetIdGenerator​ INetworkPlayer​ An object owned by a player that can: send/receive messages, have network visibility, be an object owner, authenticated permissions, and load scenes. May be from the server to client or from client to server INetworkVisibility​ IObjectLocator​ An object that implements this interface can find objects by their net id This is used by readers when trying to deserialize gameobjects IObjectOwner​ An object that can own networked objects ISceneLoader​ IVisibilityTracker​ An object that can observe NetworkIdentities. this is useful for interest management "},{"title":"Enums​","type":1,"pageTitle":"Mirage","url":"docs/reference/Mirage/#enums","content":"Channel​ CharacterSpawner.PlayerSpawnMethod​ Enumeration of methods of where to spawn player objects in multiplayer games. ClientStoppedReason​ Reason why Client was stopped or disconnected ConnectState​ NetworkFlags​ NetworkManagerMode​ PendingAsyncSpawn.MessageType​ RpcTarget​ Used by ClientRpc to tell mirage who to send remote call to SceneOperation​ SyncActiveOption​ SyncFrom​ SyncHookType​ SyncTiming​ SyncTo​ "},{"title":"Delegates​","type":1,"pageTitle":"Mirage","url":"docs/reference/Mirage/#delegates","content":"AuthorityChanged​ Event that can be used to check authority DynamicSpawnHandlerDelegate​ MessageDelegate&lt;T&gt;​ MessageDelegateAsync&lt;T&gt;​ MessageDelegateWithPlayer&lt;T&gt;​ MessageDelegateWithPlayerAsync&lt;T&gt;​ NetworkVisibility.VisibilityChanged​ SpawnHandlerAsyncDelegate​ SpawnHandlerDelegate​ UnSpawnDelegate​ "},{"title":"Class AutoPool<T>.Wrapper","type":0,"sectionRef":"#","url":"docs/reference/Mirage/AutoPool-1.Wrapper","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class AutoPool<T>.Wrapper","url":"docs/reference/Mirage/AutoPool-1.Wrapper#constructors","content":"Wrapper(Pool&lt;AutoPool&lt;T&gt;.Wrapper&gt;)​ Declaration​ public Wrapper(Pool&lt;AutoPool&lt;T&gt;.Wrapper&gt; pool)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.Pool&lt;Mirage.AutoPool.Wrapper&lt;&gt;&gt;\tpool\t "},{"title":"Fields​","type":1,"pageTitle":"Class AutoPool<T>.Wrapper","url":"docs/reference/Mirage/AutoPool-1.Wrapper#fields","content":"Item​ Declaration​ public readonly T Item  "},{"title":"Methods​","type":1,"pageTitle":"Class AutoPool<T>.Wrapper","url":"docs/reference/Mirage/AutoPool-1.Wrapper#methods","content":"Dispose()​ Declaration​ public void Dispose()  "},{"title":"Enum Channel","type":0,"sectionRef":"#","url":"docs/reference/Mirage/Channel","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum Channel","url":"docs/reference/Mirage/Channel#fields","content":"Reliable​ Declaration​ Reliable = 0  Unreliable​ Declaration​ Unreliable = 1  "},{"title":"Class CharacterSpawner","type":0,"sectionRef":"#","url":"docs/reference/Mirage/CharacterSpawner","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class CharacterSpawner","url":"docs/reference/Mirage/CharacterSpawner#fields","content":"Client​ Declaration​ public NetworkClient Client  Server​ Declaration​ public NetworkServer Server  SceneManager​ Declaration​ public NetworkSceneManager SceneManager  ClientObjectManager​ Declaration​ public ClientObjectManager ClientObjectManager  ServerObjectManager​ Declaration​ public ServerObjectManager ServerObjectManager  PlayerPrefab​ Declaration​ public NetworkIdentity PlayerPrefab  AutoSpawn​ Declaration​ public bool AutoSpawn  SetName​ Declaration​ public bool SetName  startPositionIndex​ Declaration​ public int startPositionIndex  startPositions​ List of transforms where players can be spawned Declaration​ public List&lt;Transform&gt; startPositions  playerSpawnMethod​ The current method of spawning players used by the CharacterSpawner. Declaration​ public CharacterSpawner.PlayerSpawnMethod playerSpawnMethod  "},{"title":"Methods​","type":1,"pageTitle":"Class CharacterSpawner","url":"docs/reference/Mirage/CharacterSpawner#methods","content":"Awake()​ Declaration​ protected virtual void Awake()  OnDestroy()​ Declaration​ protected virtual void OnDestroy()  OnClientFinishedSceneChange(Scene, SceneOperation)​ Called on the client when a normal scene change happens. The default implementation of this function sets the client as ready and adds a player. Override the function to dictate what happens when the client connects. Declaration​ public virtual void OnClientFinishedSceneChange(Scene scene, SceneOperation sceneOperation)  Parameters​ Type\tName\tDescriptionScene\tscene Mirage.SceneOperation\tsceneOperation\tThe type of scene load that happened. RequestServerSpawnPlayer()​ Declaration​ public virtual void RequestServerSpawnPlayer()  OnServerAddPlayer(INetworkPlayer)​ Called on the server when a client adds a new player with ClientScene.AddPlayer. The default implementation for this function creates a new player object from the playerPrefab. Declaration​ public virtual void OnServerAddPlayer(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tConnection from client. SetCharacterName(INetworkPlayer, NetworkIdentity)​ Declaration​ protected virtual void SetCharacterName(INetworkPlayer player, NetworkIdentity character)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer Mirage.NetworkIdentity\tcharacter\t GetStartPosition()​ This finds a spawn position based on start position objects in the scene. This is used by the default implementation of OnServerAddPlayer. Declaration​ public virtual Transform GetStartPosition()  Returns​ Type\tDescriptionTransform\tReturns the transform to spawn a player at, or null. "},{"title":"Enum CharacterSpawner.PlayerSpawnMethod","type":0,"sectionRef":"#","url":"docs/reference/Mirage/CharacterSpawner.PlayerSpawnMethod","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum CharacterSpawner.PlayerSpawnMethod","url":"docs/reference/Mirage/CharacterSpawner.PlayerSpawnMethod#fields","content":"Random​ Declaration​ Random = 0  RoundRobin​ Declaration​ RoundRobin = 1  "},{"title":"Class ClientAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ClientAttribute","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ClientAttribute","url":"docs/reference/Mirage/ClientAttribute#fields","content":"error​ If true, when the method is called from a client, it throws an error If false, no error is thrown, but the method won't execute useful for unity built in methods such as Await, Update, Start, etc. Declaration​ public bool error  "},{"title":"Class ClientRpcAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ClientRpcAttribute","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ClientRpcAttribute","url":"docs/reference/Mirage/ClientRpcAttribute#fields","content":"channel​ Declaration​ public Channel channel  target​ Declaration​ public RpcTarget target  excludeOwner​ Declaration​ public bool excludeOwner  excludeHost​ stops method being called on host/server Declaration​ public bool excludeHost  "},{"title":"Enum ClientStoppedReason","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ClientStoppedReason","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum ClientStoppedReason","url":"docs/reference/Mirage/ClientStoppedReason#fields","content":"None​ No reason given Declaration​ None = 0  Timeout​ Connecting timed out Server not sending replies Declaration​ Timeout = 1  LocalConnectionClosed​ Connection disconnect called locally Declaration​ LocalConnectionClosed = 2  RemoteConnectionClosed​ Connection disconnect called on server Declaration​ RemoteConnectionClosed = 3  InvalidPacket​ Server disconnected because sent packet was not allowed by server config Declaration​ InvalidPacket = 8  SendBufferFull​ Server disconnected because send buffer was full Declaration​ SendBufferFull = 10  ServerFull​ Server rejected connecting because it was full Declaration​ ServerFull = 4  ConnectingTimeout​ Server did not reply Declaration​ ConnectingTimeout = 5  ConnectingCancel​ Disconnect called locally before server replies with connected Declaration​ ConnectingCancel = 6  KeyInvalid​ Key given with first message did not match the value on the server, See SocketLayer Config Declaration​ KeyInvalid = 9  HostModeStopped​ Disconnect called when server was stopped in host mode Declaration​ HostModeStopped = 7  "},{"title":"Class ClientObjectManager","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ClientObjectManager","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ClientObjectManager","url":"docs/reference/Mirage/ClientObjectManager#fields","content":"spawnPrefabs​ List of prefabs that will be registered with the spawning system. For each of these prefabs, ClientManager.RegisterPrefab() will be automatically invoke. Declaration​ public List&lt;NetworkIdentity&gt; spawnPrefabs  NetworkPrefabs​ A scriptable object that holds all the prefabs that will be registered with the spawning system. For each of these prefabs, ClientManager.RegisterPrefab() will be automatically invoked. Declaration​ public NetworkPrefabs NetworkPrefabs  spawnableObjects​ This is dictionary of the disabled NetworkIdentity objects in the scene that could be spawned by messages from the server. The key to the dictionary is the NetworkIdentity sceneId. Declaration​ public readonly Dictionary&lt;ulong, NetworkIdentity&gt; spawnableObjects  "},{"title":"Properties​","type":1,"pageTitle":"Class ClientObjectManager","url":"docs/reference/Mirage/ClientObjectManager#properties","content":"Client​ Declaration​ public NetworkClient Client { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class ClientObjectManager","url":"docs/reference/Mirage/ClientObjectManager#methods","content":"PrepareToSpawnSceneObjects()​ Call this after loading/unloading a scene in the client after connection to register the spawnable objects Declaration​ public void PrepareToSpawnSceneObjects()  RegisterPrefabs(IEnumerable&lt;NetworkIdentity&gt;, Boolean)​ Calls on each object in the prefabs collection Declaration​ public void RegisterPrefabs(IEnumerable&lt;NetworkIdentity&gt; prefabs, bool skipExisting)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;Mirage.NetworkIdentity&gt;\tprefabs System.Boolean\tskipExisting\tDont call for prefab's who's hash is already in the list of handlers. This can happen if custom handler is added for a prefab in the insepctor list GetSpawnHandler(Int32)​ Find the registered or dynamic handler for prefabHash Useful for debuggers Declaration​ public SpawnHandler GetSpawnHandler(int prefabHash)  Parameters​ Type\tName\tDescriptionSystem.Int32\tprefabHash\tasset id of the prefab Returns​ Type\tDescriptionMirage.SpawnHandler\ttrue if prefab was registered RegisterPrefab(NetworkIdentity, Int32)​ Registers a prefab with the spawning system. When a NetworkIdentity object is spawned on the server with ServerObjectManager.Spawn(), the server will send a spawn message to the client with the PrefabHash. the client then finds the prefab registered with RegisterPrefab() to instantiate the client object. The ClientObjectManager has a list of spawnable prefabs, it uses this function to register them. The set of current spawnable object is available in the dictionary. Declaration​ public void RegisterPrefab(NetworkIdentity identity, int newPrefabHash)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\tA Prefab that will be spawned. System.Int32\tnewPrefabHash\tA hash to be assigned to this prefab. This allows a dynamically created game object to be registered for an already known asset Id. RegisterPrefab(NetworkIdentity)​ Registers a prefab with the spawning system. When a NetworkIdentity object is spawned on the server with ServerObjectManager.Spawn(), the server will send a spawn message to the client with the PrefabHash. the client then finds the prefab registered with RegisterPrefab() to instantiate the client object. The ClientObjectManager has a list of spawnable prefabs, it uses this function to register them. The set of current spawnable object is available in the dictionary. Declaration​ public void RegisterPrefab(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\tA Prefab that will be spawned. RegisterUnspawnHandler(NetworkIdentity, UnSpawnDelegate)​ Registers an unspawn handler for a prefab Should be called after RegisterPrefab Declaration​ public void RegisterUnspawnHandler(NetworkIdentity identity, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\tPrefab to add handler for Mirage.UnSpawnDelegate\tunspawnHandler\tA method to use as a custom un-spawnhandler on clients. UnregisterPrefab(NetworkIdentity)​ Removes a registered spawn prefab that was setup with RegisterPrefab. Declaration​ public void UnregisterPrefab(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\tThe prefab to be removed from registration. RegisterSpawnHandler(NetworkIdentity, SpawnHandlerDelegate, UnSpawnDelegate)​ Registers custom handlers for a prefab with the spawning system. When a NetworkIdentity object is spawned on the server with ServerObjectManager.Spawn(), the server will send a spawn message to the client with the PrefabHash. the client then finds the prefab registered with RegisterPrefab() to instantiate the client object. The ClientObjectManager has a list of spawnable prefabs, it uses this function to register them. The set of current spawnable object is available in the dictionary. Declaration​ public void RegisterSpawnHandler(NetworkIdentity identity, SpawnHandlerDelegate spawnHandler, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\tA Prefab that will be spawned. Mirage.SpawnHandlerDelegate\tspawnHandler\tA method to use as a custom spawnhandler on clients. Mirage.UnSpawnDelegate\tunspawnHandler\tA method to use as a custom un-spawnhandler on clients. RegisterSpawnHandler(Int32, SpawnHandlerDelegate, UnSpawnDelegate)​ This is an advanced spawning function that registers a custom prefabHash with the UNET spawning system. This can be used to register custom spawning methods for an prefabHash - instead of the usual method of registering spawning methods for a prefab. This should be used when no prefab exists for the spawned objects - such as when they are constructed dynamically at runtime from configuration data. Declaration​ public void RegisterSpawnHandler(int prefabHash, SpawnHandlerDelegate spawnHandler, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionSystem.Int32\tprefabHash Mirage.SpawnHandlerDelegate\tspawnHandler\tA method to use as a custom spawnhandler on clients. Mirage.UnSpawnDelegate\tunspawnHandler\tA method to use as a custom un-spawnhandler on clients. RegisterSpawnHandler(NetworkIdentity, SpawnHandlerAsyncDelegate, UnSpawnDelegate)​ Declaration​ public void RegisterSpawnHandler(NetworkIdentity identity, SpawnHandlerAsyncDelegate spawnHandler, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity Mirage.SpawnHandlerAsyncDelegate\tspawnHandler Mirage.UnSpawnDelegate\tunspawnHandler\t RegisterSpawnHandler(Int32, SpawnHandlerAsyncDelegate, UnSpawnDelegate)​ Declaration​ public void RegisterSpawnHandler(int prefabHash, SpawnHandlerAsyncDelegate spawnHandler, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionSystem.Int32\tprefabHash Mirage.SpawnHandlerAsyncDelegate\tspawnHandler Mirage.UnSpawnDelegate\tunspawnHandler\t UnregisterSpawnHandler(Int32)​ Removes a registered spawn handler function that was registered with RegisterSpawnHandler(). Declaration​ public void UnregisterSpawnHandler(int prefabHash)  Parameters​ Type\tName\tDescriptionSystem.Int32\tprefabHash\tThe prefabHash for the handler to be removed for. ClearSpawners()​ This clears the registered spawn prefabs and spawn handler functions for this client. Declaration​ public void ClearSpawners()  RegisterDynamicSpawnHandler(DynamicSpawnHandlerDelegate)​ Declaration​ public void RegisterDynamicSpawnHandler(DynamicSpawnHandlerDelegate dynamicHandler)  Parameters​ Type\tName\tDescriptionMirage.DynamicSpawnHandlerDelegate\tdynamicHandler\t DestroyAllClientObjects()​ Destroys all networked objects on the client. This can be used to clean up when a network connection is closed. Declaration​ public void DestroyAllClientObjects()  "},{"title":"Enum ConnectState","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ConnectState","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum ConnectState","url":"docs/reference/Mirage/ConnectState#fields","content":"Disconnected​ Declaration​ Disconnected = 0  Connecting​ Declaration​ Connecting = 1  Connected​ Declaration​ Connected = 2  "},{"title":"Class DeserializeFailedException","type":0,"sectionRef":"#","url":"docs/reference/Mirage/DeserializeFailedException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class DeserializeFailedException","url":"docs/reference/Mirage/DeserializeFailedException#constructors","content":"DeserializeFailedException(String)​ Declaration​ public DeserializeFailedException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t DeserializeFailedException(SerializationInfo, StreamingContext)​ Declaration​ protected DeserializeFailedException(SerializationInfo info, StreamingContext context)  Parameters​ Type\tName\tDescriptionSystem.Runtime.Serialization.SerializationInfo\tinfo System.Runtime.Serialization.StreamingContext\tcontext\t "},{"title":"Delegate DynamicSpawnHandlerDelegate","type":0,"sectionRef":"#","url":"docs/reference/Mirage/DynamicSpawnHandlerDelegate","content":"Delegate DynamicSpawnHandlerDelegate Syntax​ public delegate SpawnHandler DynamicSpawnHandlerDelegate(int prefabHash); ","keywords":""},{"title":"Class FoldoutEventAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/FoldoutEventAttribute","content":"Class FoldoutEventAttribute Draws UnityEvent as a foldout Inheritance​ System.Object Syntax​ [AttributeUsage(AttributeTargets.Field)] public sealed class FoldoutEventAttribute : PropertyAttribute ","keywords":""},{"title":"Class GameObjectExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage/GameObjectExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class GameObjectExtensions","url":"docs/reference/Mirage/GameObjectExtensions#methods","content":"GetNetworkIdentity(GameObject)​ Gets on a and throws if the GameObject does not have one. Declaration​ public static NetworkIdentity GetNetworkIdentity(this GameObject gameObject)  Parameters​ Type\tName\tDescriptionGameObject\tgameObject\t Returns​ Type\tDescriptionMirage.NetworkIdentity\tattached NetworkIdentity "},{"title":"Class ExponentialMovingAverage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ExponentialMovingAverage","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class ExponentialMovingAverage","url":"docs/reference/Mirage/ExponentialMovingAverage#constructors","content":"ExponentialMovingAverage(Int32)​ Declaration​ public ExponentialMovingAverage(int n)  Parameters​ Type\tName\tDescriptionSystem.Int32\tn\t "},{"title":"Properties​","type":1,"pageTitle":"Class ExponentialMovingAverage","url":"docs/reference/Mirage/ExponentialMovingAverage#properties","content":"Value​ Declaration​ public double Value { get; }  Var​ Declaration​ public double Var { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class ExponentialMovingAverage","url":"docs/reference/Mirage/ExponentialMovingAverage#methods","content":"Reset()​ Declaration​ public void Reset()  Add(Double)​ Declaration​ public void Add(double newValue)  Parameters​ Type\tName\tDescriptionSystem.Double\tnewValue\t "},{"title":"Class GameObjectSerializers","type":0,"sectionRef":"#","url":"docs/reference/Mirage/GameObjectSerializers","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class GameObjectSerializers","url":"docs/reference/Mirage/GameObjectSerializers#methods","content":"WriteGameObjectSyncVar(NetworkWriter, GameObjectSyncvar)​ Declaration​ public static void WriteGameObjectSyncVar(this NetworkWriter writer, GameObjectSyncvar id)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Mirage.GameObjectSyncvar\tid\t ReadGameObjectSyncVar(NetworkReader)​ Declaration​ public static GameObjectSyncvar ReadGameObjectSyncVar(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.GameObjectSyncvar\t "},{"title":"Class HasAuthorityAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/HasAuthorityAttribute","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class HasAuthorityAttribute","url":"docs/reference/Mirage/HasAuthorityAttribute#fields","content":"error​ If true, when the method is called from a client, it throws an error If false, no error is thrown, but the method won't execute useful for unity built in methods such as Await, Update, Start, etc. Declaration​ public bool error  "},{"title":"Class HeadlessAutoStart","type":0,"sectionRef":"#","url":"docs/reference/Mirage/HeadlessAutoStart","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class HeadlessAutoStart","url":"docs/reference/Mirage/HeadlessAutoStart#fields","content":"Server​ Declaration​ public NetworkServer Server  startOnHeadless​ Automatically invoke StartServer() If the application is a Server Build or run with the -batchMode ServerRpc line argument, StartServer is automatically invoked. Declaration​ public bool startOnHeadless  "},{"title":"Struct GameObjectSyncvar","type":0,"sectionRef":"#","url":"docs/reference/Mirage/GameObjectSyncvar","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Struct GameObjectSyncvar","url":"docs/reference/Mirage/GameObjectSyncvar#properties","content":"Value​ Declaration​ public GameObject Value { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Struct GameObjectSyncvar","url":"docs/reference/Mirage/GameObjectSyncvar#methods","content":"Equals(GameObjectSyncvar)​ Declaration​ public bool Equals(GameObjectSyncvar other)  Parameters​ Type\tName\tDescriptionMirage.GameObjectSyncvar\tother\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Class HeadlessFrameLimiter","type":0,"sectionRef":"#","url":"docs/reference/Mirage/HeadlessFrameLimiter","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class HeadlessFrameLimiter","url":"docs/reference/Mirage/HeadlessFrameLimiter#fields","content":"serverTickRate​ Server Update frequency, per second. Use around 60Hz for fast paced games like Counter-Strike to minimize latency. Use around 30Hz for games like WoW to minimize computations. Use around 1-10Hz for slow paced games like EVE. Declaration​ public int serverTickRate  "},{"title":"Methods​","type":1,"pageTitle":"Class HeadlessFrameLimiter","url":"docs/reference/Mirage/HeadlessFrameLimiter#methods","content":"Start()​ Set the frame rate for a headless server. Declaration​ public void Start()  "},{"title":"Interface IMessageSender","type":0,"sectionRef":"#","url":"docs/reference/Mirage/IMessageSender","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IMessageSender","url":"docs/reference/Mirage/IMessageSender#methods","content":"Send&lt;T&gt;(T, Channel)​ Declaration​ void Send&lt;T&gt;(T message, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionT\tmessage Mirage.Channel\tchannelId\t Send(ArraySegment&lt;Byte&gt;, Channel)​ Declaration​ void Send(ArraySegment&lt;byte&gt; segment, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tsegment Mirage.Channel\tchannelId\t Send&lt;T&gt;(T, INotifyCallBack)​ Declaration​ void Send&lt;T&gt;(T message, INotifyCallBack notifyCallBack)  Parameters​ Type\tName\tDescriptionT\tmessage Mirage.SocketLayer.INotifyCallBack\tnotifyCallBack\t "},{"title":"Class HostRendererVisibility","type":0,"sectionRef":"#","url":"docs/reference/Mirage/HostRendererVisibility","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class HostRendererVisibility","url":"docs/reference/Mirage/HostRendererVisibility#methods","content":"SetRenderers(Renderer[])​ Can be used to override default GetComponentsInChildren for renderers. Useful if setting up Renderer after Awake is called Declaration​ public void SetRenderers(Renderer[] renderers)  Parameters​ Type\tName\tDescriptionRenderer[]\trenderers\t SetHostVisibility(Boolean)​ Declaration​ protected virtual void SetHostVisibility(bool visible)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tvisible\t "},{"title":"Interface INetIdGenerator","type":0,"sectionRef":"#","url":"docs/reference/Mirage/INetIdGenerator","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface INetIdGenerator","url":"docs/reference/Mirage/INetIdGenerator#methods","content":"GenerateNetId()​ Generate your own specific net id. Declaration​ uint GenerateNetId()  Returns​ Type\tDescriptionSystem.UInt32\t "},{"title":"Interface IMessageReceiver","type":0,"sectionRef":"#","url":"docs/reference/Mirage/IMessageReceiver","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IMessageReceiver","url":"docs/reference/Mirage/IMessageReceiver#methods","content":"RegisterHandler&lt;T&gt;(MessageDelegateWithPlayer&lt;T&gt;, Boolean)​ Registers a handler for a network message that has INetworkPlayer and T Message parameters When network message are sent, the first 2 bytes are the Id for the type T. When message is received the handler with the matching Id is found and invoked Declaration​ void RegisterHandler&lt;T&gt;(MessageDelegateWithPlayer&lt;T&gt; handler, bool allowUnauthenticated)  Parameters​ Type\tName\tDescriptionMirage.MessageDelegateWithPlayer&lt;T&gt;\thandler System.Boolean\tallowUnauthenticated\t UnregisterHandler&lt;T&gt;()​ Declaration​ void UnregisterHandler&lt;T&gt;()  ClearHandlers()​ Declaration​ void ClearHandlers()  HandleMessage(INetworkPlayer, ArraySegment&lt;Byte&gt;)​ Declaration​ void HandleMessage(INetworkPlayer player, ArraySegment&lt;byte&gt; packet)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer System.ArraySegment&lt;System.Byte&gt;\tpacket\t "},{"title":"Interface INetworkVisibility","type":0,"sectionRef":"#","url":"docs/reference/Mirage/INetworkVisibility","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface INetworkVisibility","url":"docs/reference/Mirage/INetworkVisibility#methods","content":"OnCheckObserver(INetworkPlayer)​ Declaration​ bool OnCheckObserver(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\t Returns​ Type\tDescriptionSystem.Boolean\t OnRebuildObservers(HashSet&lt;INetworkPlayer&gt;, Boolean)​ Declaration​ void OnRebuildObservers(HashSet&lt;INetworkPlayer&gt; observers, bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.HashSet&lt;Mirage.INetworkPlayer&gt;\tobservers System.Boolean\tinitialize\t "},{"title":"Interface INetworkPlayer","type":0,"sectionRef":"#","url":"docs/reference/Mirage/INetworkPlayer","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface INetworkPlayer","url":"docs/reference/Mirage/INetworkPlayer#properties","content":"Connection​ Declaration​ IConnection Connection { get; }  Address​ The IP address / URL / FQDN associated with the connection. Can be useful for a game master to do IP Bans etc. Best used to get concrete Endpoint type based on the being used Declaration​ IEndPoint Address { get; }  IsConnecting​ Connect called on client, but server has not replied yet Declaration​ bool IsConnecting { get; }  IsConnected​ Server and Client are connected and can send messages Declaration​ bool IsConnected { get; }  Authentication​ Declaration​ PlayerAuthentication Authentication { get; }  IsAuthenticated​ Declaration​ bool IsAuthenticated { get; }  IsHost​ True if this Player is the local player on the server or client Declaration​ bool IsHost { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Interface INetworkPlayer","url":"docs/reference/Mirage/INetworkPlayer#methods","content":"SetAuthentication(PlayerAuthentication, Boolean)​ Declaration​ void SetAuthentication(PlayerAuthentication authentication, bool allowReplace = false)  Parameters​ Type\tName\tDescriptionMirage.Authentication.PlayerAuthentication\tauthentication System.Boolean\tallowReplace\t Disconnect()​ Declaration​ void Disconnect()  MarkAsDisconnected()​ Declaration​ void MarkAsDisconnected()  "},{"title":"Interface IObjectLocator","type":0,"sectionRef":"#","url":"docs/reference/Mirage/IObjectLocator","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Interface IObjectLocator","url":"docs/reference/Mirage/IObjectLocator#methods","content":"TryGetIdentity(UInt32, out NetworkIdentity)​ Finds a network identity by id Declaration​ bool TryGetIdentity(uint netId, out NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tnetId\tthe id of the object to find Mirage.NetworkIdentity\tidentity\tThe NetworkIdentity matching the netId or null if none is found Returns​ Type\tDescriptionSystem.Boolean\ttrue if identity is found and is not null "},{"title":"Interface IObjectOwner","type":0,"sectionRef":"#","url":"docs/reference/Mirage/IObjectOwner","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface IObjectOwner","url":"docs/reference/Mirage/IObjectOwner#properties","content":"Identity​ The main object owned by this player, normally the player's character Declaration​ NetworkIdentity Identity { get; set; }  HasCharacter​ Declaration​ bool HasCharacter { get; }  OwnedObjects​ All the objects owned by the player Declaration​ IReadOnlyCollection&lt;NetworkIdentity&gt; OwnedObjects { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Interface IObjectOwner","url":"docs/reference/Mirage/IObjectOwner#methods","content":"AddOwnedObject(NetworkIdentity)​ Declaration​ void AddOwnedObject(NetworkIdentity networkIdentity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tnetworkIdentity\t RemoveOwnedObject(NetworkIdentity)​ Declaration​ void RemoveOwnedObject(NetworkIdentity networkIdentity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tnetworkIdentity\t RemoveAllOwnedObject(Boolean)​ Removes all owned objects. This is useful to call when player disconnects to avoid objects being destroyed Declaration​ void RemoveAllOwnedObject(bool sendAuthorityChangeEvent)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tsendAuthorityChangeEvent\tShould message be send to owner client? If player is disconnecting you should set this false DestroyOwnedObjects()​ Destroys or unspawns all owned objects. This is called when the player is disconnects. It will be called after , so Disconnected can be used to remove any owned objects from the list before they are destroyed. Declaration​ void DestroyOwnedObjects()  "},{"title":"Interface ISceneLoader","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ISceneLoader","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface ISceneLoader","url":"docs/reference/Mirage/ISceneLoader#properties","content":"SceneIsReady​ Scene is fully loaded and we now can do things with player. Declaration​ bool SceneIsReady { get; set; }  "},{"title":"Class LocalPlayerAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/LocalPlayerAttribute","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class LocalPlayerAttribute","url":"docs/reference/Mirage/LocalPlayerAttribute#fields","content":"error​ If true, when the method is called from a client, it throws an error If false, no error is thrown, but the method won't execute useful for unity built in methods such as Await, Update, Start, etc. Declaration​ public bool error  "},{"title":"Delegate MessageDelegate<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MessageDelegate-1","content":"Delegate MessageDelegate&lt;T&gt; Syntax​ public delegate void MessageDelegate&lt;in T&gt;(T message); Type Parameters​ Name\tDescriptionT\t","keywords":""},{"title":"Interface IVisibilityTracker","type":0,"sectionRef":"#","url":"docs/reference/Mirage/IVisibilityTracker","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Interface IVisibilityTracker","url":"docs/reference/Mirage/IVisibilityTracker#properties","content":"VisList​ HashSet of all that this player can see Only valid on server Reverse collection for Declaration​ IReadOnlyCollection&lt;NetworkIdentity&gt; VisList { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Interface IVisibilityTracker","url":"docs/reference/Mirage/IVisibilityTracker#methods","content":"AddToVisList(NetworkIdentity)​ Called when sending spawn message to client Declaration​ void AddToVisList(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t RemoveFromVisList(NetworkIdentity)​ Called when sending destroy message to client Declaration​ void RemoveFromVisList(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t RemoveAllVisibleObjects()​ Removes all that this player can see This is called when loading a new scene Declaration​ void RemoveAllVisibleObjects()  ContainsInVisList(NetworkIdentity)​ Checks if player can see Declaration​ bool ContainsInVisList(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Delegate MessageDelegateAsync<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MessageDelegateAsync-1","content":"Delegate MessageDelegateAsync&lt;T&gt; Syntax​ public delegate UniTaskVoid MessageDelegateAsync&lt;in T&gt;(T message); Type Parameters​ Name\tDescriptionT\t","keywords":""},{"title":"Delegate MessageDelegateWithPlayer<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MessageDelegateWithPlayer-1","content":"Delegate MessageDelegateWithPlayer&lt;T&gt; Syntax​ public delegate void MessageDelegateWithPlayer&lt;in T&gt;(INetworkPlayer player, T message); Type Parameters​ Name\tDescriptionT\t","keywords":""},{"title":"Delegate MessageDelegateWithPlayerAsync<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MessageDelegateWithPlayerAsync-1","content":"Delegate MessageDelegateWithPlayerAsync&lt;T&gt; Syntax​ public delegate UniTaskVoid MessageDelegateWithPlayerAsync&lt;in T&gt;(INetworkPlayer player, T message); Type Parameters​ Name\tDescriptionT\t","keywords":""},{"title":"Class MessageWaiter<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MessageWaiter-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class MessageWaiter<T>","url":"docs/reference/Mirage/MessageWaiter-1#constructors","content":"MessageWaiter(NetworkClient, Boolean)​ Declaration​ public MessageWaiter(NetworkClient client, bool allowUnauthenticated = false)  Parameters​ Type\tName\tDescriptionMirage.NetworkClient\tclient System.Boolean\tallowUnauthenticated\t "},{"title":"Methods​","type":1,"pageTitle":"Class MessageWaiter<T>","url":"docs/reference/Mirage/MessageWaiter-1#methods","content":"WaitAsync()​ Declaration​ public UniTask&lt;(bool disconnected, T message)&gt; WaitAsync()  Returns​ Type\tDescriptionUniTask&lt;System.ValueTuple&lt;System.Boolean, T&gt;&gt;\t Callback(MessageDelegateWithPlayer&lt;T&gt;)​ Use callback instead of async for methods that uses ArraySegment, because internal buffer will be recylced and data will be load before Async completes Declaration​ public void Callback(MessageDelegateWithPlayer&lt;T&gt; callback)  Parameters​ Type\tName\tDescriptionMirage.MessageDelegateWithPlayer&lt;T&gt;\tcallback\t "},{"title":"Class MessageHandler","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MessageHandler","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class MessageHandler","url":"docs/reference/Mirage/MessageHandler#constructors","content":"MessageHandler(IObjectLocator, Boolean, Boolean)​ Declaration​ public MessageHandler(IObjectLocator objectLocator, bool disconnectOnException, bool rethrowException = false)  Parameters​ Type\tName\tDescriptionMirage.IObjectLocator\tobjectLocator System.Boolean\tdisconnectOnException System.Boolean\trethrowException\t "},{"title":"Methods​","type":1,"pageTitle":"Class MessageHandler","url":"docs/reference/Mirage/MessageHandler#methods","content":"RegisterHandler&lt;T&gt;(MessageDelegateWithPlayer&lt;T&gt;, Boolean)​ Declaration​ public void RegisterHandler&lt;T&gt;(MessageDelegateWithPlayer&lt;T&gt; handler, bool allowUnauthenticated)  Parameters​ Type\tName\tDescriptionMirage.MessageDelegateWithPlayer&lt;T&gt;\thandler System.Boolean\tallowUnauthenticated\t UnregisterHandler&lt;T&gt;()​ Unregister a handler for a particular message type. Note: Messages dont need to be unregister when server or client stops as MessageHandler will be re-created next time server or client starts Declaration​ public void UnregisterHandler&lt;T&gt;()  ClearHandlers()​ Clear all registered callback handlers. Declaration​ public void ClearHandlers()  HandleMessage(INetworkPlayer, ArraySegment&lt;Byte&gt;)​ Declaration​ public void HandleMessage(INetworkPlayer player, ArraySegment&lt;byte&gt; packet)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer System.ArraySegment&lt;System.Byte&gt;\tpacket\t LogAndCheckDisconnect(INetworkPlayer, Exception)​ Declaration​ public void LogAndCheckDisconnect(INetworkPlayer player, Exception e)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer System.Exception\te\t "},{"title":"Class MessageReceiverExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MessageReceiverExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class MessageReceiverExtensions","url":"docs/reference/Mirage/MessageReceiverExtensions#methods","content":"RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegateWithPlayer&lt;T&gt;)​ Registers a handler for a network message that has INetworkPlayer and T Message parameters When network message are sent, the first 2 bytes are the Id for the type T. When message is received the handler with the matching Id is found and invoked Declaration​ public static void RegisterHandler&lt;T&gt;(this IMessageReceiver receiver, MessageDelegateWithPlayer&lt;T&gt; handler)  Parameters​ Type\tName\tDescriptionMirage.IMessageReceiver\treceiver Mirage.MessageDelegateWithPlayer&lt;T&gt;\thandler\t RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegate&lt;T&gt;, Boolean)​ Registers a handler for a network message that has just T Message parameter When network message are sent, the first 2 bytes are the Id for the type T. When message is received the handler with the matching Id is found and invoked Declaration​ public static void RegisterHandler&lt;T&gt;(this IMessageReceiver receiver, MessageDelegate&lt;T&gt; handler, bool allowUnauthenticated = false)  Parameters​ Type\tName\tDescriptionMirage.IMessageReceiver\treceiver Mirage.MessageDelegate&lt;T&gt;\thandler System.Boolean\tallowUnauthenticated\t RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegateWithPlayerAsync&lt;T&gt;, Boolean)​ Registers a handler for a network message that has INetworkPlayer and T Message parameters and returns UniTaskVoid. This allows for async handles without allocations When network message are sent, the first 2 bytes are the Id for the type T. When message is received the handler with the matching Id is found and invoked Declaration​ public static void RegisterHandler&lt;T&gt;(this IMessageReceiver receiver, MessageDelegateWithPlayerAsync&lt;T&gt; handler, bool allowUnauthenticated = false)  Parameters​ Type\tName\tDescriptionMirage.IMessageReceiver\treceiver Mirage.MessageDelegateWithPlayerAsync&lt;T&gt;\thandler System.Boolean\tallowUnauthenticated\t RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegateAsync&lt;T&gt;, Boolean)​ Registers a handler for a network message that has just T Message parameter and returns UniTaskVoid. This allows for async handles without allocations When network message are sent, the first 2 bytes are the Id for the type T. When message is received the handler with the matching Id is found and invoked Declaration​ public static void RegisterHandler&lt;T&gt;(this IMessageReceiver receiver, MessageDelegateAsync&lt;T&gt; handler, bool allowUnauthenticated = false)  Parameters​ Type\tName\tDescriptionMirage.IMessageReceiver\treceiver Mirage.MessageDelegateAsync&lt;T&gt;\thandler System.Boolean\tallowUnauthenticated\t "},{"title":"Class MethodInvocationException","type":0,"sectionRef":"#","url":"docs/reference/Mirage/MethodInvocationException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class MethodInvocationException","url":"docs/reference/Mirage/MethodInvocationException#constructors","content":"MethodInvocationException()​ Initializes a new instance of the class Declaration​ public MethodInvocationException()  MethodInvocationException(String)​ Initializes a new instance of the class Declaration​ public MethodInvocationException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\tA that describes the exception. MethodInvocationException(SerializationInfo, StreamingContext)​ Declaration​ protected MethodInvocationException(SerializationInfo info, StreamingContext context)  Parameters​ Type\tName\tDescriptionSystem.Runtime.Serialization.SerializationInfo\tinfo System.Runtime.Serialization.StreamingContext\tcontext\t "},{"title":"Struct NetworkBehaviorSyncvar","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkBehaviorSyncvar","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct NetworkBehaviorSyncvar","url":"docs/reference/Mirage/NetworkBehaviorSyncvar#constructors","content":"NetworkBehaviorSyncvar(NetworkBehaviour)​ Declaration​ public NetworkBehaviorSyncvar(NetworkBehaviour behaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour\t "},{"title":"Properties​","type":1,"pageTitle":"Struct NetworkBehaviorSyncvar","url":"docs/reference/Mirage/NetworkBehaviorSyncvar#properties","content":"Value​ Declaration​ public NetworkBehaviour Value { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Struct NetworkBehaviorSyncvar","url":"docs/reference/Mirage/NetworkBehaviorSyncvar#methods","content":"GetAs&lt;T&gt;()​ returns Value cast as T Declaration​ public T GetAs&lt;T&gt;() where T : NetworkBehaviour  Returns​ Type\tDescriptionT\t Equals(NetworkBehaviorSyncvar)​ Declaration​ public bool Equals(NetworkBehaviorSyncvar other)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviorSyncvar\tother\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Class NetworkAnimator","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkAnimator","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkAnimator","url":"docs/reference/Mirage/NetworkAnimator#fields","content":"ClientAuthority​ Declaration​ public bool ClientAuthority  Animator​ The animator component to synchronize. Declaration​ public Animator Animator  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkAnimator","url":"docs/reference/Mirage/NetworkAnimator#methods","content":"OnSerialize(NetworkWriter, Boolean)​ Custom Serialization Declaration​ public override bool OnSerialize(NetworkWriter writer, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Boolean\tinitialState\t Returns​ Type\tDescriptionSystem.Boolean\t OnDeserialize(NetworkReader, Boolean)​ Custom Deserialization Declaration​ public override void OnDeserialize(NetworkReader reader, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Boolean\tinitialState\t SetTrigger(String)​ Causes an animation trigger to be invoked for a networked object. If local authority is set, and this is called from the client, then the trigger will be invoked on the server and all clients. If not, then this is called on the server, and the trigger will be called on all clients. Declaration​ public void SetTrigger(string triggerName)  Parameters​ Type\tName\tDescriptionSystem.String\ttriggerName\tName of trigger. SetTrigger(Int32)​ Causes an animation trigger to be invoked for a networked object. Declaration​ public void SetTrigger(int hash)  Parameters​ Type\tName\tDescriptionSystem.Int32\thash\tHash id of trigger (from the Animator). ResetTrigger(String)​ Causes an animation trigger to be reset for a networked object. If local authority is set, and this is called from the client, then the trigger will be reset on the server and all clients. If not, then this is called on the server, and the trigger will be reset on all clients. Declaration​ public void ResetTrigger(string triggerName)  Parameters​ Type\tName\tDescriptionSystem.String\ttriggerName\tName of trigger. ResetTrigger(Int32)​ Causes an animation trigger to be reset for a networked object. Declaration​ public void ResetTrigger(int hash)  Parameters​ Type\tName\tDescriptionSystem.Int32\thash\tHash id of trigger (from the Animator). "},{"title":"Class NetworkBehaviorSerializers","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkBehaviorSerializers","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class NetworkBehaviorSerializers","url":"docs/reference/Mirage/NetworkBehaviorSerializers#methods","content":"WriteNetworkBehaviorSyncVar(NetworkWriter, NetworkBehaviorSyncvar)​ Declaration​ public static void WriteNetworkBehaviorSyncVar(this NetworkWriter writer, NetworkBehaviorSyncvar id)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Mirage.NetworkBehaviorSyncvar\tid\t ReadNetworkBehaviourSyncVar(NetworkReader)​ Declaration​ public static NetworkBehaviorSyncvar ReadNetworkBehaviourSyncVar(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.NetworkBehaviorSyncvar\t WriteGenericNetworkBehaviorSyncVar&lt;T&gt;(NetworkWriter, NetworkBehaviorSyncvar&lt;T&gt;)​ Declaration​ [WeaverSerializeCollection] public static void WriteGenericNetworkBehaviorSyncVar&lt;T&gt;(this NetworkWriter writer, NetworkBehaviorSyncvar&lt;T&gt; id) where T : NetworkBehaviour  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Mirage.NetworkBehaviorSyncvar&lt;T&gt;\tid\t ReadGenericNetworkBehaviourSyncVar&lt;T&gt;(NetworkReader)​ Declaration​ [WeaverSerializeCollection] public static NetworkBehaviorSyncvar&lt;T&gt; ReadGenericNetworkBehaviourSyncVar&lt;T&gt;(this NetworkReader reader) where T : NetworkBehaviour  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.NetworkBehaviorSyncvar&lt;T&gt;\t "},{"title":"Struct NetworkBehaviorSyncvar<T>","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkBehaviorSyncvar-1","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct NetworkBehaviorSyncvar<T>","url":"docs/reference/Mirage/NetworkBehaviorSyncvar-1#constructors","content":"NetworkBehaviorSyncvar(T)​ Declaration​ public NetworkBehaviorSyncvar(T behaviour)  Parameters​ Type\tName\tDescriptionT\tbehaviour\t "},{"title":"Properties​","type":1,"pageTitle":"Struct NetworkBehaviorSyncvar<T>","url":"docs/reference/Mirage/NetworkBehaviorSyncvar-1#properties","content":"Value​ Declaration​ public T Value { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Struct NetworkBehaviorSyncvar<T>","url":"docs/reference/Mirage/NetworkBehaviorSyncvar-1#methods","content":"Equals(NetworkBehaviorSyncvar&lt;T&gt;)​ Declaration​ public bool Equals(NetworkBehaviorSyncvar&lt;T&gt; other)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviorSyncvar&lt;T&gt;\tother\t Returns​ Type\tDescriptionSystem.Boolean\t Equals(NetworkBehaviorSyncvar)​ Declaration​ public bool Equals(NetworkBehaviorSyncvar other)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviorSyncvar\tother\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Class NetworkDiagnostics","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkDiagnostics","content":"Class NetworkDiagnostics Provides profiling information from mirror A profiler can subscribe to these events and present the data in a friendly way to the user Inheritance​ System.Object Inherited Members​ Show Syntax​ public static class NetworkDiagnostics ","keywords":""},{"title":"Struct NetworkBehaviour.Id","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkBehaviour.Id","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct NetworkBehaviour.Id","url":"docs/reference/Mirage/NetworkBehaviour.Id#constructors","content":"Id(UInt32, Int32)​ Declaration​ public Id(uint netId, int componentIndex)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tnetId System.Int32\tcomponentIndex\t Id(NetworkBehaviour)​ Declaration​ public Id(NetworkBehaviour behaviour)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour\tbehaviour\t "},{"title":"Fields​","type":1,"pageTitle":"Struct NetworkBehaviour.Id","url":"docs/reference/Mirage/NetworkBehaviour.Id#fields","content":"NetId​ Declaration​ public readonly uint NetId  ComponentIndex​ Declaration​ public readonly int ComponentIndex  "},{"title":"Methods​","type":1,"pageTitle":"Struct NetworkBehaviour.Id","url":"docs/reference/Mirage/NetworkBehaviour.Id#methods","content":"GetHashCode()​ Declaration​ public override int GetHashCode()  Returns​ Type\tDescriptionSystem.Int32\t Equals(NetworkBehaviour.Id)​ Declaration​ public bool Equals(NetworkBehaviour.Id other)  Parameters​ Type\tName\tDescriptionMirage.NetworkBehaviour.Id\tother\t Returns​ Type\tDescriptionSystem.Boolean\t Equals(Object)​ Declaration​ public override bool Equals(object obj)  Parameters​ Type\tName\tDescriptionSystem.Object\tobj\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Struct NetworkDiagnostics.MessageInfo","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkDiagnostics.MessageInfo","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct NetworkDiagnostics.MessageInfo","url":"docs/reference/Mirage/NetworkDiagnostics.MessageInfo#constructors","content":"MessageInfo(Object, Int32, Int32)​ Declaration​ public MessageInfo(object message, int bytes, int count)  Parameters​ Type\tName\tDescriptionSystem.Object\tmessage System.Int32\tbytes System.Int32\tcount\t "},{"title":"Fields​","type":1,"pageTitle":"Struct NetworkDiagnostics.MessageInfo","url":"docs/reference/Mirage/NetworkDiagnostics.MessageInfo#fields","content":"message​ The message being sent Declaration​ public readonly object message  bytes​ how big was the message (does not include transport headers) Declaration​ public readonly int bytes  count​ How many connections was the message sent to If an object has a lot of observers this count could be high Declaration​ public readonly int count  "},{"title":"Class NetworkedPrefabAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkedPrefabAttribute","content":"Class NetworkedPrefabAttribute Forces the user to provide a prefab that has a NetworkIdentity component and is registered. Also provides a fix button to fix the prefab if it hasn't been networked. Inheritance​ System.Object Syntax​ [AttributeUsage(AttributeTargets.Field)] public sealed class NetworkedPrefabAttribute : PropertyAttribute ","keywords":""},{"title":"Class NetworkClient","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkClient","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkClient","url":"docs/reference/Mirage/NetworkClient#fields","content":"EnablePeerMetrics​ Declaration​ public bool EnablePeerMetrics  MetricsSize​ Declaration​ public int MetricsSize  SocketFactory​ Declaration​ public SocketFactory SocketFactory  ObjectManager​ Declaration​ public ClientObjectManager ObjectManager  DisconnectOnException​ Declaration​ public bool DisconnectOnException  RethrowException​ Declaration​ public bool RethrowException  RunInBackground​ Declaration​ public bool RunInBackground  Authenticator​ Declaration​ public AuthenticatorSettings Authenticator  ManualUpdate​ Set to true if you want to manually call and and stop mirage from automatically calling them Declaration​ public bool ManualUpdate  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkClient","url":"docs/reference/Mirage/NetworkClient#properties","content":"Metrics​ Declaration​ public Metrics Metrics { get; }  PeerConfig​ Config for peer, if not set will use default settings Declaration​ public Config PeerConfig { get; set; }  PeerPoolMetrics​ Declaration​ public PoolMetrics? PeerPoolMetrics { get; }  Started​ Event fires when the client starts, before it has connected to the Server. Declaration​ public IAddLateEventUnity Started { get; }  Connected​ Event fires once the Client has connected its Server. Declaration​ public IAddLateEventUnity&lt;INetworkPlayer&gt; Connected { get; }  Authenticated​ Event fires after the Client connection has successfully been authenticated with its Server. Declaration​ public IAddLateEventUnity&lt;INetworkPlayer&gt; Authenticated { get; }  Disconnected​ Event fires after the Client has disconnected from its Server and Cleanup has been called. Declaration​ public IAddLateEventUnity&lt;ClientStoppedReason&gt; Disconnected { get; }  Player​ The NetworkConnection object this client is using. Declaration​ public INetworkPlayer Player { get; }  Active​ active is true while a client is connecting/connected (= while the network is active) Declaration​ public bool Active { get; }  IsConnected​ This gives the current connection status of the client. Declaration​ public bool IsConnected { get; }  World​ Declaration​ public NetworkWorld World { get; }  SyncVarSender​ Declaration​ public SyncVarSender SyncVarSender { get; }  MessageHandler​ Declaration​ public MessageHandler MessageHandler { get; }  IsLocalClient​ Is this NetworkClient connected to a local server in host mode Declaration​ [Obsolete(&quot;use IsHost instead&quot;)] public bool IsLocalClient { get; }  IsHost​ Is this NetworkClient connected to a local server in host mode Declaration​ public bool IsHost { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkClient","url":"docs/reference/Mirage/NetworkClient#methods","content":"Connect(String, Nullable&lt;UInt16&gt;)​ Connect client to a NetworkServer instance. Declaration​ public void Connect(string address = null, ushort? port = default(ushort? ))  Parameters​ Type\tName\tDescriptionSystem.String\taddress System.Nullable&lt;System.UInt16&gt;\tport\t Disconnect()​ Disconnect from server. The disconnect message will be invoked. Declaration​ public void Disconnect()  Send&lt;T&gt;(T, Channel)​ This sends a network message with a message Id to the server. This message is sent on channel zero, which by default is the reliable channel. The message must be an instance of a class derived from MessageBase. The message id passed to Send() is used to identify the handler function to invoke on the server when the message is received. Declaration​ public void Send&lt;T&gt;(T message, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionT\tmessage Mirage.Channel\tchannelId\t Send(ArraySegment&lt;Byte&gt;, Channel)​ Declaration​ public void Send(ArraySegment&lt;byte&gt; segment, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tsegment Mirage.Channel\tchannelId\t Send&lt;T&gt;(T, INotifyCallBack)​ Declaration​ public void Send&lt;T&gt;(T message, INotifyCallBack notifyCallBack)  Parameters​ Type\tName\tDescriptionT\tmessage Mirage.SocketLayer.INotifyCallBack\tnotifyCallBack\t UpdateReceive()​ Declaration​ public void UpdateReceive()  UpdateSent()​ Declaration​ public void UpdateSent()  "},{"title":"Class NetworkExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkExtensions","content":"Class NetworkExtensions Inheritance​ System.Object Inherited Members​ Show Syntax​ public static class NetworkExtensions ","keywords":""},{"title":"Enum NetworkFlags","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkFlags","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum NetworkFlags","url":"docs/reference/Mirage/NetworkFlags#fields","content":"NotActive​ If both server and client are not active. Can be used to check for singleplayer or unspawned object Declaration​ NotActive = 1  Server​ Declaration​ Server = 2  Client​ Declaration​ Client = 4  Active​ If either Server or Client is active. Note this will not check host mode. For host mode you need to use and Declaration​ Active = 6  HasAuthority​ Declaration​ HasAuthority = 8  LocalOwner​ Declaration​ LocalOwner = 16  "},{"title":"Class NetworkBehaviour","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkBehaviour","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkBehaviour","url":"docs/reference/Mirage/NetworkBehaviour#fields","content":"_nextSyncTime​ Declaration​ protected double _nextSyncTime  SyncSettings​ Sync settings for this NetworkBehaviour Settings will be hidden in inspector unless Behaviour has SyncVar or SyncObjects Declaration​ public SyncSettings SyncSettings  syncObjects​ objects that can synchronize themselves, such as synclists Declaration​ protected readonly List&lt;ISyncObject&gt; syncObjects  COMPONENT_INDEX_NOT_FOUND​ Declaration​ public const int COMPONENT_INDEX_NOT_FOUND = -1  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkBehaviour","url":"docs/reference/Mirage/NetworkBehaviour#properties","content":"IsServer​ Returns true if this object is active on an active server. This is only true if the object has been spawned. This is different from NetworkServer.active, which is true if the server itself is active rather than this object being active. Declaration​ public bool IsServer { get; }  IsClient​ Returns true if running as a client and this object was spawned by a server. Declaration​ public bool IsClient { get; }  IsLocalClient​ Returns true if we're on host mode. Declaration​ [Obsolete(&quot;use IsHost instead&quot;)] public bool IsLocalClient { get; }  IsHost​ Returns true if we're on host mode. Declaration​ public bool IsHost { get; }  IsLocalPlayer​ This returns true if this object is the one that represents the player on the local machine. In multiplayer games, there are multiple instances of the Player object. The client needs to know which one is for &quot;themselves&quot; so that only that player processes input and potentially has a camera attached. The IsLocalPlayer function will return true only for the player instance that belongs to the player on the local machine, so it can be used to filter out input for non-local players. Declaration​ public bool IsLocalPlayer { get; }  IsServerOnly​ True if this object only exists on the server Declaration​ public bool IsServerOnly { get; }  IsClientOnly​ True if this object exists on a client that is not also acting as a server Declaration​ public bool IsClientOnly { get; }  HasAuthority​ This returns true if this object is the authoritative version of the object in the distributed network application. The value on the NetworkIdentity determines how authority is determined. For most objects, authority is held by the server. For objects with set, authority is held by the client of that player. Declaration​ public bool HasAuthority { get; }  NetId​ The unique network Id of this object. This is assigned at runtime by the network server and will be unique for all objects for that network session. Declaration​ public uint NetId { get; }  Server​ The associated to this object. Declaration​ public NetworkServer Server { get; }  ServerObjectManager​ Quick Reference to the NetworkIdentities ServerObjectManager. Present only for server/host instances. Declaration​ public ServerObjectManager ServerObjectManager { get; }  Client​ The associated to this object. Declaration​ public NetworkClient Client { get; }  ClientObjectManager​ Quick Reference to the NetworkIdentities ClientObjectManager. Present only for instances instances. Declaration​ public ClientObjectManager ClientObjectManager { get; }  Owner​ The associated with this This is only valid for player objects on the server. Declaration​ public INetworkPlayer Owner { get; }  World​ Declaration​ public NetworkWorld World { get; }  NetworkTime​ Returns the appropriate NetworkTime instance based on if this NetworkBehaviour is running as a Server or Client. Declaration​ public NetworkTime NetworkTime { get; }  BehaviourId​ Get Id of this NetworkBehaviour, Its NetId and ComponentIndex Declaration​ public NetworkBehaviour.Id BehaviourId { get; }  SyncVarDirtyBits​ Declaration​ protected ulong SyncVarDirtyBits { get; }  AnySyncObjectDirty​ Declaration​ protected bool AnySyncObjectDirty { get; }  Identity​ Returns the NetworkIdentity of this object Declaration​ public NetworkIdentity Identity { get; }  ComponentIndex​ Returns the index of the component on this object Declaration​ public int ComponentIndex { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkBehaviour","url":"docs/reference/Mirage/NetworkBehaviour#methods","content":"GetSyncVarHookGuard(UInt64)​ Declaration​ protected bool GetSyncVarHookGuard(ulong dirtyBit)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tdirtyBit\t Returns​ Type\tDescriptionSystem.Boolean\t SetSyncVarHookGuard(UInt64, Boolean)​ Declaration​ protected void SetSyncVarHookGuard(ulong dirtyBit, bool value)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tdirtyBit System.Boolean\tvalue\t InitSyncObject(ISyncObject)​ Declaration​ protected void InitSyncObject(ISyncObject syncObject)  Parameters​ Type\tName\tDescriptionMirage.Collections.ISyncObject\tsyncObject\t UpdateSyncObjectShouldSync()​ Call this after updating SyncSettings to update all SyncObjects This only needs to be called manually if updating syncSettings at runtime. Mirage will automatically call this after serializing or deserializing with initialState Declaration​ public void UpdateSyncObjectShouldSync()  SyncVarEqual&lt;T&gt;(T, T)​ Declaration​ protected bool SyncVarEqual&lt;T&gt;(T value, T fieldValue)  Parameters​ Type\tName\tDescriptionT\tvalue T\tfieldValue\t Returns​ Type\tDescriptionSystem.Boolean\t SetDirtyBit(UInt64)​ Used to set the behaviour as dirty, so that a network update will be sent for the object. these are masks, not bit numbers, ie. 0x004 not 2 Declaration​ public void SetDirtyBit(ulong bitMask)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tbitMask\tBit mask to set. ClearDirtyBit(UInt64)​ Used to clear dirty bit. Object may still be in dirty list, so will be checked in next update. but values in this mask will no longer be set until they are changed again Declaration​ public void ClearDirtyBit(ulong bitMask)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tbitMask\tBit mask to set. ClearDirtyBits()​ Declaration​ public void ClearDirtyBits()  ClearShouldSync(Double)​ Clears dirty bits and sets the next sync time Declaration​ public void ClearShouldSync(double now)  Parameters​ Type\tName\tDescriptionSystem.Double\tnow\t ShouldSync(Double)​ True if this behaviour is dirty and it is time to sync Declaration​ public bool ShouldSync(double time)  Parameters​ Type\tName\tDescriptionSystem.Double\ttime\t Returns​ Type\tDescriptionSystem.Boolean\t TimeToSync(Double)​ If it is time to sync based on last sync and Declaration​ public bool TimeToSync(double time)  Parameters​ Type\tName\tDescriptionSystem.Double\ttime\t Returns​ Type\tDescriptionSystem.Boolean\t AnyDirtyBits()​ Are any SyncVar or SyncObjects dirty Declaration​ public bool AnyDirtyBits()  Returns​ Type\tDescriptionSystem.Boolean\t OnSerialize(NetworkWriter, Boolean)​ Virtual function to override to send custom serialization data. The corresponding function to send serialization data is OnDeserialize(). Declaration​ public virtual bool OnSerialize(NetworkWriter writer, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\tWriter to use to write to the stream. System.Boolean\tinitialState\tIf this is being called to send initial state. Returns​ Type\tDescriptionSystem.Boolean\tTrue if data was written. OnDeserialize(NetworkReader, Boolean)​ Virtual function to override to receive custom serialization data. The corresponding function to send serialization data is OnSerialize(). Declaration​ public virtual void OnDeserialize(NetworkReader reader, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\tReader to read from the stream. System.Boolean\tinitialState\tTrue if being sent initial state. SerializeSyncVars(NetworkWriter, Boolean)​ Declaration​ public virtual bool SerializeSyncVars(NetworkWriter writer, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Boolean\tinitialState\t Returns​ Type\tDescriptionSystem.Boolean\t DeserializeSyncVars(NetworkReader, Boolean)​ Declaration​ public virtual void DeserializeSyncVars(NetworkReader reader, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Boolean\tinitialState\t SetDeserializeMask(UInt64, Int32)​ Declaration​ protected void SetDeserializeMask(ulong dirtyBit, int offset)  Parameters​ Type\tName\tDescriptionSystem.UInt64\tdirtyBit System.Int32\toffset\t SerializeObjects(NetworkWriter, Boolean)​ Declaration​ public bool SerializeObjects(NetworkWriter writer, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Boolean\tinitialState\t Returns​ Type\tDescriptionSystem.Boolean\t SerializeObjectsAll(NetworkWriter)​ Declaration​ public bool SerializeObjectsAll(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t Returns​ Type\tDescriptionSystem.Boolean\t SerializeObjectsDelta(NetworkWriter)​ Declaration​ public bool SerializeObjectsDelta(NetworkWriter writer)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter\t Returns​ Type\tDescriptionSystem.Boolean\t GetRpcCount()​ Declaration​ protected virtual int GetRpcCount()  Returns​ Type\tDescriptionSystem.Int32\t RegisterRpc(RemoteCallCollection)​ Declaration​ protected virtual void RegisterRpc(RemoteCallCollection collection)  Parameters​ Type\tName\tDescriptionMirage.RemoteCalls.RemoteCallCollection\tcollection\t "},{"title":"Class NetworkIdentitySerializers","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkIdentitySerializers","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class NetworkIdentitySerializers","url":"docs/reference/Mirage/NetworkIdentitySerializers#methods","content":"WriteNetworkIdentitySyncVar(NetworkWriter, NetworkIdentitySyncvar)​ Declaration​ public static void WriteNetworkIdentitySyncVar(this NetworkWriter writer, NetworkIdentitySyncvar id)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Mirage.NetworkIdentitySyncvar\tid\t ReadNetworkIdentitySyncVar(NetworkReader)​ Declaration​ public static NetworkIdentitySyncvar ReadNetworkIdentitySyncVar(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.NetworkIdentitySyncvar\t "},{"title":"Struct NetworkIdentitySyncvar","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkIdentitySyncvar","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Struct NetworkIdentitySyncvar","url":"docs/reference/Mirage/NetworkIdentitySyncvar#properties","content":"Value​ Declaration​ public NetworkIdentity Value { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Struct NetworkIdentitySyncvar","url":"docs/reference/Mirage/NetworkIdentitySyncvar#methods","content":"Equals(NetworkIdentitySyncvar)​ Declaration​ public bool Equals(NetworkIdentitySyncvar other)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentitySyncvar\tother\t Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Class NetworkInspectorCallbacks","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkInspectorCallbacks","content":"Class NetworkInspectorCallbacks Callbacks for Inheritance​ System.Object Mirage.NetworkBehaviour Inherited Members​ Show Mirage.NetworkBehaviour._nextSyncTime Mirage.NetworkBehaviour.SyncSettings Mirage.NetworkBehaviour.IsServer Mirage.NetworkBehaviour.IsClient Mirage.NetworkBehaviour.IsLocalClient Mirage.NetworkBehaviour.IsHost Mirage.NetworkBehaviour.IsLocalPlayer Mirage.NetworkBehaviour.IsServerOnly Mirage.NetworkBehaviour.IsClientOnly Mirage.NetworkBehaviour.HasAuthority Mirage.NetworkBehaviour.NetId Mirage.NetworkBehaviour.Server Mirage.NetworkBehaviour.ServerObjectManager Mirage.NetworkBehaviour.Client Mirage.NetworkBehaviour.ClientObjectManager Mirage.NetworkBehaviour.Owner Mirage.NetworkBehaviour.World Mirage.NetworkBehaviour.NetworkTime Mirage.NetworkBehaviour.BehaviourId Mirage.NetworkBehaviour.SyncVarDirtyBits Mirage.NetworkBehaviour.AnySyncObjectDirty Mirage.NetworkBehaviour.syncObjects Mirage.NetworkBehaviour.Identity Mirage.NetworkBehaviour.COMPONENT_INDEX_NOT_FOUND Mirage.NetworkBehaviour.ComponentIndex Mirage.NetworkBehaviour.InitSyncObject(Mirage.Collections.ISyncObject) Mirage.NetworkBehaviour.UpdateSyncObjectShouldSync() Mirage.NetworkBehaviour.SyncVarEqual&lt;T&gt;(T, T) Mirage.NetworkBehaviour.ClearDirtyBits() Mirage.NetworkBehaviour.AnyDirtyBits() Mirage.NetworkBehaviour.SerializeObjectsAll(Mirage.Serialization.NetworkWriter) Mirage.NetworkBehaviour.SerializeObjectsDelta(Mirage.Serialization.NetworkWriter) Mirage.NetworkBehaviour.GetRpcCount() Mirage.NetworkBehaviour.RegisterRpc(Mirage.RemoteCalls.RemoteCallCollection) Syntax​ public class NetworkInspectorCallbacks : NetworkBehaviour ","keywords":""},{"title":"Class NetworkManager","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkManager","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkManager","url":"docs/reference/Mirage/NetworkManager#fields","content":"Server​ Declaration​ public NetworkServer Server  Client​ Declaration​ public NetworkClient Client  NetworkSceneManager​ Declaration​ public NetworkSceneManager NetworkSceneManager  ServerObjectManager​ Declaration​ public ServerObjectManager ServerObjectManager  ClientObjectManager​ Declaration​ public ClientObjectManager ClientObjectManager  ValidateReferences​ Declaration​ public bool ValidateReferences  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkManager","url":"docs/reference/Mirage/NetworkManager#properties","content":"IsNetworkActive​ True if the server or client is started and running This is set True in StartServer / StartClient, and set False in StopServer / StopClient Declaration​ public bool IsNetworkActive { get; }  NetworkMode​ helper enum to know if we started the NetworkManager as server/client/host. Declaration​ public NetworkManagerMode NetworkMode { get; }  "},{"title":"Class NetworkManagerGUI","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkManagerGUI","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkManagerGUI","url":"docs/reference/Mirage/NetworkManagerGUI#fields","content":"NetworkAddress​ Declaration​ public string NetworkAddress  AutoConfigureNetworkManager​ Declaration​ public bool AutoConfigureNetworkManager  NetworkManager​ Declaration​ public NetworkManager NetworkManager  Scale​ Declaration​ public float Scale  GUIAnchor​ Declaration​ public TextAnchor GUIAnchor  "},{"title":"Enum NetworkManagerMode","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkManagerMode","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum NetworkManagerMode","url":"docs/reference/Mirage/NetworkManagerMode#fields","content":"None​ Declaration​ None = 0  Server​ Declaration​ Server = 1  Client​ Declaration​ Client = 2  Host​ Declaration​ Host = 3  "},{"title":"Class NetworkManagerHud","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkManagerHud","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkManagerHud","url":"docs/reference/Mirage/NetworkManagerHud#fields","content":"NetworkManager​ Declaration​ public NetworkManager NetworkManager  NetworkAddress​ Declaration​ public string NetworkAddress  DontDestroy​ Declaration​ public bool DontDestroy  NetworkAddressInput​ Declaration​ public InputField NetworkAddressInput  OfflineGO​ Declaration​ public GameObject OfflineGO  OnlineGO​ Declaration​ public GameObject OnlineGO  StatusLabel​ Declaration​ public Text StatusLabel  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkManagerHud","url":"docs/reference/Mirage/NetworkManagerHud#methods","content":"StartHostButtonHandler()​ Declaration​ public void StartHostButtonHandler()  StartServerOnlyButtonHandler()​ Declaration​ public void StartServerOnlyButtonHandler()  StartClientButtonHandler()​ Declaration​ public void StartClientButtonHandler()  StopButtonHandler()​ Declaration​ public void StopButtonHandler()  OnNetworkAddressInputUpdate()​ Declaration​ public void OnNetworkAddressInputUpdate()  "},{"title":"Class NetworkIdentity","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkIdentity","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkIdentity","url":"docs/reference/Mirage/NetworkIdentity#fields","content":"SpawnSettings​ Declaration​ public NetworkSpawnSettings SpawnSettings  observers​ The set of network connections (players) that can see this object. Declaration​ public readonly HashSet&lt;INetworkPlayer&gt; observers  ServerObjectManager​ The ServerObjectManager is present only for server/host instances. Declaration​ public ServerObjectManager ServerObjectManager  ClientObjectManager​ The ClientObjectManager is present only for client instances. Declaration​ public ClientObjectManager ClientObjectManager  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkIdentity","url":"docs/reference/Mirage/NetworkIdentity#properties","content":"IsClient​ Returns true if running as a client and this object was spawned by a server. Declaration​ public bool IsClient { get; }  IsServer​ Returns true if NetworkServer.active and server is not stopped. Declaration​ public bool IsServer { get; }  IsLocalClient​ Returns true if we're on host mode. Declaration​ [Obsolete(&quot;use IsHost instead&quot;)] public bool IsLocalClient { get; }  IsHost​ Returns true if we're on host mode. Declaration​ public bool IsHost { get; }  IsLocalPlayer​ This returns true if this object is the one that represents the player on the local machine. This is set when the server has spawned an object for this particular client. Declaration​ public bool IsLocalPlayer { get; }  HasAuthority​ This returns true if this object is the authoritative player object on the client. This value is determined at runtime. For most objects, authority is held by the server. For objects that had their authority set by AssignClientAuthority on the server, this will be true on the client that owns the object. NOT on other clients. Declaration​ public bool HasAuthority { get; }  NetId​ Unique identifier for this particular object instance, used for tracking objects between networked clients and the server. This is a unique identifier for this particular GameObject instance. Use it to track GameObjects between networked clients and the server. Declaration​ public uint NetId { get; }  SceneId​ Declaration​ public ulong SceneId { get; }  IsSceneObject​ Is this object part of a scene and have a Scene Id? Declaration​ public bool IsSceneObject { get; }  IsPrefab​ Is this object a prefab and have a so that it can be spawned over the network Declaration​ public bool IsPrefab { get; }  IsSpawned​ Has this object been spawned and have a Declaration​ public bool IsSpawned { get; }  Server​ The NetworkServer associated with this NetworkIdentity. Declaration​ public NetworkServer Server { get; }  World​ The world this object exists in Declaration​ public NetworkWorld World { get; }  SyncVarSender​ Declaration​ public SyncVarSender SyncVarSender { get; }  InitialState​ True while applying spawn payload within OnDeserializeAll Can be used inside syncvar hooks to tell if object has just spawned Declaration​ public bool InitialState { get; }  Client​ The NetworkClient associated with this NetworkIdentity. Declaration​ public NetworkClient Client { get; }  Owner​ The INetworkPlayer associated with this . This property is only valid on server Use it to return details such as the connection's identity, IP address and ready status. Declaration​ public INetworkPlayer Owner { get; }  NetworkBehaviours​ Array of NetworkBehaviours associated with this NetworkIdentity. Can be in child GameObjects. Declaration​ public NetworkBehaviour[] NetworkBehaviours { get; }  Visibility​ Returns the NetworkVisibility behaviour on this gameObject, or a default visibility where all objects are visible. Note: NetworkVisibility must be on same gameObject has NetworkIdentity, not on a child object Declaration​ public INetworkVisibility Visibility { get; }  PrefabHash​ Declaration​ public int PrefabHash { get; set; }  OnStartServer​ This is invoked for NetworkBehaviour objects when they become active on the server. This could be triggered by NetworkServer.Start() for objects in the scene, or by ServerObjectManager.Spawn() for objects you spawn at runtime. This will be called for objects on a &quot;host&quot; as well as for object on a dedicated server. OnStartServer is invoked before this object is added to collection of spawned objects Declaration​ public IAddLateEvent OnStartServer { get; }  OnStartClient​ Called on every NetworkBehaviour when it is activated on a client. Objects on the host have this function called, as there is a local client on the host. The values of SyncVars on object are guaranteed to be initialized correctly with the latest state from the server when this function is called on the client. Declaration​ public IAddLateEvent OnStartClient { get; }  OnStartLocalPlayer​ Called when the local player object has been set up. This happens after OnStartClient(), as it is triggered by an ownership message from the server. This is an appropriate place to activate components or functionality that should only be active for the local player, such as cameras and input. Declaration​ public IAddLateEvent OnStartLocalPlayer { get; }  OnAuthorityChanged​ This is invoked on behaviours that have authority given or removed, see This is called after and before When or is called on the server, this will be called on the client that owns the object. When an object is spawned with with a NetworkConnection parameter included, this will be called on the client that owns the object. NOTE: this even is only called for client and host Declaration​ public IAddLateEvent&lt;bool&gt; OnAuthorityChanged { get; }  OnOwnerChanged​ This is invoked on behaviours that have an owner assigned. This even is only called on server See for more comments on owner and authority Declaration​ public IAddLateEvent&lt;INetworkPlayer&gt; OnOwnerChanged { get; }  OnStopClient​ This is invoked on clients when the server has caused this object to be destroyed. This can be used as a hook to invoke effects or do client specific cleanup. Declaration​ public IAddLateEvent OnStopClient { get; }  OnStopServer​ This is called on the server when the object is unspawned Declaration​ public IAddLateEvent OnStopServer { get; }  SpawnedFromInstantiate​ Declaration​ public bool SpawnedFromInstantiate { get; }  RemoteCallCollection​ Declaration​ public RemoteCallCollection RemoteCallCollection { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkIdentity","url":"docs/reference/Mirage/NetworkIdentity#methods","content":"ClearSceneId()​ Used to clear . Use in cases where you want to spawn object in custom way using Spawn Handlers with AssetId. Declaration​ public void ClearSceneId()  RebuildObservers(Boolean)​ This causes the set of players that can see this object to be rebuild. The OnRebuildObservers callback function will be invoked on each NetworkBehaviour. Declaration​ public void RebuildObservers(bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tinitialize\tTrue if this is the first time. AssignClientAuthority(INetworkPlayer)​ Assign control of an object to a client via the client's This causes hasAuthority to be set on the client that owns the object, and NetworkBehaviour.OnStartAuthority will be called on that client. This object then will be in the NetworkConnection.clientOwnedObjects list for the connection. Authority can be removed with RemoveClientAuthority. Only one client can own an object at any time. This does not need to be called for player objects, as their authority is setup automatically. Declaration​ public void AssignClientAuthority(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe connection of the client to assign authority to. RemoveClientAuthority()​ Removes ownership for an object. This applies to objects that had authority set by AssignClientAuthority, or with a NetworkConnection parameter included. Authority cannot be removed for player objects. Declaration​ public void RemoveClientAuthority()  ToString()​ Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t "},{"title":"Class NetworkMatchChecker","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkMatchChecker","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkMatchChecker","url":"docs/reference/Mirage/NetworkMatchChecker#fields","content":"currentMatchDebug​ Declaration​ public string currentMatchDebug  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkMatchChecker","url":"docs/reference/Mirage/NetworkMatchChecker#properties","content":"MatchId​ Set this to the same value on all networked objects that belong to a given match Declaration​ public Guid MatchId { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkMatchChecker","url":"docs/reference/Mirage/NetworkMatchChecker#methods","content":"Awake()​ Declaration​ public void Awake()  OnStartServer()​ Declaration​ public void OnStartServer()  OnCheckObserver(INetworkPlayer)​ Callback used by the visibility system to determine if an observer (player) can see this object. If this function returns true, the network connection will be added as an observer. Declaration​ public override bool OnCheckObserver(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tNetwork connection of a player. Returns​ Type\tDescriptionSystem.Boolean\tTrue if the player can see this object. OnRebuildObservers(HashSet&lt;INetworkPlayer&gt;, Boolean)​ Callback used by the visibility system to (re)construct the set of observers that can see this object. Implementations of this callback should add network connections of players that can see this object to the observers set. Declaration​ public override void OnRebuildObservers(HashSet&lt;INetworkPlayer&gt; observers, bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.HashSet&lt;Mirage.INetworkPlayer&gt;\tobservers\tThe new set of observers for this object. System.Boolean\tinitialize\tTrue if the set of observers is being built for the first time. "},{"title":"Class NetworkMessageAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkMessageAttribute","content":"Class NetworkMessageAttribute Tell the weaver to generate reader and writer for a class Inheritance​ System.Object System.Attribute Inherited Members​ Show Syntax​ [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)] public class NetworkMessageAttribute : Attribute, _Attribute ","keywords":""},{"title":"Class NetworkMethodAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkMethodAttribute","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NetworkMethodAttribute","url":"docs/reference/Mirage/NetworkMethodAttribute#constructors","content":"NetworkMethodAttribute(NetworkFlags)​ Declaration​ public NetworkMethodAttribute(NetworkFlags flags)  Parameters​ Type\tName\tDescriptionMirage.NetworkFlags\tflags\t "},{"title":"Fields​","type":1,"pageTitle":"Class NetworkMethodAttribute","url":"docs/reference/Mirage/NetworkMethodAttribute#fields","content":"error​ If true, if called incorrectly method will throw. If false, no error is thrown, but the method won't execute. useful for unity built in methods such as Await, Update, Start, etc. Declaration​ public bool error  "},{"title":"Class NetworkPingDisplay","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkPingDisplay","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkPingDisplay","url":"docs/reference/Mirage/NetworkPingDisplay#fields","content":"Client​ Declaration​ public NetworkClient Client  NetworkPingLabelText​ Declaration​ public Text NetworkPingLabelText  "},{"title":"Struct NetworkPingMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkPingMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct NetworkPingMessage","url":"docs/reference/Mirage/NetworkPingMessage#fields","content":"ClientTime​ Declaration​ public double ClientTime  "},{"title":"Class NetworkPrefabs","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkPrefabs","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkPrefabs","url":"docs/reference/Mirage/NetworkPrefabs#fields","content":"Prefabs​ Declaration​ public List&lt;NetworkIdentity&gt; Prefabs  "},{"title":"Struct NetworkPongMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkPongMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct NetworkPongMessage","url":"docs/reference/Mirage/NetworkPongMessage#fields","content":"ClientTime​ Declaration​ public double ClientTime  ServerTime​ Declaration​ public double ServerTime  "},{"title":"Class NetworkProximityChecker","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkProximityChecker","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkProximityChecker","url":"docs/reference/Mirage/NetworkProximityChecker#fields","content":"VisibilityRange​ The maximim range that objects will be visible at. Declaration​ public int VisibilityRange  VisibilityUpdateInterval​ How often (in seconds) that this object should update the list of observers that can see it. Declaration​ public float VisibilityUpdateInterval  ForceHidden​ Flag to force this object to be hidden for players. If this object is a player object, it will not be hidden for that player. Declaration​ public bool ForceHidden  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkProximityChecker","url":"docs/reference/Mirage/NetworkProximityChecker#methods","content":"Awake()​ Declaration​ public void Awake()  OnCheckObserver(INetworkPlayer)​ Callback used by the visibility system to determine if an observer (player) can see this object. If this function returns true, the network connection will be added as an observer. Declaration​ public override bool OnCheckObserver(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tNetwork connection of a player. Returns​ Type\tDescriptionSystem.Boolean\tTrue if the player can see this object. OnRebuildObservers(HashSet&lt;INetworkPlayer&gt;, Boolean)​ Callback used by the visibility system to (re)construct the set of observers that can see this object. Implementations of this callback should add network connections of players that can see this object to the observers set. Declaration​ public override void OnRebuildObservers(HashSet&lt;INetworkPlayer&gt; observers, bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.HashSet&lt;Mirage.INetworkPlayer&gt;\tobservers\tThe new set of observers for this object. System.Boolean\tinitialize\tTrue if the set of observers is being built for the first time. "},{"title":"Class NetworkSceneChecker","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkSceneChecker","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkSceneChecker","url":"docs/reference/Mirage/NetworkSceneChecker#fields","content":"forceHidden​ Flag to force this object to be hidden from all observers. If this object is a player object, it will not be hidden for that client. Declaration​ public bool forceHidden  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkSceneChecker","url":"docs/reference/Mirage/NetworkSceneChecker#methods","content":"OnStartServer()​ Declaration​ public void OnStartServer()  OnCheckObserver(INetworkPlayer)​ Callback used by the visibility system to determine if an observer (player) can see this object. If this function returns true, the network connection will be added as an observer. Declaration​ public override bool OnCheckObserver(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tNetwork connection of a player. Returns​ Type\tDescriptionSystem.Boolean\tTrue if the player can see this object. OnRebuildObservers(HashSet&lt;INetworkPlayer&gt;, Boolean)​ Callback used by the visibility system to (re)construct the set of observers that can see this object. Implementations of this callback should add network connections of players that can see this object to the observers set. Declaration​ public override void OnRebuildObservers(HashSet&lt;INetworkPlayer&gt; observers, bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.HashSet&lt;Mirage.INetworkPlayer&gt;\tobservers\tThe new set of observers for this object. System.Boolean\tinitialize\tTrue if the set of observers is being built for the first time. "},{"title":"Class NetworkPlayer","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkPlayer","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NetworkPlayer","url":"docs/reference/Mirage/NetworkPlayer#constructors","content":"NetworkPlayer(IConnection, Boolean)​ Creates a new NetworkPlayer Declaration​ public NetworkPlayer(IConnection connection, bool isHost)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IConnection\tconnection\tTransport level connection for this player System.Boolean\tisHost\tTrue if this player is the host player "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkPlayer","url":"docs/reference/Mirage/NetworkPlayer#properties","content":"IsHost​ Declaration​ public bool IsHost { get; }  Authentication​ Authentication information for this NetworkPlayer Declaration​ public PlayerAuthentication Authentication { get; }  IsAuthenticated​ Helper methods to check if Authentication is set Declaration​ public bool IsAuthenticated { get; }  SceneIsReady​ Flag that tells us if the scene has fully loaded in for player. A client that is ready is sent spawned objects by the server and updates to the state of spawned objects. A client that is not ready is not sent spawned objects. Starts as true, when a client connects it is assumed that it is already in a ready scene. It will be set to not ready if NetworkSceneManager loads a scene. If you are controlling scene loading manually, you need to set this property to true or false before and after loading a scene. This is normally done using and On the client, this property is used to keep track of if the local scene is loading or ready. On the server, it is used to track if the player's scene is loading or ready. When server loads a new scene for everyone, it will normally set this property to false for all players. Declaration​ public bool SceneIsReady { get; set; }  HasCharacter​ Checks if this player has a Declaration​ public bool HasCharacter { get; }  Connection​ Declaration​ public IConnection Connection { get; }  Address​ The IP address / URL / FQDN associated with the connection. Can be useful for a game master to do IP Bans etc. Best used to get concrete Endpoint type based on the being used Declaration​ public IEndPoint Address { get; }  IsConnecting​ Connect called on client, but server has not replied yet Declaration​ public bool IsConnecting { get; }  IsConnected​ Server and Client are connected and can send messages Declaration​ public bool IsConnected { get; }  VisList​ List of all networkIdentity that this player can see Only valid on server Declaration​ public IReadOnlyCollection&lt;NetworkIdentity&gt; VisList { get; }  OwnedObjects​ A list of the NetworkIdentity objects owned by this connection. This list is read-only. Only valid on server This includes the player's character This list can be used to validate messages from clients, to ensure that clients are only trying to control objects that they own. Objects in the list will also have their field set to this NetworkPlayer Declaration​ public IReadOnlyCollection&lt;NetworkIdentity&gt; OwnedObjects { get; }  Identity​ The NetworkIdentity for this connection. Declaration​ public NetworkIdentity Identity { get; set; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkPlayer","url":"docs/reference/Mirage/NetworkPlayer#methods","content":"SetAuthentication(PlayerAuthentication, Boolean)​ Declaration​ public void SetAuthentication(PlayerAuthentication authentication, bool allowReplace)  Parameters​ Type\tName\tDescriptionMirage.Authentication.PlayerAuthentication\tauthentication System.Boolean\tallowReplace\t Disconnect()​ Disconnects the player. A disconnected player can not send messages Declaration​ public void Disconnect()  Disconnect(DisconnectReason)​ Disconnects the player. A disconnected player can not send messages Declaration​ public void Disconnect(DisconnectReason reason)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.DisconnectReason\treason\t MarkAsDisconnected()​ Marks player as disconnected, used when the disconnect call is from peer A disconnected player can not send messages Declaration​ public void MarkAsDisconnected()  Send&lt;T&gt;(T, Channel)​ This sends a network message to the connection. Declaration​ public void Send&lt;T&gt;(T message, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionT\tmessage Mirage.Channel\tchannelId\tThe transport layer channel to send on. Send(ArraySegment&lt;Byte&gt;, Channel)​ Sends a block of data This is a low-level method to send a raw bytes. Only use this method if you have manually included the message id and serialized the payload. Otherwise, receivers will not know how to handle it. It is recommended to use instead. Declaration​ public void Send(ArraySegment&lt;byte&gt; segment, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tsegment Mirage.Channel\tchannelId\t Send&lt;T&gt;(T, INotifyCallBack)​ This sends a network message to the connection. Declaration​ public void Send&lt;T&gt;(T message, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionT\tmessage Mirage.SocketLayer.INotifyCallBack\tcallBacks\t ToString()​ Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t AddToVisList(NetworkIdentity)​ Declaration​ public void AddToVisList(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t RemoveFromVisList(NetworkIdentity)​ Declaration​ public void RemoveFromVisList(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t ContainsInVisList(NetworkIdentity)​ Checks if player can see NetworkIdentity Declaration​ public bool ContainsInVisList(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t Returns​ Type\tDescriptionSystem.Boolean\t RemoveAllVisibleObjects()​ Removes all objects that this player can see This is called when loading a new scene Declaration​ public void RemoveAllVisibleObjects()  AddOwnedObject(NetworkIdentity)​ Declaration​ public void AddOwnedObject(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t RemoveOwnedObject(NetworkIdentity)​ Declaration​ public void RemoveOwnedObject(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t RemoveAllOwnedObject(Boolean)​ Declaration​ public void RemoveAllOwnedObject(bool sendAuthorityChangeEvent)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tsendAuthorityChangeEvent\t DestroyOwnedObjects()​ Destroy all objects owned by this player NOTE: only destroyed objects that are currently spawned Declaration​ public void DestroyOwnedObjects()  "},{"title":"Struct NetworkSpawnSettings","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkSpawnSettings","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct NetworkSpawnSettings","url":"docs/reference/Mirage/NetworkSpawnSettings#constructors","content":"NetworkSpawnSettings(Boolean, Boolean, Boolean, Boolean, SyncActiveOption)​ Declaration​ public NetworkSpawnSettings(bool sendPosition, bool sendRotation, bool sendScale, bool sendName, SyncActiveOption sendActive)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tsendPosition System.Boolean\tsendRotation System.Boolean\tsendScale System.Boolean\tsendName Mirage.SyncActiveOption\tsendActive\t NetworkSpawnSettings(Boolean, Boolean, Boolean)​ Declaration​ public NetworkSpawnSettings(bool sendPosition, bool sendRotation, bool sendScale)  Parameters​ Type\tName\tDescriptionSystem.Boolean\tsendPosition System.Boolean\tsendRotation System.Boolean\tsendScale\t "},{"title":"Fields​","type":1,"pageTitle":"Struct NetworkSpawnSettings","url":"docs/reference/Mirage/NetworkSpawnSettings#fields","content":"SendPosition​ Declaration​ public bool SendPosition  SendRotation​ Declaration​ public bool SendRotation  SendScale​ Declaration​ public bool SendScale  SendName​ Declaration​ public bool SendName  SendActive​ Declaration​ public SyncActiveOption SendActive  "},{"title":"Properties​","type":1,"pageTitle":"Struct NetworkSpawnSettings","url":"docs/reference/Mirage/NetworkSpawnSettings#properties","content":"Default​ Declaration​ public static NetworkSpawnSettings Default { get; }  "},{"title":"Class NetworkTime","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkTime","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NetworkTime","url":"docs/reference/Mirage/NetworkTime#constructors","content":"NetworkTime()​ Declaration​ public NetworkTime()  "},{"title":"Fields​","type":1,"pageTitle":"Class NetworkTime","url":"docs/reference/Mirage/NetworkTime#fields","content":"PingInterval​ how often are we sending ping messages used to calculate network time and RTT Declaration​ public float PingInterval  PingWindowSize​ average out the last few results from Ping Declaration​ public int PingWindowSize  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkTime","url":"docs/reference/Mirage/NetworkTime#properties","content":"Time​ The time in seconds since the server started. Declaration​ public double Time { get; }  TimeVar​ Measurement of the variance of time. The higher the variance, the less accurate the time is Declaration​ public double TimeVar { get; }  TimeSd​ standard deviation of time. The higher the variance, the less accurate the time is Declaration​ public double TimeSd { get; }  Offset​ Clock difference in seconds between the client and the server Declaration​ public double Offset { get; }  Rtt​ how long in seconds does it take for a message to go to the server and come back Declaration​ public double Rtt { get; }  RttVar​ measure variance of rtt the higher the number, the less accurate rtt is Declaration​ public double RttVar { get; }  RttSd​ Measure the standard deviation of rtt the higher the number, the less accurate rtt is Declaration​ public double RttSd { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkTime","url":"docs/reference/Mirage/NetworkTime#methods","content":"Reset()​ Declaration​ public void Reset()  PingNow(IMessageSender)​ Sends right away ignoring lastPingTime Declaration​ public void PingNow(IMessageSender client)  Parameters​ Type\tName\tDescriptionMirage.IMessageSender\tclient\t "},{"title":"Class NetworkTransform","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkTransform","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class NetworkTransform","url":"docs/reference/Mirage/NetworkTransform#properties","content":"TargetComponent​ Declaration​ protected override Transform TargetComponent { get; }  "},{"title":"Class NetworkSceneManager","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkSceneManager","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkSceneManager","url":"docs/reference/Mirage/NetworkSceneManager#fields","content":"Client​ Declaration​ public NetworkClient Client  Server​ Declaration​ public NetworkServer Server  ServerObjectManager​ Declaration​ public ServerObjectManager ServerObjectManager  ClientObjectManager​ Declaration​ public ClientObjectManager ClientObjectManager  SendAdditiveScenesOnAuthenticate​ Declaration​ public bool SendAdditiveScenesOnAuthenticate  DontDestroy​ Sets the NetworksSceneManagers GameObject to DontDestroyOnLoad. Default = true. Declaration​ public bool DontDestroy  SceneLoadingAsyncOperationInfo​ Information on any scene that is currently being loaded. Declaration​ public AsyncOperation SceneLoadingAsyncOperationInfo  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkSceneManager","url":"docs/reference/Mirage/NetworkSceneManager#properties","content":"ActiveScenePath​ The path of the current active scene. If using additive scenes this will be the first scene. Value from Declaration​ public string ActiveScenePath { get; }  ServerSceneData​ Collection of scenes and which player's are in those scenes. Declaration​ public IReadOnlyDictionary&lt;Scene, HashSet&lt;INetworkPlayer&gt;&gt; ServerSceneData { get; }  OnClientStartedSceneChange​ Event fires when the Client starts changing scene. Declaration​ public SceneChangeStartedEvent OnClientStartedSceneChange { get; }  OnClientFinishedSceneChange​ Event fires after the Client has completed its scene change. Declaration​ public SceneChangeFinishedEvent OnClientFinishedSceneChange { get; }  OnServerStartedSceneChange​ Event fires before Server changes scene. Declaration​ public SceneChangeStartedEvent OnServerStartedSceneChange { get; }  OnServerFinishedSceneChange​ Event fires after Server has completed scene change. Declaration​ public SceneChangeFinishedEvent OnServerFinishedSceneChange { get; }  OnPlayerSceneReady​ Event fires On the server, after Client sends to the server Declaration​ public PlayerSceneChangeEvent OnPlayerSceneReady { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkSceneManager","url":"docs/reference/Mirage/NetworkSceneManager#methods","content":"Start()​ Declaration​ public virtual void Start()  OnDestroy()​ Declaration​ public virtual void OnDestroy()  IsPlayerInScene(Scene, INetworkPlayer)​ Check whether or not the player is in a specific scene or not. Declaration​ public bool IsPlayerInScene(Scene scene, INetworkPlayer player)  Parameters​ Type\tName\tDescriptionScene\tscene\tThe scene we want to check in. Mirage.INetworkPlayer\tplayer\tThe player we want to check for. Returns​ Type\tDescriptionSystem.Boolean\tReturns true or false if the player is in the scene specified. ScenesPlayerIsIn(INetworkPlayer)​ What scene is this specific player currently in. Declaration​ public Scene[] ScenesPlayerIsIn(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player we want to check against. Returns​ Type\tDescriptionScene[]\tReturns back a array of scene's the player is currently in. ScenesPlayerIsInNonAlloc(INetworkPlayer, List&lt;Scene&gt;)​ Declaration​ public void ScenesPlayerIsInNonAlloc(INetworkPlayer player, List&lt;Scene&gt; scenes)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer System.Collections.Generic.List&lt;Scene&gt;\tscenes\t ClientStartSceneMessage(INetworkPlayer, SceneMessage)​ Received message from server to start loading scene or scenes. Default implementation is to load main activate scene server is using and load any other additive scenes in background and notify event handler. If this is not intended behavior you need please override this function. Declaration​ public virtual void ClientStartSceneMessage(INetworkPlayer player, SceneMessage message)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer Mirage.SceneMessage\tmessage\t ClientFinishedLoadingSceneMessage(INetworkPlayer, SceneReadyMessage)​ Received message from server that it has finished loading the scene. Default implementation will set AllowSceneActivation = true and invoke event handler. If this is not good enough intended behavior then override this method. Declaration​ protected virtual void ClientFinishedLoadingSceneMessage(INetworkPlayer player, SceneReadyMessage message)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player who sent the message. Mirage.SceneReadyMessage\tmessage\tThe message data coming back from server. ClientNotReadyMessage(INetworkPlayer, SceneNotReadyMessage)​ Received message that player is not ready. Default implementation is to set player to not ready. Declaration​ protected virtual void ClientNotReadyMessage(INetworkPlayer player, SceneNotReadyMessage message)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player that is currently not ready. Mirage.SceneNotReadyMessage\tmessage\tThe message data coming in. SetSceneIsReady()​ Signal that the client connection is ready to enter the game. This could be for example when a client enters an ongoing game and has finished loading the current scene. The server should respond to the message with an appropriate handler which instantiates the players object for example. Declaration​ public void SetSceneIsReady()  ServerLoadForPlayers(String, IEnumerable&lt;INetworkPlayer&gt;, Boolean, SceneOperation)​ Loads a scene on players but NOT on server Note: does not load for Host player, they should be loaded using server methods instead Declaration​ public void ServerLoadForPlayers(string scenePath, IEnumerable&lt;INetworkPlayer&gt; players, bool shouldClientLoadOrUnloadNormally, SceneOperation sceneOperation = SceneOperation.Normal)  Parameters​ Type\tName\tDescriptionSystem.String\tscenePath System.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers System.Boolean\tshouldClientLoadOrUnloadNormally Mirage.SceneOperation\tsceneOperation\t ServerSceneUnLoading(Scene, IEnumerable&lt;INetworkPlayer&gt;)​ Unload a specific scene from server and clients Declaration​ public void ServerSceneUnLoading(Scene scene, IEnumerable&lt;INetworkPlayer&gt; players)  Parameters​ Type\tName\tDescriptionScene\tscene\tWhat scene do we want to tell server and clients to unload. System.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers\tThe players we want to tell to unload the scene. ServerSceneUnLoadingAsync(Scene, IEnumerable&lt;INetworkPlayer&gt;)​ Unload a specific scene from server and clients Declaration​ public UniTask ServerSceneUnLoadingAsync(Scene scene, IEnumerable&lt;INetworkPlayer&gt; players)  Parameters​ Type\tName\tDescriptionScene\tscene\tWhat scene do we want to tell server and clients to unload. System.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers\tThe players we want to tell to unload the scene. Returns​ Type\tDescriptionUniTask\t ServerLoadSceneNormal(String, Nullable&lt;LoadSceneParameters&gt;)​ Allows server to fully load in a new scene and override current active scene. Declaration​ public void ServerLoadSceneNormal(string scenePath, LoadSceneParameters? sceneLoadParameters = default(LoadSceneParameters? ))  Parameters​ Type\tName\tDescriptionSystem.String\tscenePath\tThe full path to the scene file or the name of the scene. System.Nullable&lt;LoadSceneParameters&gt;\tsceneLoadParameters\tWhat settings should we be using for physics scene loading. ServerLoadSceneNormalAsync(String, Nullable&lt;LoadSceneParameters&gt;)​ Allows server to fully load in a new scene and override current active scene. Declaration​ public UniTask ServerLoadSceneNormalAsync(string scenePath, LoadSceneParameters? sceneLoadParameters = default(LoadSceneParameters? ))  Parameters​ Type\tName\tDescriptionSystem.String\tscenePath\tThe full path to the scene file or the name of the scene. System.Nullable&lt;LoadSceneParameters&gt;\tsceneLoadParameters\tWhat settings should we be using for physics scene loading. Returns​ Type\tDescriptionUniTask\t ServerLoadSceneAdditively(String, IEnumerable&lt;INetworkPlayer&gt;, Boolean, Nullable&lt;LoadSceneParameters&gt;)​ Allows server to fully load in another scene on top of current active scene. Declaration​ public void ServerLoadSceneAdditively(string scenePath, IEnumerable&lt;INetworkPlayer&gt; players, bool shouldClientLoadNormally = false, LoadSceneParameters? sceneLoadParameters = default(LoadSceneParameters? ))  Parameters​ Type\tName\tDescriptionSystem.String\tscenePath\tThe full path to the scene file or the name of the scene. System.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers\tCollection of player's that are receiving the new scene load. System.Boolean\tshouldClientLoadNormally\tShould the clients load this additively too or load it full normal scene change. System.Nullable&lt;LoadSceneParameters&gt;\tsceneLoadParameters\tWhat settings should we be using for physics scene loading. ServerLoadSceneAdditivelyAsync(String, IEnumerable&lt;INetworkPlayer&gt;, Boolean, Nullable&lt;LoadSceneParameters&gt;)​ Allows server to fully load in another scene on top of current active scene. Declaration​ public UniTask ServerLoadSceneAdditivelyAsync(string scenePath, IEnumerable&lt;INetworkPlayer&gt; players, bool shouldClientLoadNormally = false, LoadSceneParameters? sceneLoadParameters = default(LoadSceneParameters? ))  Parameters​ Type\tName\tDescriptionSystem.String\tscenePath\tThe full path to the scene file or the name of the scene. System.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers\tCollection of player's that are receiving the new scene load. System.Boolean\tshouldClientLoadNormally\tShould the clients load this additively too or load it full normal scene change. System.Nullable&lt;LoadSceneParameters&gt;\tsceneLoadParameters\tWhat settings should we be using for physics scene loading. Returns​ Type\tDescriptionUniTask\t ServerUnloadSceneAdditively(Scene, IEnumerable&lt;INetworkPlayer&gt;)​ Allows server to fully unload a scene additively. Declaration​ public void ServerUnloadSceneAdditively(Scene scene, IEnumerable&lt;INetworkPlayer&gt; players)  Parameters​ Type\tName\tDescriptionScene\tscene\tThe scene handle which we want to unload additively. System.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers\tCollection of player's that are receiving the new scene unload. ServerUnloadSceneAdditivelyAsync(Scene, IEnumerable&lt;INetworkPlayer&gt;)​ Allows server to fully unload a scene additively. Declaration​ public UniTask ServerUnloadSceneAdditivelyAsync(Scene scene, IEnumerable&lt;INetworkPlayer&gt; players)  Parameters​ Type\tName\tDescriptionScene\tscene\tThe scene handle which we want to unload additively. System.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers\tCollection of player's that are receiving the new scene unload. Returns​ Type\tDescriptionUniTask\t OnServerAuthenticated(INetworkPlayer)​ When player authenticates to server we send a message to them to load up main scene and any other scenes that are loaded on server. Default implementation takes main activate scene as main and any other loaded scenes and sends it to player's Please override this function if this is not intended behavior for you. Declaration​ protected virtual void OnServerAuthenticated(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe current player that finished authenticating. OnServerPlayerDisconnected(INetworkPlayer)​ When player disconnects from server we will need to clean up info in scenes related to user. Default implementation we loop through list of scenes and find where this player was in and removed them from list. Declaration​ protected virtual void OnServerPlayerDisconnected(INetworkPlayer disconnectedPlayer)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tdisconnectedPlayer\t SetAllClientsNotReady(IEnumerable&lt;INetworkPlayer&gt;)​ Marks all connected clients as no longer ready. All clients will no longer be sent state synchronization updates. The player&amp;apos;s clients can call ClientManager.Ready() again to re-enter the ready state. This is useful when switching scenes.  Declaration​ public void SetAllClientsNotReady(IEnumerable&lt;INetworkPlayer&gt; players = null)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers\t SetClientNotReady(INetworkPlayer)​ Sets a player as not ready and removes all visible objects Players that are not ready will not be sent spawn message or state updates. Players that are not ready do not receive spawned objects or state synchronization updates. They client can be made ready again by calling SetClientReady(). Declaration​ public void SetClientNotReady(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player to make not ready. GetSceneByPathOrName(String)​ Let's us get scene by full path or by its name. Declaration​ public Scene GetSceneByPathOrName(string scenePath)  Parameters​ Type\tName\tDescriptionSystem.String\tscenePath\tThe path or name representing the scene. Returns​ Type\tDescriptionScene\tReturns back correct scene data. "},{"title":"Class NetworkServer","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkServer","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkServer","url":"docs/reference/Mirage/NetworkServer#fields","content":"EnablePeerMetrics​ Declaration​ public bool EnablePeerMetrics  MetricsSize​ Declaration​ public int MetricsSize  MaxConnections​ The maximum number of concurrent network connections to support. Excluding the host player. This field is only used if the property is null Declaration​ public int MaxConnections  DisconnectOnException​ Declaration​ public bool DisconnectOnException  RethrowException​ Declaration​ public bool RethrowException  RunInBackground​ Declaration​ public bool RunInBackground  Listening​ Declaration​ public bool Listening  SocketFactory​ Declaration​ public SocketFactory SocketFactory  ObjectManager​ Declaration​ public ServerObjectManager ObjectManager  Authenticator​ Declaration​ public AuthenticatorSettings Authenticator  ManualUpdate​ Set to true if you want to manually call and and stop mirage from automatically calling them Declaration​ public bool ManualUpdate  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkServer","url":"docs/reference/Mirage/NetworkServer#properties","content":"Metrics​ Declaration​ public Metrics Metrics { get; }  PeerConfig​ Config for peer, if not set will use default settings Declaration​ public Config PeerConfig { get; set; }  PeerPoolMetrics​ Declaration​ public PoolMetrics? PeerPoolMetrics { get; }  Started​ This is invoked when a server is started - including when a host is started. Declaration​ public IAddLateEventUnity Started { get; }  Connected​ Declaration​ public NetworkPlayerEvent Connected { get; }  Authenticated​ Declaration​ public NetworkPlayerEvent Authenticated { get; }  Disconnected​ Declaration​ public NetworkPlayerEvent Disconnected { get; }  Stopped​ Declaration​ public IAddLateEventUnity Stopped { get; }  OnStartHost​ Declaration​ public IAddLateEventUnity OnStartHost { get; }  OnStopHost​ Declaration​ public IAddLateEventUnity OnStopHost { get; }  LocalPlayer​ The connection to the host mode client (if any). Declaration​ public INetworkPlayer LocalPlayer { get; }  LocalClient​ The host client for this server Declaration​ public NetworkClient LocalClient { get; }  LocalClientActive​ True if there is a local client connected to this server (host mode) Declaration​ [Obsolete(&quot;use IsHost instead&quot;)] public bool LocalClientActive { get; }  IsHost​ True if there is a local client connected to this server (host mode) Declaration​ public bool IsHost { get; }  AllPlayers​ All players on server (including unauthenticated players) Declaration​ public IReadOnlyCollection&lt;INetworkPlayer&gt; AllPlayers { get; }  Players​ Declaration​ [Obsolete(&quot;Use AllPlayers or AuthenticatedPlayers instead&quot;)] public IReadOnlyCollection&lt;INetworkPlayer&gt; Players { get; }  AuthenticatedPlayers​ List of players that have Authenticated with server Declaration​ public IReadOnlyList&lt;INetworkPlayer&gt; AuthenticatedPlayers { get; }  Active​ Checks if the server has been started. This will be true after NetworkServer.Listen() has been called. Declaration​ public bool Active { get; }  World​ Declaration​ public NetworkWorld World { get; }  SyncVarSender​ Declaration​ public SyncVarSender SyncVarSender { get; }  MessageHandler​ Declaration​ public MessageHandler MessageHandler { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkServer","url":"docs/reference/Mirage/NetworkServer#methods","content":"Stop()​ This shuts down the server and disconnects all clients. If In host mode, this will also stop the local client Declaration​ public void Stop()  StartServer(NetworkClient)​ Start the server If localClient is given then will start in host mode Declaration​ public void StartServer(NetworkClient localClient = null)  Parameters​ Type\tName\tDescriptionMirage.NetworkClient\tlocalClient\tif not null then start the server and client in hostmode UpdateReceive()​ Declaration​ public void UpdateReceive()  UpdateSent()​ Declaration​ public void UpdateSent()  SetAuthenticationFailedCallback(Action&lt;INetworkPlayer, AuthenticationResult&gt;)​ Declaration​ public void SetAuthenticationFailedCallback(Action&lt;INetworkPlayer, AuthenticationResult&gt; callback)  Parameters​ Type\tName\tDescriptionSystem.Action&lt;Mirage.INetworkPlayer, Mirage.Authentication.AuthenticationResult&gt;\tcallback\t SendToAll&lt;T&gt;(T, Boolean, Channel)​ Declaration​ [Obsolete(&quot;Use SendToAll(msg, authenticatedOnly, excludeLocalPlayer, channelId) instead&quot;)] public void SendToAll&lt;T&gt;(T msg, bool excludeLocalPlayer, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionT\tmsg System.Boolean\texcludeLocalPlayer Mirage.Channel\tchannelId\t SendToAll&lt;T&gt;(T, Boolean, Boolean, Channel)​ Declaration​ public void SendToAll&lt;T&gt;(T msg, bool authenticatedOnly, bool excludeLocalPlayer, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionT\tmsg System.Boolean\tauthenticatedOnly System.Boolean\texcludeLocalPlayer Mirage.Channel\tchannelId\t SendToMany&lt;T&gt;(IReadOnlyList&lt;INetworkPlayer&gt;, T, Boolean, Channel)​ Declaration​ public void SendToMany&lt;T&gt;(IReadOnlyList&lt;INetworkPlayer&gt; players, T msg, bool excludeLocalPlayer, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IReadOnlyList&lt;Mirage.INetworkPlayer&gt;\tplayers T\tmsg System.Boolean\texcludeLocalPlayer Mirage.Channel\tchannelId\t SendToMany&lt;T&gt;(IEnumerable&lt;INetworkPlayer&gt;, T, Boolean, Channel)​ Warning: this will allocate, Use or instead Declaration​ public void SendToMany&lt;T&gt;(IEnumerable&lt;INetworkPlayer&gt; players, T msg, bool excludeLocalPlayer, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;Mirage.INetworkPlayer&gt;\tplayers T\tmsg System.Boolean\texcludeLocalPlayer Mirage.Channel\tchannelId\t SendToMany&lt;T, TEnumerator&gt;(TEnumerator, T, Boolean, Channel)​ use to avoid allocation of IEnumerator Declaration​ public void SendToMany&lt;T, TEnumerator&gt;(TEnumerator playerEnumerator, T msg, bool excludeLocalPlayer, Channel channelId = Channel.Reliable) where TEnumerator : struct, IEnumerator&lt;INetworkPlayer&gt;  Parameters​ Type\tName\tDescriptionTEnumerator\tplayerEnumerator T\tmsg System.Boolean\texcludeLocalPlayer Mirage.Channel\tchannelId\t SendToObservers&lt;T&gt;(NetworkIdentity, T, Boolean, Boolean, Channel)​ Declaration​ public void SendToObservers&lt;T&gt;(NetworkIdentity identity, T msg, bool excludeLocalPlayer, bool excludeOwner, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity T\tmsg System.Boolean\texcludeLocalPlayer System.Boolean\texcludeOwner Mirage.Channel\tchannelId\t SendToMany&lt;T&gt;(List&lt;INetworkPlayer&gt;, T, Channel)​ Sends to list of players. All other SendTo... functions call this, it dooes not do any extra checks, just serializes message if not empty, then sends it Declaration​ public static void SendToMany&lt;T&gt;(List&lt;INetworkPlayer&gt; players, T msg, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.List&lt;Mirage.INetworkPlayer&gt;\tplayers T\tmsg Mirage.Channel\tchannelId\t SendToMany&lt;T&gt;(IReadOnlyList&lt;INetworkPlayer&gt;, T, Channel)​ Sends to list of players. All other SendTo... functions call this, it dooes not do any extra checks, just serializes message if not empty, then sends it Declaration​ public static void SendToMany&lt;T&gt;(IReadOnlyList&lt;INetworkPlayer&gt; players, T msg, Channel channelId = Channel.Reliable)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IReadOnlyList&lt;Mirage.INetworkPlayer&gt;\tplayers T\tmsg Mirage.Channel\tchannelId\t "},{"title":"Class NetworkTransformBase.DataPoint","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkTransformBase.DataPoint","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkTransformBase.DataPoint","url":"docs/reference/Mirage/NetworkTransformBase.DataPoint#fields","content":"TimeStamp​ Declaration​ public float TimeStamp  LocalPosition​ Declaration​ public Vector3 LocalPosition  LocalRotation​ Declaration​ public Quaternion LocalRotation  LocalScale​ Declaration​ public Vector3 LocalScale  MovementSpeed​ Declaration​ public float MovementSpeed  "},{"title":"Class NetworkTransformBase","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkTransformBase","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkTransformBase","url":"docs/reference/Mirage/NetworkTransformBase#fields","content":"ClientAuthority​ Declaration​ public bool ClientAuthority  LocalPositionSensitivity​ Declaration​ public float LocalPositionSensitivity  LocalRotationSensitivity​ Declaration​ public float LocalRotationSensitivity  LocalScaleSensitivity​ Declaration​ public float LocalScaleSensitivity  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkTransformBase","url":"docs/reference/Mirage/NetworkTransformBase#properties","content":"TargetComponent​ Declaration​ protected abstract Transform TargetComponent { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkTransformBase","url":"docs/reference/Mirage/NetworkTransformBase#methods","content":"SerializeIntoWriter(NetworkWriter, Vector3, Quaternion, Vector3)​ Declaration​ public static void SerializeIntoWriter(NetworkWriter writer, Vector3 position, Quaternion rotation, Vector3 scale)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Vector3\tposition Quaternion\trotation Vector3\tscale\t OnSerialize(NetworkWriter, Boolean)​ Declaration​ public override bool OnSerialize(NetworkWriter writer, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter System.Boolean\tinitialState\t Returns​ Type\tDescriptionSystem.Boolean\t OnDeserialize(NetworkReader, Boolean)​ Declaration​ public override void OnDeserialize(NetworkReader reader, bool initialState)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader System.Boolean\tinitialState\t "},{"title":"Class NetworkTransformChild","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkTransformChild","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class NetworkTransformChild","url":"docs/reference/Mirage/NetworkTransformChild#fields","content":"Target​ Declaration​ public Transform Target  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkTransformChild","url":"docs/reference/Mirage/NetworkTransformChild#properties","content":"TargetComponent​ Declaration​ protected override Transform TargetComponent { get; }  "},{"title":"Delegate NetworkVisibility.VisibilityChanged","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkVisibility.VisibilityChanged","content":"Delegate NetworkVisibility.VisibilityChanged Syntax​ public delegate void VisibilityChanged(INetworkPlayer player, bool visible); ","keywords":""},{"title":"Class NetworkVisibility","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkVisibility","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class NetworkVisibility","url":"docs/reference/Mirage/NetworkVisibility#methods","content":"OnCheckObserver(INetworkPlayer)​ Callback used by the visibility system to determine if an observer (player) can see this object. If this function returns true, the network connection will be added as an observer. Declaration​ public abstract bool OnCheckObserver(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tNetwork connection of a player. Returns​ Type\tDescriptionSystem.Boolean\tTrue if the player can see this object. OnRebuildObservers(HashSet&lt;INetworkPlayer&gt;, Boolean)​ Callback used by the visibility system to (re)construct the set of observers that can see this object. Implementations of this callback should add network connections of players that can see this object to the observers set. NOTE: override this function if you want to optimize this loop in your visibility, for example if you need to call GetComponent on this object you can call it once at the start of the loop Declaration​ public virtual void OnRebuildObservers(HashSet&lt;INetworkPlayer&gt; observers, bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.HashSet&lt;Mirage.INetworkPlayer&gt;\tobservers\tThe new set of observers for this object. System.Boolean\tinitialize\tTrue if the set of observers is being built for the first time. "},{"title":"Class NetworkWorld","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkWorld","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class NetworkWorld","url":"docs/reference/Mirage/NetworkWorld#constructors","content":"NetworkWorld()​ Declaration​ public NetworkWorld()  "},{"title":"Properties​","type":1,"pageTitle":"Class NetworkWorld","url":"docs/reference/Mirage/NetworkWorld#properties","content":"Time​ Time kept in this world Declaration​ public NetworkTime Time { get; }  SpawnedIdentities​ Declaration​ public IReadOnlyCollection&lt;NetworkIdentity&gt; SpawnedIdentities { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class NetworkWorld","url":"docs/reference/Mirage/NetworkWorld#methods","content":"GetSortedIdentities()​ A list of spawned identities, sorted by netId. This list is cached and will only be re-sorted if identities have changed Declaration​ public IReadOnlyList&lt;NetworkIdentity&gt; GetSortedIdentities()  Returns​ Type\tDescriptionSystem.Collections.Generic.IReadOnlyList&lt;Mirage.NetworkIdentity&gt;\t TryGetIdentity(UInt32, out NetworkIdentity)​ Declaration​ public bool TryGetIdentity(uint netId, out NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tnetId Mirage.NetworkIdentity\tidentity\t Returns​ Type\tDescriptionSystem.Boolean\t RemoveDestroyedObjects()​ Declaration​ public void RemoveDestroyedObjects()  "},{"title":"Struct ObjectDestroyMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ObjectDestroyMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct ObjectDestroyMessage","url":"docs/reference/Mirage/ObjectDestroyMessage#fields","content":"NetId​ Declaration​ public uint NetId  "},{"title":"Class NetworkWorldExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage/NetworkWorldExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class NetworkWorldExtensions","url":"docs/reference/Mirage/NetworkWorldExtensions#methods","content":"AddAndInvokeOnSpawn(NetworkWorld, Action&lt;NetworkIdentity&gt;)​ adds an event handler, and invokes it on current objects in world Declaration​ public static void AddAndInvokeOnSpawn(this NetworkWorld world, Action&lt;NetworkIdentity&gt; action)  Parameters​ Type\tName\tDescriptionMirage.NetworkWorld\tworld System.Action&lt;Mirage.NetworkIdentity&gt;\taction\t AddAndInvokeOnAuthorityChanged(NetworkWorld, AuthorityChanged)​ adds an event handler, and invokes it on current objects in world Declaration​ public static void AddAndInvokeOnAuthorityChanged(this NetworkWorld world, AuthorityChanged action)  Parameters​ Type\tName\tDescriptionMirage.NetworkWorld\tworld Mirage.AuthorityChanged\taction\t "},{"title":"Struct ObjectHideMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ObjectHideMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct ObjectHideMessage","url":"docs/reference/Mirage/ObjectHideMessage#fields","content":"NetId​ Declaration​ public uint NetId  "},{"title":"Class OnlineOfflineScene","type":0,"sectionRef":"#","url":"docs/reference/Mirage/OnlineOfflineScene","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class OnlineOfflineScene","url":"docs/reference/Mirage/OnlineOfflineScene#fields","content":"Server​ Declaration​ public NetworkServer Server  NetworkSceneManager​ Declaration​ public NetworkSceneManager NetworkSceneManager  OnlineScene​ Declaration​ public string OnlineScene  OfflineScene​ Declaration​ public string OfflineScene  "},{"title":"Enum PendingAsyncSpawn.MessageType","type":0,"sectionRef":"#","url":"docs/reference/Mirage/PendingAsyncSpawn.MessageType","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum PendingAsyncSpawn.MessageType","url":"docs/reference/Mirage/PendingAsyncSpawn.MessageType#fields","content":"ObjectDestroyMessage​ Declaration​ ObjectDestroyMessage = 0  ObjectHideMessage​ Declaration​ ObjectHideMessage = 1  SpawnMessage​ Declaration​ SpawnMessage = 2  RemoveAuthorityMessage​ Declaration​ RemoveAuthorityMessage = 3  RpcMessage​ Declaration​ RpcMessage = 4  RpcWithReplyMessage​ Declaration​ RpcWithReplyMessage = 5  UpdateVarsMessage​ Declaration​ UpdateVarsMessage = 6  "},{"title":"Class PipePeerConnection.PipeEndPoint","type":0,"sectionRef":"#","url":"docs/reference/Mirage/PipePeerConnection.PipeEndPoint","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class PipePeerConnection.PipeEndPoint","url":"docs/reference/Mirage/PipePeerConnection.PipeEndPoint#methods","content":"IEndPoint.CreateCopy()​ Declaration​ IEndPoint IEndPoint.CreateCopy()  Returns​ Type\tDescriptionMirage.SocketLayer.IEndPoint\t "},{"title":"Class PendingAsyncSpawn","type":0,"sectionRef":"#","url":"docs/reference/Mirage/PendingAsyncSpawn","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class PendingAsyncSpawn","url":"docs/reference/Mirage/PendingAsyncSpawn#constructors","content":"PendingAsyncSpawn(UInt32)​ Declaration​ public PendingAsyncSpawn(uint netid)  Parameters​ Type\tName\tDescriptionSystem.UInt32\tnetid\t "},{"title":"Fields​","type":1,"pageTitle":"Class PendingAsyncSpawn","url":"docs/reference/Mirage/PendingAsyncSpawn#fields","content":"NetId​ Declaration​ public readonly uint NetId  "},{"title":"Properties​","type":1,"pageTitle":"Class PendingAsyncSpawn","url":"docs/reference/Mirage/PendingAsyncSpawn#properties","content":"PendingCount​ Declaration​ public int PendingCount { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class PendingAsyncSpawn","url":"docs/reference/Mirage/PendingAsyncSpawn#methods","content":"AddMessage(ObjectDestroyMessage)​ Declaration​ public void AddMessage(ObjectDestroyMessage message)  Parameters​ Type\tName\tDescriptionMirage.ObjectDestroyMessage\tmessage\t AddMessage(ObjectHideMessage)​ Declaration​ public void AddMessage(ObjectHideMessage message)  Parameters​ Type\tName\tDescriptionMirage.ObjectHideMessage\tmessage\t AddMessage(SpawnMessage)​ Declaration​ public void AddMessage(SpawnMessage message)  Parameters​ Type\tName\tDescriptionMirage.SpawnMessage\tmessage\t AddMessage(RemoveAuthorityMessage)​ Declaration​ public void AddMessage(RemoveAuthorityMessage message)  Parameters​ Type\tName\tDescriptionMirage.RemoveAuthorityMessage\tmessage\t AddMessage(RpcMessage)​ Declaration​ public void AddMessage(RpcMessage message)  Parameters​ Type\tName\tDescriptionMirage.RemoteCalls.RpcMessage\tmessage\t AddMessage(RpcWithReplyMessage)​ Declaration​ public void AddMessage(RpcWithReplyMessage message)  Parameters​ Type\tName\tDescriptionMirage.RemoteCalls.RpcWithReplyMessage\tmessage\t AddMessage(UpdateVarsMessage)​ Declaration​ public void AddMessage(UpdateVarsMessage message)  Parameters​ Type\tName\tDescriptionMirage.UpdateVarsMessage\tmessage\t ApplyAll(ClientObjectManager)​ Declaration​ public void ApplyAll(ClientObjectManager clientObjectManager)  Parameters​ Type\tName\tDescriptionMirage.ClientObjectManager\tclientObjectManager\t Dispose()​ Declaration​ public void Dispose()  "},{"title":"Class PlayerSceneChangeEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage/PlayerSceneChangeEvent","content":"Class PlayerSceneChangeEvent Inheritance​ System.Object Syntax​ [Serializable] public class PlayerSceneChangeEvent : UnityEvent&lt;INetworkPlayer&gt; ","keywords":""},{"title":"Class PipePeerConnection","type":0,"sectionRef":"#","url":"docs/reference/Mirage/PipePeerConnection","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class PipePeerConnection","url":"docs/reference/Mirage/PipePeerConnection#properties","content":"IConnection.EndPoint​ Declaration​ IEndPoint IConnection.EndPoint { get; }  State​ Declaration​ public ConnectionState State { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class PipePeerConnection","url":"docs/reference/Mirage/PipePeerConnection#methods","content":"Create(IDataHandler, IDataHandler, Action, Action)​ Declaration​ public static (IConnection clientConn, IConnection serverConn) Create(IDataHandler clientHandler, IDataHandler serverHandler, Action clientOnDisconnect, Action serverOnDisconnect)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.IDataHandler\tclientHandler Mirage.SocketLayer.IDataHandler\tserverHandler System.Action\tclientOnDisconnect System.Action\tserverOnDisconnect\t Returns​ Type\tDescriptionSystem.ValueTuple{Mirage.SocketLayer.IConnection,Mirage.SocketLayer.IConnection}\t ToString()​ Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t IConnection.FlushBatch()​ Declaration​ void IConnection.FlushBatch()  IConnection.Disconnect()​ Declaration​ void IConnection.Disconnect()  IConnection.Disconnect(DisconnectReason)​ Declaration​ void IConnection.Disconnect(DisconnectReason reason)  Parameters​ Type\tName\tDescriptionMirage.SocketLayer.DisconnectReason\treason\t SendNotify(Byte[], Int32, Int32)​ Declaration​ public INotifyToken SendNotify(byte[] packet, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\toffset System.Int32\tlength\t Returns​ Type\tDescriptionMirage.SocketLayer.INotifyToken\t SendNotify(ArraySegment&lt;Byte&gt;)​ Declaration​ public INotifyToken SendNotify(ArraySegment&lt;byte&gt; packet)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tpacket\t Returns​ Type\tDescriptionMirage.SocketLayer.INotifyToken\t SendNotify(Byte[])​ Declaration​ public INotifyToken SendNotify(byte[] packet)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket\t Returns​ Type\tDescriptionMirage.SocketLayer.INotifyToken\t SendNotify(Byte[], Int32, Int32, INotifyCallBack)​ Declaration​ public void SendNotify(byte[] packet, int offset, int length, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\toffset System.Int32\tlength Mirage.SocketLayer.INotifyCallBack\tcallBacks\t SendNotify(ArraySegment&lt;Byte&gt;, INotifyCallBack)​ Declaration​ public void SendNotify(ArraySegment&lt;byte&gt; packet, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tpacket Mirage.SocketLayer.INotifyCallBack\tcallBacks\t SendNotify(Byte[], INotifyCallBack)​ Declaration​ public void SendNotify(byte[] packet, INotifyCallBack callBacks)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket Mirage.SocketLayer.INotifyCallBack\tcallBacks\t SendReliable(Byte[], Int32, Int32)​ Declaration​ public void SendReliable(byte[] message, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tmessage System.Int32\toffset System.Int32\tlength\t SendReliable(ArraySegment&lt;Byte&gt;)​ Declaration​ public void SendReliable(ArraySegment&lt;byte&gt; message)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tmessage\t SendReliable(Byte[])​ Declaration​ public void SendReliable(byte[] message)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tmessage\t SendUnreliable(Byte[], Int32, Int32)​ Declaration​ public void SendUnreliable(byte[] packet, int offset, int length)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket System.Int32\toffset System.Int32\tlength\t SendUnreliable(ArraySegment&lt;Byte&gt;)​ Declaration​ public void SendUnreliable(ArraySegment&lt;byte&gt; packet)  Parameters​ Type\tName\tDescriptionSystem.ArraySegment&lt;System.Byte&gt;\tpacket\t SendUnreliable(Byte[])​ Declaration​ public void SendUnreliable(byte[] packet)  Parameters​ Type\tName\tDescriptionSystem.Byte[]\tpacket\t "},{"title":"Class ReadOnlyInspectorAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ReadOnlyInspectorAttribute","content":"Class ReadOnlyInspectorAttribute Makes field readonly in inspector. This is useful for fields that are set by code, but are shown iin inpector for debuggiing Inheritance​ System.Object Syntax​ [AttributeUsage(AttributeTargets.Field)] public sealed class ReadOnlyInspectorAttribute : PropertyAttribute ","keywords":""},{"title":"Struct RemoveAuthorityMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/RemoveAuthorityMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct RemoveAuthorityMessage","url":"docs/reference/Mirage/RemoveAuthorityMessage#fields","content":"NetId​ Declaration​ public uint NetId  "},{"title":"Struct RemoveCharacterMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/RemoveCharacterMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct RemoveCharacterMessage","url":"docs/reference/Mirage/RemoveCharacterMessage#fields","content":"KeepAuthority​ Declaration​ public bool KeepAuthority  "},{"title":"Class SceneAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneAttribute","content":"Class SceneAttribute Converts a string property into a Scene property in the inspector Inheritance​ System.Object Syntax​ public sealed class SceneAttribute : PropertyAttribute ","keywords":""},{"title":"Class SceneChangeStartedEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneChangeStartedEvent","content":"Class SceneChangeStartedEvent Event fires from INetworkSceneManager when a scene change begins on either Server or Client. Scene - Name or path of the scene that's about to be loaded SceneOperation - Scene change type (Normal, Additive Load, Additive Unload). Inheritance​ System.Object Syntax​ [Serializable] public class SceneChangeStartedEvent : UnityEvent&lt;string, SceneOperation&gt; ","keywords":""},{"title":"Enum RpcTarget","type":0,"sectionRef":"#","url":"docs/reference/Mirage/RpcTarget","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum RpcTarget","url":"docs/reference/Mirage/RpcTarget#fields","content":"Owner​ Sends to the that owns the object Declaration​ Owner = 0  Observers​ Sends to all that can see the object Declaration​ Observers = 1  Player​ Sends to the that is given as an argument in the RPC function (requires target to be an observer) Declaration​ Player = 2  "},{"title":"Class SceneChangeFinishedEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneChangeFinishedEvent","content":"Class SceneChangeFinishedEvent Event fires from INetworkSceneManager when a scene change finishes on either Server or Client. Scene - Loaded scene SceneOperation - Scene change type (Normal, Additive Load, Additive Unload). Inheritance​ System.Object Syntax​ [Serializable] public class SceneChangeFinishedEvent : UnityEvent&lt;Scene, SceneOperation&gt; ","keywords":""},{"title":"Struct SceneNotReadyMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneNotReadyMessage","content":"Struct SceneNotReadyMessage Sent to client to mark their scene as not ready Client can sent once its scene is ready again Syntax​ public struct SceneNotReadyMessage ","keywords":""},{"title":"Enum SceneOperation","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneOperation","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum SceneOperation","url":"docs/reference/Mirage/SceneOperation#fields","content":"Normal​ Declaration​ Normal = 0  LoadAdditive​ Declaration​ LoadAdditive = 1  UnloadAdditive​ Declaration​ UnloadAdditive = 2  "},{"title":"Struct SceneReadyMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneReadyMessage","content":"Struct SceneReadyMessage Sent to indicate the scene is finished loading Syntax​ public struct SceneReadyMessage ","keywords":""},{"title":"Struct SceneMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct SceneMessage","url":"docs/reference/Mirage/SceneMessage#fields","content":"MainActivateScene​ Declaration​ public string MainActivateScene  SceneOperation​ Declaration​ public SceneOperation SceneOperation  AdditiveScenes​ Declaration​ public List&lt;string&gt; AdditiveScenes  "},{"title":"Class SceneVisibilityChecker","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SceneVisibilityChecker","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class SceneVisibilityChecker","url":"docs/reference/Mirage/SceneVisibilityChecker#methods","content":"OnCheckObserver(INetworkPlayer)​ Declaration​ public override bool OnCheckObserver(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\t Returns​ Type\tDescriptionSystem.Boolean\t OnRebuildObservers(HashSet&lt;INetworkPlayer&gt;, Boolean)​ Declaration​ public override void OnRebuildObservers(HashSet&lt;INetworkPlayer&gt; observers, bool initialize)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.HashSet&lt;Mirage.INetworkPlayer&gt;\tobservers System.Boolean\tinitialize\t MoveToScene(Scene)​ Call this function on an object to move it to a new scene and rebuild its observers Declaration​ public void MoveToScene(Scene scene)  Parameters​ Type\tName\tDescriptionScene\tscene\t "},{"title":"Class ServerAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ServerAttribute","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ServerAttribute","url":"docs/reference/Mirage/ServerAttribute#fields","content":"error​ If true, when the method is called from a client, it throws an error If false, no error is thrown, but the method won't execute useful for unity built in methods such as Await, Update, Start, etc. Declaration​ public bool error  "},{"title":"Class ServerObjectManagerExtensions","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ServerObjectManagerExtensions","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class ServerObjectManagerExtensions","url":"docs/reference/Mirage/ServerObjectManagerExtensions#methods","content":"AddCharacter(ServerObjectManager, INetworkPlayer, GameObject, Int32)​ When is received from a player, the server calls this to associate the character GameObject with the NetworkPlayer. When a character is added for a player the object is automatically spawned, so you do not need to call ServerObjectManager.Spawn for that object. This function is used for adding a character, not replacing. If there is already a character then use instead. Declaration​ public static void AddCharacter(this ServerObjectManager som, INetworkPlayer player, GameObject character, int prefabHash)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom Mirage.INetworkPlayer\tplayer\tthe Player to add the character to GameObject\tcharacter\tThe Network Object to add to the Player. Can be spawned or unspawned. Calling this method will respawn it. System.Int32\tprefabHash\tNew prefab hash to give to the player, used for dynamically creating objects at runtime. AddCharacter(ServerObjectManager, INetworkPlayer, GameObject)​ When is received from a player, the server calls this to associate the character GameObject with the NetworkPlayer. When a character is added for a player the object is automatically spawned, so you do not need to call ServerObjectManager.Spawn for that object. This function is used for adding a character, not replacing. If there is already a character then use instead. Declaration​ public static void AddCharacter(this ServerObjectManager som, INetworkPlayer player, GameObject character)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom Mirage.INetworkPlayer\tplayer\tthe Player to add the character to GameObject\tcharacter\tThe Network Object to add to the Player. Can be spawned or unspawned. Calling this method will respawn it. ReplaceCharacter(ServerObjectManager, INetworkPlayer, GameObject, Boolean)​ This replaces the player object for a connection with a different player object. The old player object is not destroyed. If a connection already has a player object, this can be used to replace that object with a different player object. This does NOT change the ready state of the connection, so it can safely be used while changing scenes. Declaration​ public static void ReplaceCharacter(this ServerObjectManager som, INetworkPlayer player, GameObject character, bool keepAuthority = false)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom Mirage.INetworkPlayer\tplayer\tConnection which is adding the player. GameObject\tcharacter\tPlayer object spawned for the player. System.Boolean\tkeepAuthority\tDoes the previous player remain attached to this connection? ReplaceCharacter(ServerObjectManager, INetworkPlayer, GameObject, Int32, Boolean)​ This replaces the player object for a connection with a different player object. The old player object is not destroyed. If a connection already has a player object, this can be used to replace that object with a different player object. This does NOT change the ready state of the connection, so it can safely be used while changing scenes. Declaration​ public static void ReplaceCharacter(this ServerObjectManager som, INetworkPlayer player, GameObject character, int prefabHash, bool keepAuthority = false)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom Mirage.INetworkPlayer\tplayer\tConnection which is adding the player. GameObject\tcharacter\tPlayer object spawned for the player. System.Int32\tprefabHash System.Boolean\tkeepAuthority\tDoes the previous player remain attached to this connection? Spawn(ServerObjectManager, GameObject, GameObject)​ Spawns the identity and settings its owner to the player that owns ownerObject Declaration​ public static void Spawn(this ServerObjectManager som, GameObject obj, GameObject ownerObject)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom GameObject\tobj GameObject\townerObject\tAn object owned by a player Spawn(ServerObjectManager, GameObject, Int32, INetworkPlayer)​ Assigns prefabHash to the obj and then spawns it with owner can only be set on an identity if the current value is Empty This method is useful if you are creating network objects at runtime and both server and client know what to set on an object  Declaration​ public static void Spawn(this ServerObjectManager som, GameObject obj, int prefabHash, INetworkPlayer owner = null)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom GameObject\tobj\tThe object to spawn. System.Int32\tprefabHash\tThe prefabHash of the object to spawn. Used for custom spawn handlers. Mirage.INetworkPlayer\towner\tThe connection that has authority over the object Spawn(ServerObjectManager, GameObject, INetworkPlayer)​ Spawns the identity and settings its owner to owner Declaration​ public static void Spawn(this ServerObjectManager som, GameObject obj, INetworkPlayer owner = null)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom GameObject\tobj Mirage.INetworkPlayer\towner\t SpawnInstantiate(ServerObjectManager, GameObject, Nullable&lt;Int32&gt;, INetworkPlayer)​ Instantiate a prefab an then Spawns it with ServerObjectManager Declaration​ public static GameObject SpawnInstantiate(this ServerObjectManager som, GameObject prefab, int? prefabHash = default(int? ), INetworkPlayer owner = null)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom GameObject\tprefab System.Nullable&lt;System.Int32&gt;\tprefabHash Mirage.INetworkPlayer\towner\t Returns​ Type\tDescriptionGameObject\t SpawnInstantiate(ServerObjectManager, NetworkIdentity, Nullable&lt;Int32&gt;, INetworkPlayer)​ Instantiate a prefab an then Spawns it with ServerObjectManager Declaration​ public static NetworkIdentity SpawnInstantiate(this ServerObjectManager som, NetworkIdentity prefab, int? prefabHash = default(int? ), INetworkPlayer owner = null)  Parameters​ Type\tName\tDescriptionMirage.ServerObjectManager\tsom Mirage.NetworkIdentity\tprefab System.Nullable&lt;System.Int32&gt;\tprefabHash Mirage.INetworkPlayer\towner\t Returns​ Type\tDescriptionMirage.NetworkIdentity\t "},{"title":"Class ServerRpcAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ServerRpcAttribute","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ServerRpcAttribute","url":"docs/reference/Mirage/ServerRpcAttribute#fields","content":"channel​ Declaration​ public Channel channel  requireAuthority​ Declaration​ public bool requireAuthority  allowServerToCall​ Allows the server to invoke the method locally. Note: this will bypass any authority checks on host. Declaration​ public bool allowServerToCall  "},{"title":"Class ShowInInspectorAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ShowInInspectorAttribute","content":"Class ShowInInspectorAttribute Used to show private SyncList in the inspector, Use instead of SerializeField for non Serializable types Inheritance​ System.Object System.Attribute Inherited Members​ Show Syntax​ [AttributeUsage(AttributeTargets.Field)] public sealed class ShowInInspectorAttribute : Attribute, _Attribute ","keywords":""},{"title":"Class ServerObjectManager","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ServerObjectManager","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class ServerObjectManager","url":"docs/reference/Mirage/ServerObjectManager#fields","content":"NetIdGenerator​ Declaration​ public INetIdGenerator NetIdGenerator  "},{"title":"Properties​","type":1,"pageTitle":"Class ServerObjectManager","url":"docs/reference/Mirage/ServerObjectManager#properties","content":"Server​ Declaration​ public NetworkServer Server { get; }  DefaultVisibility​ Declaration​ public INetworkVisibility DefaultVisibility { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class ServerObjectManager","url":"docs/reference/Mirage/ServerObjectManager#methods","content":"ReplaceCharacter(INetworkPlayer, NetworkIdentity, Int32, Boolean)​ This replaces the player object for a connection with a different player object. The old player object is not destroyed. If a connection already has a player object, this can be used to replace that object with a different player object. This does NOT change the ready state of the connection, so it can safely be used while changing scenes. Declaration​ public void ReplaceCharacter(INetworkPlayer player, NetworkIdentity character, int prefabHash, bool keepAuthority = false)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tConnection which is adding the player. Mirage.NetworkIdentity\tcharacter\tPlayer object spawned for the player. System.Int32\tprefabHash System.Boolean\tkeepAuthority\tDoes the previous player remain attached to this connection? ReplaceCharacter(INetworkPlayer, NetworkIdentity, Boolean)​ This replaces the player object for a connection with a different player object. The old player object is not destroyed. If a connection already has a player object, this can be used to replace that object with a different player object. This does NOT change the ready state of the connection, so it can safely be used while changing scenes. Declaration​ public void ReplaceCharacter(INetworkPlayer player, NetworkIdentity identity, bool keepAuthority = false)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tConnection which is adding the player. Mirage.NetworkIdentity\tidentity\tPlayer object spawned for the player. System.Boolean\tkeepAuthority\tDoes the previous player remain attached to this connection? AddCharacter(INetworkPlayer, NetworkIdentity, Int32)​ When is received from a player, the server calls this to associate the character GameObject with the NetworkPlayer. When a character is added for a player the object is automatically spawned, so you do not need to call ServerObjectManager.Spawn for that object. This function is used for adding a character, not replacing. If there is already a character then use instead. Declaration​ public void AddCharacter(INetworkPlayer player, NetworkIdentity character, int prefabHash)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tthe Player to add the character to Mirage.NetworkIdentity\tcharacter\tThe Network Object to add to the Player. Can be spawned or unspawned. Calling this method will respawn it. System.Int32\tprefabHash\tNew prefab hash to give to the player, used for dynamically creating objects at runtime. AddCharacter(INetworkPlayer, NetworkIdentity)​ When is received from a player, the server calls this to associate the character GameObject with the NetworkPlayer. When a character is added for a player the object is automatically spawned, so you do not need to call ServerObjectManager.Spawn for that object. This function is used for adding a character, not replacing. If there is already a character then use instead. Declaration​ public void AddCharacter(INetworkPlayer player, NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tthe Player to add the character to Mirage.NetworkIdentity\tidentity\t RemoveCharacter(INetworkPlayer, Boolean)​ Removes the character from a player, with the option to keep the player as the owner of the object Declaration​ public void RemoveCharacter(INetworkPlayer player, bool keepAuthority = false)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer System.Boolean\tkeepAuthority\t DestroyCharacter(INetworkPlayer, Boolean)​ Removes and destroys the character from a player Declaration​ public void DestroyCharacter(INetworkPlayer player, bool destroyServerObject = true)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer System.Boolean\tdestroyServerObject\t Spawn(NetworkIdentity, Int32, INetworkPlayer)​ Assigns prefabHash to the identity and then spawns it with owner can only be set to a non-zero value. will be cleared when calling this method, this will ensure that the object is spawned using the new PrefabHash rather than SceneId This method is useful if you are creating network objects at runtime and both server and client know what to set on an object  Declaration​ public void Spawn(NetworkIdentity identity, int prefabHash, INetworkPlayer owner = null)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity System.Int32\tprefabHash\tThe prefabHash of the object to spawn. Used for custom spawn handlers. Mirage.INetworkPlayer\towner\tThe connection that has authority over the object Spawn(NetworkIdentity, INetworkPlayer)​ Spawns the identity and keeping owner as Declaration​ public void Spawn(NetworkIdentity identity, INetworkPlayer owner)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity Mirage.INetworkPlayer\towner\t Spawn(NetworkIdentity)​ Spawns the identity and assigns owner to be it's owner Declaration​ public void Spawn(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t Destroy(GameObject, Boolean)​ Destroys this object and corresponding objects on all clients. Game object to destroy. Sets if server object will also be destroyed Declaration​ public void Destroy(GameObject gameObject, bool destroyServerObject = true)  Parameters​ Type\tName\tDescriptionGameObject\tgameObject System.Boolean\tdestroyServerObject\t Destroy(NetworkIdentity, Boolean)​ Destroys this object and corresponding objects on all clients. Game object to destroy. Sets if server object will also be destroyed Declaration​ public void Destroy(NetworkIdentity identity, bool destroyServerObject = true)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity System.Boolean\tdestroyServerObject\t SpawnSceneObjects()​ This causes NetworkIdentity objects in a scene to be spawned on a server. Calling SpawnObjects() causes all scene objects to be spawned. It is like calling Spawn() for each of them.  Declaration​ public void SpawnSceneObjects()  SpawnVisibleObjects(INetworkPlayer)​ Sends spawn message for scene objects and other visible objects to the given player if it has a character If there is a then this will be called after the client finishes loading the scene and sends Declaration​ public void SpawnVisibleObjects(INetworkPlayer player)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player to spawn objects for SpawnVisibleObjects(INetworkPlayer, Boolean)​ Sends spawn message for scene objects and other visible objects to the given player if it has a character Declaration​ public void SpawnVisibleObjects(INetworkPlayer player, bool ignoreHasCharacter)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player to spawn objects for System.Boolean\tignoreHasCharacter\tIf true will spawn visibile objects even if player does not have a spawned character yet SpawnVisibleObjects(INetworkPlayer, NetworkIdentity)​ Sends spawn message for scene objects and other visible objects to the given player if it has a character Declaration​ public void SpawnVisibleObjects(INetworkPlayer player, NetworkIdentity skip)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player to spawn objects for Mirage.NetworkIdentity\tskip\t SpawnVisibleObjects(INetworkPlayer, Boolean, NetworkIdentity)​ Sends spawn message for scene objects and other visible objects to the given player if it has a character Declaration​ public void SpawnVisibleObjects(INetworkPlayer player, bool ignoreHasCharacter, NetworkIdentity skip)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player to spawn objects for System.Boolean\tignoreHasCharacter\tIf true will spawn visibile objects even if player does not have a spawned character yet Mirage.NetworkIdentity\tskip\tNetworkIdentity to skip when spawning. Can be null SpawnVisibleObjects(INetworkPlayer, Boolean, HashSet&lt;NetworkIdentity&gt;)​ Sends spawn message for scene objects and other visible objects to the given player if it has a character Declaration​ public void SpawnVisibleObjects(INetworkPlayer player, bool ignoreHasCharacter, HashSet&lt;NetworkIdentity&gt; skip)  Parameters​ Type\tName\tDescriptionMirage.INetworkPlayer\tplayer\tThe player to spawn objects for System.Boolean\tignoreHasCharacter\tIf true will spawn visible objects even if player does not have a spawned character yet System.Collections.Generic.HashSet&lt;Mirage.NetworkIdentity&gt;\tskip\tNetworkIdentity to skip when spawning. Can be null "},{"title":"Class SpawnEvent","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SpawnEvent","content":"Class SpawnEvent Inheritance​ System.Object Syntax​ [Serializable] public class SpawnEvent : UnityEvent&lt;NetworkIdentity&gt; ","keywords":""},{"title":"Class ShowSyncSettingsAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/ShowSyncSettingsAttribute","content":"Class ShowSyncSettingsAttribute Add to NetworkBehaviour to force SyncSettings to be drawn, even if there are no syncvars Inheritance​ System.Object System.Attribute Inherited Members​ Show Syntax​ [AttributeUsage(AttributeTargets.Class)] public sealed class ShowSyncSettingsAttribute : Attribute, _Attribute ","keywords":""},{"title":"Delegate SpawnHandlerAsyncDelegate","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SpawnHandlerAsyncDelegate","content":"Delegate SpawnHandlerAsyncDelegate Syntax​ public delegate UniTask&lt;NetworkIdentity&gt; SpawnHandlerAsyncDelegate(SpawnMessage msg); ","keywords":""},{"title":"Class SpawnHandler","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SpawnHandler","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SpawnHandler","url":"docs/reference/Mirage/SpawnHandler#constructors","content":"SpawnHandler(NetworkIdentity)​ Declaration​ public SpawnHandler(NetworkIdentity prefab)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tprefab\t SpawnHandler(SpawnHandlerDelegate, UnSpawnDelegate)​ Declaration​ public SpawnHandler(SpawnHandlerDelegate spawnHandler, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.SpawnHandlerDelegate\tspawnHandler Mirage.UnSpawnDelegate\tunspawnHandler\t SpawnHandler(NetworkIdentity, SpawnHandlerDelegate, UnSpawnDelegate)​ Declaration​ public SpawnHandler(NetworkIdentity prefab, SpawnHandlerDelegate spawnHandler, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tprefab Mirage.SpawnHandlerDelegate\tspawnHandler Mirage.UnSpawnDelegate\tunspawnHandler\t SpawnHandler(SpawnHandlerAsyncDelegate, UnSpawnDelegate)​ Declaration​ public SpawnHandler(SpawnHandlerAsyncDelegate spawnHandlerAsync, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.SpawnHandlerAsyncDelegate\tspawnHandlerAsync Mirage.UnSpawnDelegate\tunspawnHandler\t SpawnHandler(NetworkIdentity, SpawnHandlerAsyncDelegate, UnSpawnDelegate)​ Declaration​ public SpawnHandler(NetworkIdentity prefab, SpawnHandlerAsyncDelegate spawnHandlerAsync, UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tprefab Mirage.SpawnHandlerAsyncDelegate\tspawnHandlerAsync Mirage.UnSpawnDelegate\tunspawnHandler\t "},{"title":"Fields​","type":1,"pageTitle":"Class SpawnHandler","url":"docs/reference/Mirage/SpawnHandler#fields","content":"Prefab​ Declaration​ public readonly NetworkIdentity Prefab  Handler​ Declaration​ public readonly SpawnHandlerDelegate Handler  HandlerAsync​ Declaration​ public readonly SpawnHandlerAsyncDelegate HandlerAsync  "},{"title":"Properties​","type":1,"pageTitle":"Class SpawnHandler","url":"docs/reference/Mirage/SpawnHandler#properties","content":"UnspawnHandler​ Declaration​ public UnSpawnDelegate UnspawnHandler { get; }  "},{"title":"Methods​","type":1,"pageTitle":"Class SpawnHandler","url":"docs/reference/Mirage/SpawnHandler#methods","content":"AddUnspawnHandler(UnSpawnDelegate)​ Declaration​ public void AddUnspawnHandler(UnSpawnDelegate unspawnHandler)  Parameters​ Type\tName\tDescriptionMirage.UnSpawnDelegate\tunspawnHandler\t IsAsyncSpawn()​ Declaration​ public bool IsAsyncSpawn()  Returns​ Type\tDescriptionSystem.Boolean\t "},{"title":"Delegate SpawnHandlerDelegate","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SpawnHandlerDelegate","content":"Delegate SpawnHandlerDelegate Syntax​ public delegate NetworkIdentity SpawnHandlerDelegate(SpawnMessage msg); ","keywords":""},{"title":"Struct SpawnMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SpawnMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct SpawnMessage","url":"docs/reference/Mirage/SpawnMessage#fields","content":"NetId​ netId of new or existing object Declaration​ public uint NetId  IsLocalPlayer​ Is the spawning object the local player. Sets ClientScene.localPlayer Declaration​ public bool IsLocalPlayer  IsOwner​ Sets hasAuthority on the spawned object Declaration​ public bool IsOwner  SceneId​ The id of the scene object to spawn Declaration​ public ulong? SceneId  PrefabHash​ The id of the prefab to spawn If sceneId != 0 then it is used instead of prefabHash Declaration​ public int? PrefabHash  SpawnValues​ Spawn values to set after spawning object, values based on Declaration​ public SpawnValues SpawnValues  Payload​ The serialized component data ArraySegment to avoid unnecessary allocations Declaration​ public ArraySegment&lt;byte&gt; Payload  "},{"title":"Methods​","type":1,"pageTitle":"Struct SpawnMessage","url":"docs/reference/Mirage/SpawnMessage#methods","content":"ToString()​ Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t "},{"title":"Class SpawnObjectException","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SpawnObjectException","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SpawnObjectException","url":"docs/reference/Mirage/SpawnObjectException#constructors","content":"SpawnObjectException(String)​ Declaration​ public SpawnObjectException(string message)  Parameters​ Type\tName\tDescriptionSystem.String\tmessage\t "},{"title":"Struct SpawnValues","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SpawnValues","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct SpawnValues","url":"docs/reference/Mirage/SpawnValues#fields","content":"Position​ Declaration​ public Vector3? Position  Rotation​ Declaration​ public Quaternion? Rotation  Scale​ Declaration​ public Vector3? Scale  Name​ Declaration​ public string Name  SelfActive​ Declaration​ public bool? SelfActive  "},{"title":"Methods​","type":1,"pageTitle":"Struct SpawnValues","url":"docs/reference/Mirage/SpawnValues#methods","content":"ToString()​ Declaration​ public override string ToString()  Returns​ Type\tDescriptionSystem.String\t "},{"title":"Class StringHash","type":0,"sectionRef":"#","url":"docs/reference/Mirage/StringHash","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class StringHash","url":"docs/reference/Mirage/StringHash#fields","content":"EmptyString​ Declaration​ public const int EmptyString = 23  "},{"title":"Methods​","type":1,"pageTitle":"Class StringHash","url":"docs/reference/Mirage/StringHash#methods","content":"GetStableHashCode(String)​ Gets a hash for a string. This hash will be the same on all platforms Declaration​ public static int GetStableHashCode(this string text)  Parameters​ Type\tName\tDescriptionSystem.String\ttext\t Returns​ Type\tDescriptionSystem.Int32\t "},{"title":"Enum SyncActiveOption","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncActiveOption","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum SyncActiveOption","url":"docs/reference/Mirage/SyncActiveOption#fields","content":"DoNothing​ Do nothing - leave the game object in its current state. Declaration​ DoNothing = 0  SyncWithServer​ Synchronize the active state of the game object with the server's state. Declaration​ SyncWithServer = 1  ForceEnable​ Force-enable the game object, even if the server's version is disabled. Declaration​ ForceEnable = 2  "},{"title":"Enum SyncFrom","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncFrom","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum SyncFrom","url":"docs/reference/Mirage/SyncFrom#fields","content":"None​ Declaration​ None = 0  Owner​ syncs from Owner to Server or Declaration​ Owner = 1  Server​ Declaration​ Server = 2  "},{"title":"Enum SyncHookType","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncHookType","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum SyncHookType","url":"docs/reference/Mirage/SyncHookType#fields","content":"Automatic​ Looks for hooks matching the signature, gives compile error if none or more than 1 is found Declaration​ Automatic = 0  MethodWith0Arg​ Hook with signature void hookName() Declaration​ MethodWith0Arg = 1  MethodWith1Arg​ Hook with signature void hookName(T newValue) Declaration​ MethodWith1Arg = 2  MethodWith2Arg​ Hook with signature void hookName(T oldValue, T newValue) Declaration​ MethodWith2Arg = 3  EventWith0Arg​ Hook with signature event Action hookName; Declaration​ EventWith0Arg = 4  EventWith1Arg​ Hook with signature event Action{T} hookName; Declaration​ EventWith1Arg = 5  EventWith2Arg​ Hook with signature event Action{T,T} hookName; Declaration​ EventWith2Arg = 6  "},{"title":"Struct SyncPrefab","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncPrefab","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Struct SyncPrefab","url":"docs/reference/Mirage/SyncPrefab#constructors","content":"SyncPrefab(NetworkIdentity)​ Declaration​ public SyncPrefab(NetworkIdentity prefab)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tprefab\t SyncPrefab(Int32)​ Declaration​ public SyncPrefab(int hash)  Parameters​ Type\tName\tDescriptionSystem.Int32\thash\t "},{"title":"Fields​","type":1,"pageTitle":"Struct SyncPrefab","url":"docs/reference/Mirage/SyncPrefab#fields","content":"Prefab​ Declaration​ public NetworkIdentity Prefab  PrefabHash​ Declaration​ public int PrefabHash  "},{"title":"Methods​","type":1,"pageTitle":"Struct SyncPrefab","url":"docs/reference/Mirage/SyncPrefab#methods","content":"FindPrefab(ClientObjectManager)​ Searches ClientObjectManager to find a prefab using its hash Declaration​ public NetworkIdentity FindPrefab(ClientObjectManager manager)  Parameters​ Type\tName\tDescriptionMirage.ClientObjectManager\tmanager\t Returns​ Type\tDescriptionMirage.NetworkIdentity\t FindPrefab(IEnumerable&lt;NetworkIdentity&gt;)​ Searches ClientObjectManager to find a prefab using its hash Declaration​ public NetworkIdentity FindPrefab(IEnumerable&lt;NetworkIdentity&gt; collection)  Parameters​ Type\tName\tDescriptionSystem.Collections.Generic.IEnumerable&lt;Mirage.NetworkIdentity&gt;\tcollection\t Returns​ Type\tDescriptionMirage.NetworkIdentity\t "},{"title":"Class SyncPrefabSerialize","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncPrefabSerialize","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class SyncPrefabSerialize","url":"docs/reference/Mirage/SyncPrefabSerialize#methods","content":"WriteSyncPrefab(NetworkWriter, SyncPrefab)​ Declaration​ public static void WriteSyncPrefab(this NetworkWriter writer, SyncPrefab value)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkWriter\twriter Mirage.SyncPrefab\tvalue\t ReadSyncPrefab(NetworkReader)​ Declaration​ public static SyncPrefab ReadSyncPrefab(this NetworkReader reader)  Parameters​ Type\tName\tDescriptionMirage.Serialization.NetworkReader\treader\t Returns​ Type\tDescriptionMirage.SyncPrefab\t "},{"title":"Enum SyncTiming","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncTiming","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum SyncTiming","url":"docs/reference/Mirage/SyncTiming#fields","content":"Variable​ Will wait for atleast after last sync before sending again. Best used when values dont change often, or for non-time-critical data. Will send less often than for the same . Declaration​ Variable = 0  Fixed​ Will ensure data is sent every if changed. Best used for data that changes often and you want (1/) updates per second Declaration​ Fixed = 1  NoInterval​ Ignores Interval and will send changes in next update Declaration​ NoInterval = 2  "},{"title":"Enum SyncTo","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncTo","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Enum SyncTo","url":"docs/reference/Mirage/SyncTo#fields","content":"None​ Declaration​ None = 0  Owner​ Declaration​ Owner = 1  ObserversOnly​ Declaration​ ObserversOnly = 2  Server​ Declaration​ Server = 4  OwnerAndObservers​ Declaration​ OwnerAndObservers = 3  "},{"title":"Struct SyncSettings","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncSettings","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct SyncSettings","url":"docs/reference/Mirage/SyncSettings#fields","content":"INTERVAL_TOOLTIP​ Declaration​ public const string INTERVAL_TOOLTIP = &quot;Time in seconds until next change is synchronized to the client. '0' means send immediately if changed. '0.5' means only send changes every 500ms.\\n(This is for state synchronization like SyncVars, SyncLists, OnSerialize. Not for Cmds, Rpcs, etc.)&quot;  From​ Declaration​ public SyncFrom From  To​ Declaration​ public SyncTo To  Timing​ Declaration​ public SyncTiming Timing  Interval​ Declaration​ public float Interval  Default​ Declaration​ public static readonly SyncSettings Default  "},{"title":"Methods​","type":1,"pageTitle":"Struct SyncSettings","url":"docs/reference/Mirage/SyncSettings#methods","content":"UpdateTime(ref Double, Double)​ Declaration​ public void UpdateTime(ref double nextSyncTime, double now)  Parameters​ Type\tName\tDescriptionSystem.Double\tnextSyncTime System.Double\tnow\t UpdateTime(Single, SyncTiming, ref Double, Double)​ Declaration​ public static void UpdateTime(float interval, SyncTiming timing, ref double nextSyncTime, double now)  Parameters​ Type\tName\tDescriptionSystem.Single\tinterval Mirage.SyncTiming\ttiming System.Double\tnextSyncTime System.Double\tnow\t ShouldSyncFrom(NetworkIdentity, Boolean)​ Declaration​ public bool ShouldSyncFrom(NetworkIdentity identity, bool syncInHostMode)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity System.Boolean\tsyncInHostMode\t Returns​ Type\tDescriptionSystem.Boolean\t ToObserverWriterOnly(NetworkIdentity)​ Declaration​ public bool ToObserverWriterOnly(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t Returns​ Type\tDescriptionSystem.Boolean\t CopyToObservers(NetworkIdentity)​ Declaration​ public bool CopyToObservers(NetworkIdentity identity)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tidentity\t Returns​ Type\tDescriptionSystem.Boolean\t IsValidDirection(SyncFrom, SyncTo)​ Declaration​ public static bool IsValidDirection(SyncFrom from, SyncTo to)  Parameters​ Type\tName\tDescriptionMirage.SyncFrom\tfrom Mirage.SyncTo\tto\t Returns​ Type\tDescriptionSystem.Boolean\t InvalidReason(SyncFrom, SyncTo)​ Declaration​ public static string InvalidReason(SyncFrom from, SyncTo to)  Parameters​ Type\tName\tDescriptionMirage.SyncFrom\tfrom Mirage.SyncTo\tto\t Returns​ Type\tDescriptionSystem.String\t "},{"title":"Class SyncVarAttribute","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncVarAttribute","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class SyncVarAttribute","url":"docs/reference/Mirage/SyncVarAttribute#fields","content":"hook​ A function that should be called on the client when the value changes. Declaration​ public string hook  initialOnly​ If true, this syncvar will only be sent with spawn message, any other changes will not be sent to existing objects Declaration​ public bool initialOnly  invokeHookOnServer​ If true this syncvar hook will also fire on the server side. Declaration​ public bool invokeHookOnServer  invokeHookOnOwner​ If true this syncvar hook will also fire the owner when it is sending data Declaration​ public bool invokeHookOnOwner  hookType​ What type of look Mirage should look for Declaration​ public SyncHookType hookType  "},{"title":"Class SyncVarReceiver","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncVarReceiver","content":"","keywords":""},{"title":"Constructors​","type":1,"pageTitle":"Class SyncVarReceiver","url":"docs/reference/Mirage/SyncVarReceiver#constructors","content":"SyncVarReceiver(IObjectLocator)​ Declaration​ public SyncVarReceiver(IObjectLocator objectLocator)  Parameters​ Type\tName\tDescriptionMirage.IObjectLocator\tobjectLocator\t "},{"title":"Methods​","type":1,"pageTitle":"Class SyncVarReceiver","url":"docs/reference/Mirage/SyncVarReceiver#methods","content":"ServerRegisterHandlers(MessageHandler)​ Declaration​ public void ServerRegisterHandlers(MessageHandler messageHandler)  Parameters​ Type\tName\tDescriptionMirage.MessageHandler\tmessageHandler\t "},{"title":"Class SyncVarSender","type":0,"sectionRef":"#","url":"docs/reference/Mirage/SyncVarSender","content":"","keywords":""},{"title":"Methods​","type":1,"pageTitle":"Class SyncVarSender","url":"docs/reference/Mirage/SyncVarSender#methods","content":"AddDirtyObject(NetworkIdentity)​ Declaration​ public void AddDirtyObject(NetworkIdentity dirty)  Parameters​ Type\tName\tDescriptionMirage.NetworkIdentity\tdirty\t "},{"title":"Delegate UnSpawnDelegate","type":0,"sectionRef":"#","url":"docs/reference/Mirage/UnSpawnDelegate","content":"Delegate UnSpawnDelegate Syntax​ public delegate void UnSpawnDelegate(NetworkIdentity spawned); ","keywords":""},{"title":"Class Version","type":0,"sectionRef":"#","url":"docs/reference/Mirage/Version","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Class Version","url":"docs/reference/Mirage/Version#fields","content":"Current​ Declaration​ public static readonly string Current  "},{"title":"Struct UpdateVarsMessage","type":0,"sectionRef":"#","url":"docs/reference/Mirage/UpdateVarsMessage","content":"","keywords":""},{"title":"Fields​","type":1,"pageTitle":"Struct UpdateVarsMessage","url":"docs/reference/Mirage/UpdateVarsMessage#fields","content":"NetId​ Declaration​ public uint NetId  Payload​ Declaration​ public ArraySegment&lt;byte&gt; Payload  "}]