"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[3298],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>p});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),p=o,y=d["".concat(s,".").concat(p)]||d[p]||h[p]||i;return r?n.createElement(y,a(a({ref:t},u),{},{components:r})):n.createElement(y,a({ref:t},u))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},53327:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const i={sidebar_position:2},a="Network Authority",l={unversionedId:"guides/authority",id:"guides/authority",title:"Network Authority",description:"Authority is a way of deciding who owns an object and has control over it.",source:"@site/docs/guides/authority.md",sourceDirName:"guides",slug:"/guides/authority",permalink:"/Mirage/docs/guides/authority",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/guides/authority.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Networking Concepts Overview",permalink:"/Mirage/docs/guides/overview"},next:{title:"About IDs",permalink:"/Mirage/docs/guides/about-ids"}},s={},c=[{value:"Server Authority",id:"server-authority",level:2},{value:"Client Authority",id:"client-authority",level:2},{value:"How to give authority",id:"how-to-give-authority",level:2},{value:"Using NetworkServer.Spawn",id:"using-networkserverspawn",level:3},{value:"Using identity.AssignClientAuthority",id:"using-identityassignclientauthority",level:3},{value:"How to remove authority",id:"how-to-remove-authority",level:2},{value:"On Authority",id:"on-authority",level:2},{value:"On Destroy",id:"on-destroy",level:2},{value:"Check Authority",id:"check-authority",level:2},{value:"Client Side",id:"client-side",level:3},{value:"Server Side",id:"server-side",level:3}],u={toc:c};function h(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"network-authority"},"Network Authority"),(0,o.kt)("p",null,"Authority is a way of deciding who owns an object and has control over it. "),(0,o.kt)("h2",{id:"server-authority"},"Server Authority"),(0,o.kt)("p",null,"Server authority means that the server has control of an object. The server has authority over an object by default. This means the server would manage and control all of the collectible items, moving platforms, NPCs, and any other networked objects that aren't the player."),(0,o.kt)("h2",{id:"client-authority"},"Client Authority"),(0,o.kt)("p",null,"Client authority means that the client has control of an object. "),(0,o.kt)("p",null,"When a client has authority over an object it means that they can call ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/remote-actions/server-rpc"},"ServerRpc")," and that the object will automatically be destroyed when the client disconnects."),(0,o.kt)("p",null,"Even if a client has authority over an object the server still controls SyncVar and controls other serialization features. A component will need to use a ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/remote-actions/server-rpc"},"ServerRpc")," to update the state on the server for it to sync to other clients."),(0,o.kt)("h2",{id:"how-to-give-authority"},"How to give authority"),(0,o.kt)("p",null,"By default, the server has authority over all objects. The server can give authority to objects that a client needs to control, like the character object. "),(0,o.kt)("p",null,"If you spawn a character object using ",(0,o.kt)("inlineCode",{parentName:"p"},"ServerObjectManager.AddCharacter")," then it will automatically be given authority."),(0,o.kt)("h3",{id:"using-networkserverspawn"},"Using NetworkServer.Spawn"),(0,o.kt)("p",null,"You can give authority to a client when an object is spawned. This is done by passing in the connection to the spawn message"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"GameObject go = Instantiate(prefab);\nServerObjectManager.Spawn(go, owner);\n")),(0,o.kt)("h3",{id:"using-identityassignclientauthority"},"Using identity.AssignClientAuthority"),(0,o.kt)("p",null,"You can give authority to a client at any time using ",(0,o.kt)("inlineCode",{parentName:"p"},"AssignClientAuthority"),". This can be done by calling ",(0,o.kt)("inlineCode",{parentName:"p"},"AssignClientAuthority")," on the object you want to give authority too"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"Identity.AssignClientAuthority(conn);\n")),(0,o.kt)("p",null,"You may want to do this when a player picks up an item"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"// Command on character object\n[ServerRpc]\nvoid PickupItem(NetworkIdentity item)\n{\n    item.AssignClientAuthority(connectionToClient); \n}\n")),(0,o.kt)("h2",{id:"how-to-remove-authority"},"How to remove authority"),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"Identity.RemoveClientAuthority")," to remove client authority from an object. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"Identity.RemoveClientAuthority();\n")),(0,o.kt)("p",null,"Authority can't be removed from the character object. Instead, you will have to replace the character object using ",(0,o.kt)("inlineCode",{parentName:"p"},"NetworkServer.ReplaceCharacter"),"."),(0,o.kt)("h2",{id:"on-authority"},"On Authority"),(0,o.kt)("p",null,"When authority is given to or removed from an object a message will be sent to that client to notify them. This will cause the ",(0,o.kt)("inlineCode",{parentName:"p"},"OnAuthorityChanged(bool)")," functions to be called. "),(0,o.kt)("h2",{id:"on-destroy"},"On Destroy"),(0,o.kt)("p",null,"If the client has authority, then ",(0,o.kt)("inlineCode",{parentName:"p"},"OnAuthorityChanged(false)")," will be called on the object when it is destroyed."),(0,o.kt)("h2",{id:"check-authority"},"Check Authority"),(0,o.kt)("h3",{id:"client-side"},"Client Side"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Identity.HasAuthority")," property can be used to check if the local player has authority over an object."),(0,o.kt)("h3",{id:"server-side"},"Server Side"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Identity.Owner")," property can be used to check to see which client has authority over an object. If it is null then the server has authority."))}h.isMDXComponent=!0}}]);