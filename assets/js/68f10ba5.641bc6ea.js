"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[7091],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(h,o(o({ref:t},u),{},{components:r})):n.createElement(h,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},63062:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={id:"NetworkMethodAttribute",title:"NetworkMethodAttribute"},o="Class NetworkMethodAttribute",l={unversionedId:"reference/Mirage/NetworkMethodAttribute",id:"reference/Mirage/NetworkMethodAttribute",title:"NetworkMethodAttribute",description:"Prevents this method from running unless the NetworkFlags match the current state",source:"@site/docs/reference/Mirage/NetworkMethodAttribute.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/NetworkMethodAttribute",permalink:"/Mirage/docs/reference/Mirage/NetworkMethodAttribute",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage/NetworkMethodAttribute.md",tags:[],version:"current",frontMatter:{id:"NetworkMethodAttribute",title:"NetworkMethodAttribute"},sidebar:"api",previous:{title:"NetworkMessageAttribute",permalink:"/Mirage/docs/reference/Mirage/NetworkMessageAttribute"},next:{title:"NetworkPingDisplay",permalink:"/Mirage/docs/reference/Mirage/NetworkPingDisplay"}},s={},c=[{value:"Inheritance",id:"inheritance",level:5},{value:"Inherited Members",id:"inherited-members",level:5},{value:"Syntax",id:"syntax",level:5},{value:"Constructors",id:"constructors",level:3},{value:"NetworkMethodAttribute(NetworkFlags)",id:"networkmethodattributenetworkflags",level:4},{value:"Declaration",id:"declaration",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Fields",id:"fields",level:3},{value:"error",id:"error",level:4},{value:"Declaration",id:"declaration-1",level:5}],u={toc:c};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"class-networkmethodattribute"},"Class NetworkMethodAttribute"),(0,a.kt)("p",null,"Prevents this method from running unless the NetworkFlags match the current state\nCan only be used inside a NetworkBehaviour"),(0,a.kt)("div",{class:"inheritance"},(0,a.kt)("h5",{id:"inheritance"},"Inheritance"),(0,a.kt)("div",{class:"level",style:{"--data-index":0}},"System.Object"),(0,a.kt)("div",{class:"level",style:{"--data-index":1}},"System.Attribute")),(0,a.kt)("h5",{id:"inherited-members"},"Inherited Members"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Show")),(0,a.kt)("h5",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"[AttributeUsage(AttributeTargets.Method)]\npublic class NetworkMethodAttribute : Attribute, _Attribute\n")),(0,a.kt)("h3",{id:"constructors"},"Constructors"),(0,a.kt)("h4",{id:"networkmethodattributenetworkflags"},"NetworkMethodAttribute(NetworkFlags)"),(0,a.kt)("h5",{id:"declaration"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkMethodAttribute(NetworkFlags flags)\n")),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Mirage.NetworkFlags"),(0,a.kt)("td",{parentName:"tr",align:null},"flags"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"error"},"error"),(0,a.kt)("p",null,"If true, if called incorrectly method will throw.\nIf false, no error is thrown, but the method won","'","t execute."),(0,a.kt)("p",null,"useful for unity built in methods such as Await, Update, Start, etc."),(0,a.kt)("h5",{id:"declaration-1"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public bool error\n")))}d.isMDXComponent=!0}}]);