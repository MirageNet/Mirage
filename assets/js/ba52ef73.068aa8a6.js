"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[3101],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>v});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(r),v=n,g=p["".concat(c,".").concat(v)]||p[v]||u[v]||l;return r?a.createElement(g,i(i({ref:t},d),{},{components:r})):a.createElement(g,i({ref:t},d))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2820:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const l={id:"NetworkFlags",title:"NetworkFlags"},i="Enum NetworkFlags",o={unversionedId:"reference/Mirage/NetworkFlags",id:"reference/Mirage/NetworkFlags",title:"NetworkFlags",description:"Syntax",source:"@site/docs/reference/Mirage/NetworkFlags.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/NetworkFlags",permalink:"/Mirage/docs/reference/Mirage/NetworkFlags",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage/NetworkFlags.md",tags:[],version:"current",frontMatter:{id:"NetworkFlags",title:"NetworkFlags"},sidebar:"api",previous:{title:"NetworkExtensions",permalink:"/Mirage/docs/reference/Mirage/NetworkExtensions"},next:{title:"NetworkIdentity",permalink:"/Mirage/docs/reference/Mirage/NetworkIdentity"}},c={},s=[{value:"Syntax",id:"syntax",level:5},{value:"Fields",id:"fields",level:3},{value:"NotActive",id:"notactive",level:4},{value:"Declaration",id:"declaration",level:5},{value:"Server",id:"server",level:4},{value:"Declaration",id:"declaration-1",level:5},{value:"Client",id:"client",level:4},{value:"Declaration",id:"declaration-2",level:5},{value:"Active",id:"active",level:4},{value:"Declaration",id:"declaration-3",level:5},{value:"HasAuthority",id:"hasauthority",level:4},{value:"Declaration",id:"declaration-4",level:5},{value:"LocalOwner",id:"localowner",level:4},{value:"Declaration",id:"declaration-5",level:5}],d={toc:s};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"enum-networkflags"},"Enum NetworkFlags"),(0,n.kt)("h5",{id:"syntax"},"Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"[Flags]\npublic enum NetworkFlags\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"notactive"},"NotActive"),(0,n.kt)("p",null,"If both server and client are not active. Can be used to check for singleplayer or unspawned object"),(0,n.kt)("h5",{id:"declaration"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"NotActive = 1\n")),(0,n.kt)("h4",{id:"server"},"Server"),(0,n.kt)("h5",{id:"declaration-1"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"Server = 2\n")),(0,n.kt)("h4",{id:"client"},"Client"),(0,n.kt)("h5",{id:"declaration-2"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"Client = 4\n")),(0,n.kt)("h4",{id:"active"},"Active"),(0,n.kt)("p",null,"If either Server or Client is active."),(0,n.kt)("p",null,"Note this will not check host mode. For host mode you need to use  and "),(0,n.kt)("h5",{id:"declaration-3"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"Active = 6\n")),(0,n.kt)("h4",{id:"hasauthority"},"HasAuthority"),(0,n.kt)("h5",{id:"declaration-4"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"HasAuthority = 8\n")),(0,n.kt)("h4",{id:"localowner"},"LocalOwner"),(0,n.kt)("h5",{id:"declaration-5"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"LocalOwner = 16\n")))}u.isMDXComponent=!0}}]);