"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[6680],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(a),k=r,m=p["".concat(c,".").concat(k)]||p[k]||u[k]||l;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},81084:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={id:"INetworkPlayer",title:"INetworkPlayer"},i="Interface INetworkPlayer",o={unversionedId:"reference/Mirage/INetworkPlayer",id:"reference/Mirage/INetworkPlayer",title:"INetworkPlayer",description:"An object owned by a player that can: send/receive messages, have network visibility, be an object owner, authenticated permissions, and load scenes.",source:"@site/docs/reference/Mirage/INetworkPlayer.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/INetworkPlayer",permalink:"/Mirage/docs/reference/Mirage/INetworkPlayer",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage/INetworkPlayer.md",tags:[],version:"current",frontMatter:{id:"INetworkPlayer",title:"INetworkPlayer"},sidebar:"api",previous:{title:"INetIdGenerator",permalink:"/Mirage/docs/reference/Mirage/INetIdGenerator"},next:{title:"INetworkVisibility",permalink:"/Mirage/docs/reference/Mirage/INetworkVisibility"}},c={},s=[{value:"Syntax",id:"syntax",level:5},{value:"Properties",id:"properties",level:3},{value:"Connection",id:"connection",level:4},{value:"Declaration",id:"declaration",level:5},{value:"Address",id:"address",level:4},{value:"Declaration",id:"declaration-1",level:5},{value:"IsConnecting",id:"isconnecting",level:4},{value:"Declaration",id:"declaration-2",level:5},{value:"IsConnected",id:"isconnected",level:4},{value:"Declaration",id:"declaration-3",level:5},{value:"Authentication",id:"authentication",level:4},{value:"Declaration",id:"declaration-4",level:5},{value:"IsAuthenticated",id:"isauthenticated",level:4},{value:"Declaration",id:"declaration-5",level:5},{value:"IsHost",id:"ishost",level:4},{value:"Declaration",id:"declaration-6",level:5},{value:"Methods",id:"methods",level:3},{value:"SetAuthentication(PlayerAuthentication, Boolean)",id:"setauthenticationplayerauthentication-boolean",level:4},{value:"Declaration",id:"declaration-7",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Disconnect()",id:"disconnect",level:4},{value:"Declaration",id:"declaration-8",level:5},{value:"MarkAsDisconnected()",id:"markasdisconnected",level:4},{value:"Declaration",id:"declaration-9",level:5}],d={toc:s};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interface-inetworkplayer"},"Interface INetworkPlayer"),(0,r.kt)("p",null,"An object owned by a player that can: send/receive messages, have network visibility, be an object owner, authenticated permissions, and load scenes.\nMay be from the server to client or from client to server"),(0,r.kt)("h5",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public interface INetworkPlayer : IMessageSender, IVisibilityTracker, IObjectOwner, ISceneLoader\n")),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("h4",{id:"connection"},"Connection"),(0,r.kt)("h5",{id:"declaration"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"IConnection Connection { get; }\n")),(0,r.kt)("h4",{id:"address"},"Address"),(0,r.kt)("p",null,"The IP address / URL / FQDN associated with the connection.\nCan be useful for a game master to do IP Bans etc."),(0,r.kt)("p",null,"Best used to get concrete Endpoint type based on the  being used"),(0,r.kt)("h5",{id:"declaration-1"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"IEndPoint Address { get; }\n")),(0,r.kt)("h4",{id:"isconnecting"},"IsConnecting"),(0,r.kt)("p",null,"Connect called on client, but server has not replied yet"),(0,r.kt)("h5",{id:"declaration-2"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool IsConnecting { get; }\n")),(0,r.kt)("h4",{id:"isconnected"},"IsConnected"),(0,r.kt)("p",null,"Server and Client are connected and can send messages"),(0,r.kt)("h5",{id:"declaration-3"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool IsConnected { get; }\n")),(0,r.kt)("h4",{id:"authentication"},"Authentication"),(0,r.kt)("h5",{id:"declaration-4"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"PlayerAuthentication Authentication { get; }\n")),(0,r.kt)("h4",{id:"isauthenticated"},"IsAuthenticated"),(0,r.kt)("h5",{id:"declaration-5"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool IsAuthenticated { get; }\n")),(0,r.kt)("h4",{id:"ishost"},"IsHost"),(0,r.kt)("p",null,"True if this Player is the local player on the server or client"),(0,r.kt)("h5",{id:"declaration-6"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool IsHost { get; }\n")),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("h4",{id:"setauthenticationplayerauthentication-boolean"},"SetAuthentication(PlayerAuthentication, Boolean)"),(0,r.kt)("h5",{id:"declaration-7"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void SetAuthentication(PlayerAuthentication authentication, bool allowReplace = false)\n")),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Mirage.Authentication.PlayerAuthentication"),(0,r.kt)("td",{parentName:"tr",align:null},"authentication"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"allowReplace"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h4",{id:"disconnect"},"Disconnect()"),(0,r.kt)("h5",{id:"declaration-8"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void Disconnect()\n")),(0,r.kt)("h4",{id:"markasdisconnected"},"MarkAsDisconnected()"),(0,r.kt)("h5",{id:"declaration-9"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void MarkAsDisconnected()\n")))}u.isMDXComponent=!0}}]);