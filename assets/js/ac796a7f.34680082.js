"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[236],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),k=c(t),d=a,m=k["".concat(s,".").concat(d)]||k[d]||u[d]||o;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=k;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},18088:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:3},i="Sync Var Hooks",l={unversionedId:"guides/sync/sync-var-hooks",id:"guides/sync/sync-var-hooks",title:"Sync Var Hooks",description:"SyncVar can have hooks that are invoked when the values changes.",source:"@site/docs/guides/sync/sync-var-hooks.md",sourceDirName:"guides/sync",slug:"/guides/sync/sync-var-hooks",permalink:"/Mirage/docs/guides/sync/sync-var-hooks",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/guides/sync/sync-var-hooks.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Sync Var",permalink:"/Mirage/docs/guides/sync/sync-var"},next:{title:"Sync List",permalink:"/Mirage/docs/guides/sync/sync-objects/sync-list"}},s={},c=[{value:"When is hook invoked?",id:"when-is-hook-invoked",level:2}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sync-var-hooks"},"Sync Var Hooks"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SyncVar")," can have hooks that are invoked when the values changes."),(0,a.kt)("p",null,"Hooks are set using the ",(0,a.kt)("inlineCode",{parentName:"p"},"hook")," option on the ",(0,a.kt)("inlineCode",{parentName:"p"},"SyncVar")," attribute, the hook needs to be in the same class as the ",(0,a.kt)("inlineCode",{parentName:"p"},"SyncVar")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"[SyncVar(hook = nameof(HookName))]\n")),(0,a.kt)("p",null,"A hook can be a method or a event, when using an event it should use ",(0,a.kt)("inlineCode",{parentName:"p"},"System.Action"),". "),(0,a.kt)("p",null,"The hook can have 0, 1 or 2 args."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"void hook0() { }\n\nvoid hook1(int newValue) { }\n\nvoid hook2(int oldValue, int newValue) { }\n\nevent Action event0;\n\nevent Action<int> event1;\n\nevent Action<int, int> event2;\n")),(0,a.kt)("h2",{id:"when-is-hook-invoked"},"When is hook invoked?"),(0,a.kt)("p",null,"The following is a list of rules that SyncVar hooks follows for when and where they are invoked:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Hooks are only invoked if value is changed and after the value is updated")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When settings SyncVar"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"both flags false",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"invokes if host (both Server AND client active)"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"invokeHookOnOwner")," flag true",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"invokes if owner"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"invokeHookOnServer")," flag true",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"invokes if server (includes host mode)"))),(0,a.kt)("li",{parentName:"ul"},"both flags true",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"invokes if owner OR server"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"DeserializeSyncVars")," is never called on host sending update to itself, but is called when owner sends update to server")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Hooks are invoked in ",(0,a.kt)("inlineCode",{parentName:"p"},"DeserializeSyncVars")," if values changes "),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Always invokes if Only client (eg not host mode)"),(0,a.kt)("li",{parentName:"ul"},"Invoked after the variable is updated with the deserialized value."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"invokeHookOnServer"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Invokes on server (eg when an change is send from owner)")))))))}u.isMDXComponent=!0}}]);