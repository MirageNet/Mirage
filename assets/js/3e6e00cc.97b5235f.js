"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[4426],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u=a.createContext({}),l=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=l(t.components);return a.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,u=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),m=l(n),d=r,h=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(h,i(i({ref:e},c),{},{components:n})):a.createElement(h,i({ref:e},c))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},90285:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:3},i="Custom Authenticator",s={unversionedId:"guides/authentication/custom-authenticator",id:"guides/authentication/custom-authenticator",title:"Custom Authenticator",description:"To create a custom Authenticator, follow these steps:",source:"@site/docs/guides/authentication/custom-authenticator.md",sourceDirName:"guides/authentication",slug:"/guides/authentication/custom-authenticator",permalink:"/Mirage/docs/guides/authentication/custom-authenticator",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/guides/authentication/custom-authenticator.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Authenticator Settings",permalink:"/Mirage/docs/guides/authentication/authenticator-settings"},next:{title:"Basic Authenticator",permalink:"/Mirage/docs/guides/authentication/basic-authenticator"}},u={},l=[],c={toc:l};function p(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"custom-authenticator"},"Custom Authenticator"),(0,r.kt)("p",null,"To create a custom Authenticator, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Inherit from the ",(0,r.kt)("inlineCode",{parentName:"li"},"NetworkAuthenticatorBase<T>")," class."),(0,r.kt)("li",{parentName:"ol"},"Create a network message that your authenticator will receive from the client.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Clients should use the ",(0,r.kt)("inlineCode",{parentName:"li"},"SendAuthentication(NetworkClient client, T msg)")," method provided by the authenticator to correctly send the authentication message."))),(0,r.kt)("li",{parentName:"ol"},"Implement your authenticator to process this message and return a success or failure result."),(0,r.kt)("li",{parentName:"ol"},"Optionally, your authenticator can return additional data that you want to set on ",(0,r.kt)("inlineCode",{parentName:"li"},"INetworkPlayer.Authentication"),"."),(0,r.kt)("li",{parentName:"ol"},"Use the ",(0,r.kt)("inlineCode",{parentName:"li"},"GetData<T>()")," method to retrieve the custom data on the server-side.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 1: Inherit from ",(0,r.kt)("inlineCode",{parentName:"strong"},"NetworkAuthenticatorBase<T>"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class CustomAuthenticator : NetworkAuthenticator<CustomAuthMessage>\n {\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 2: Create a Network Message")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[NetworkMessage]\n public struct CustomAuthMessage\n {\n     // token used to validate user\n     public string token;\n }\n")),(0,r.kt)("p",null,"Clients should use the ",(0,r.kt)("inlineCode",{parentName:"p"},"SendAuthentication(NetworkClient client, T msg)")," method to correctly send the authentication message."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"player.Send")," directly will not work because the authenticator message is wrapped in an internal ",(0,r.kt)("inlineCode",{parentName:"p"},"AuthMessage")," message.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 3: Implement the Authenticator")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'    public class CustomAuthenticator : NetworkAuthenticator<CustomAuthMessage>\n    {\n        protected override async UniTask<AuthenticationResult> AuthenticateAsync(INetworkPlayer player, CustomAuthMessage msg, CancellationToken cancellationToken)\n        {\n            // check user sent token, if they didn\'t then return fail\n            if (string.IsNullOrEmpty(msg.token))\n                return AuthenticationResult.CreateFail("No token");\n\n            // send token to api to validate it\n            var result = await ValidateToken(msg.token);\n\n            // return success or fail\n            if (result.Success)\n            {\n                // create auth data, this will be set on NetworkPlayer.Authentication.Data\n                var data = new CustomAuthenticationData\n                {\n                    UserId = result.UserId,\n                    Username = result.UserName,\n                };\n                return AuthenticationResult.CreateSuccess(this, data);\n            }\n            else\n            {\n                return AuthenticationResult.CreateFail("Validate failed");\n            }\n        }\n\n        private static async UniTask<ValidateResultJson> ValidateToken(string token)\n        {\n            var sendJson = JsonUtility.ToJson(new ValidateTokenJson { token = token });\n\n            // make sure to send token over https\n#if UNITY_2022_3_OR_NEWER\n            var webRequest = UnityWebRequest.PostWwwForm("https://example.com/api/validate", sendJson);\n#else\n            var webRequest = UnityWebRequest.Post("https://example.com/api/validate", sendJson);\n#endif\n\n            // wait for result\n            var op = await webRequest.SendWebRequest();\n            var text = op.downloadHandler.text;\n            var result = JsonUtility.FromJson<ValidateResultJson>(text);\n            return result;\n        }\n\n        private struct ValidateTokenJson\n        {\n            public string token;\n        }\n\n        private struct ValidateResultJson\n        {\n            public bool Success;\n            public string UserId;\n            public string UserName;\n        }\n    }\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 4: Return Additional Data (Optional)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class CustomAuthenticationData\n {\n     public string UserId;\n     public string Username;\n }\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 5: Retrieve Custom Data")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public string GetPlayerName(INetworkPlayer player)\n {\n     // get the data and cast it to customAuth type\n     var data = player.Authentication.GetData<CustomAuthenticationData>();\n\n     // use the data to get the value you want from it\n     return data.Username;\n }\n")))}p.isMDXComponent=!0}}]);