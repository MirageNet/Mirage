"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[5665],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>p});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var g=r.createContext({}),d=function(e){var t=r.useContext(g),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},o=function(e){var t=d(e.components);return r.createElement(g.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,g=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),m=d(a),p=n,u=m["".concat(g,".").concat(p)]||m[p]||c[p]||l;return a?r.createElement(u,s(s({ref:t},o),{},{components:a})):r.createElement(u,s({ref:t},o))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=m;var i={};for(var g in t)hasOwnProperty.call(t,g)&&(i[g]=t[g]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var d=2;d<l;d++)s[d]=a[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},71398:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const l={id:"MessageReceiverExtensions",title:"MessageReceiverExtensions"},s="Class MessageReceiverExtensions",i={unversionedId:"reference/Mirage/MessageReceiverExtensions",id:"reference/Mirage/MessageReceiverExtensions",title:"MessageReceiverExtensions",description:"Inheritance",source:"@site/docs/reference/Mirage/MessageReceiverExtensions.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/MessageReceiverExtensions",permalink:"/Mirage/docs/reference/Mirage/MessageReceiverExtensions",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage/MessageReceiverExtensions.md",tags:[],version:"current",frontMatter:{id:"MessageReceiverExtensions",title:"MessageReceiverExtensions"},sidebar:"api",previous:{title:"MessageHandler",permalink:"/Mirage/docs/reference/Mirage/MessageHandler"},next:{title:"MessageWaiter<T>",permalink:"/Mirage/docs/reference/Mirage/MessageWaiter-1"}},g={},d=[{value:"Inheritance",id:"inheritance",level:5},{value:"Inherited Members",id:"inherited-members",level:5},{value:"Syntax",id:"syntax",level:5},{value:"Methods",id:"methods",level:3},{value:"RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegateWithPlayer&lt;T&gt;)",id:"registerhandlertimessagereceiver-messagedelegatewithplayert",level:4},{value:"Declaration",id:"declaration",level:5},{value:"Parameters",id:"parameters",level:5},{value:"RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegate&lt;T&gt;, Boolean)",id:"registerhandlertimessagereceiver-messagedelegatet-boolean",level:4},{value:"Declaration",id:"declaration-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegateWithPlayerAsync&lt;T&gt;, Boolean)",id:"registerhandlertimessagereceiver-messagedelegatewithplayerasynct-boolean",level:4},{value:"Declaration",id:"declaration-2",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"RegisterHandler&lt;T&gt;(IMessageReceiver, MessageDelegateAsync&lt;T&gt;, Boolean)",id:"registerhandlertimessagereceiver-messagedelegateasynct-boolean",level:4},{value:"Declaration",id:"declaration-3",level:5},{value:"Parameters",id:"parameters-3",level:5}],o={toc:d};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-messagereceiverextensions"},"Class MessageReceiverExtensions"),(0,n.kt)("div",{class:"inheritance"},(0,n.kt)("h5",{id:"inheritance"},"Inheritance"),(0,n.kt)("div",{class:"level",style:{"--data-index":0}},"System.Object")),(0,n.kt)("h5",{id:"inherited-members"},"Inherited Members"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Show")),(0,n.kt)("h5",{id:"syntax"},"Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public static class MessageReceiverExtensions\n")),(0,n.kt)("h3",{id:"methods"},"Methods"),(0,n.kt)("h4",{id:"registerhandlertimessagereceiver-messagedelegatewithplayert"},"RegisterHandler","<","T",">","(IMessageReceiver, MessageDelegateWithPlayer","<","T",">",")"),(0,n.kt)("p",null,"Registers a handler for a network message that has INetworkPlayer and T Message parameters"),(0,n.kt)("p",null,"When network message are sent, the first 2 bytes are the Id for the type T.\nWhen message is received the handler with the matching Id is found and invoked"),(0,n.kt)("h5",{id:"declaration"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public static void RegisterHandler<T>(this IMessageReceiver receiver, MessageDelegateWithPlayer<T> handler)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.IMessageReceiver"),(0,n.kt)("td",{parentName:"tr",align:null},"receiver"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.MessageDelegateWithPlayer","<","T",">"),(0,n.kt)("td",{parentName:"tr",align:null},"handler"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h4",{id:"registerhandlertimessagereceiver-messagedelegatet-boolean"},"RegisterHandler","<","T",">","(IMessageReceiver, MessageDelegate","<","T",">",", Boolean)"),(0,n.kt)("p",null,"Registers a handler for a network message that has just T Message parameter"),(0,n.kt)("p",null,"When network message are sent, the first 2 bytes are the Id for the type T.\nWhen message is received the handler with the matching Id is found and invoked"),(0,n.kt)("h5",{id:"declaration-1"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public static void RegisterHandler<T>(this IMessageReceiver receiver, MessageDelegate<T> handler, bool allowUnauthenticated = false)\n")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.IMessageReceiver"),(0,n.kt)("td",{parentName:"tr",align:null},"receiver"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.MessageDelegate","<","T",">"),(0,n.kt)("td",{parentName:"tr",align:null},"handler"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"System.Boolean"),(0,n.kt)("td",{parentName:"tr",align:null},"allowUnauthenticated"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h4",{id:"registerhandlertimessagereceiver-messagedelegatewithplayerasynct-boolean"},"RegisterHandler","<","T",">","(IMessageReceiver, MessageDelegateWithPlayerAsync","<","T",">",", Boolean)"),(0,n.kt)("p",null,"Registers a handler for a network message that has INetworkPlayer and T Message parameters and returns UniTaskVoid."),(0,n.kt)("p",null,"This allows for async handles without allocations"),(0,n.kt)("p",null,"When network message are sent, the first 2 bytes are the Id for the type T.\nWhen message is received the handler with the matching Id is found and invoked"),(0,n.kt)("h5",{id:"declaration-2"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public static void RegisterHandler<T>(this IMessageReceiver receiver, MessageDelegateWithPlayerAsync<T> handler, bool allowUnauthenticated = false)\n")),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.IMessageReceiver"),(0,n.kt)("td",{parentName:"tr",align:null},"receiver"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.MessageDelegateWithPlayerAsync","<","T",">"),(0,n.kt)("td",{parentName:"tr",align:null},"handler"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"System.Boolean"),(0,n.kt)("td",{parentName:"tr",align:null},"allowUnauthenticated"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h4",{id:"registerhandlertimessagereceiver-messagedelegateasynct-boolean"},"RegisterHandler","<","T",">","(IMessageReceiver, MessageDelegateAsync","<","T",">",", Boolean)"),(0,n.kt)("p",null,"Registers a handler for a network message that has just T Message parameter and returns UniTaskVoid."),(0,n.kt)("p",null,"This allows for async handles without allocations"),(0,n.kt)("p",null,"When network message are sent, the first 2 bytes are the Id for the type T.\nWhen message is received the handler with the matching Id is found and invoked"),(0,n.kt)("h5",{id:"declaration-3"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public static void RegisterHandler<T>(this IMessageReceiver receiver, MessageDelegateAsync<T> handler, bool allowUnauthenticated = false)\n")),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.IMessageReceiver"),(0,n.kt)("td",{parentName:"tr",align:null},"receiver"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.MessageDelegateAsync","<","T",">"),(0,n.kt)("td",{parentName:"tr",align:null},"handler"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"System.Boolean"),(0,n.kt)("td",{parentName:"tr",align:null},"allowUnauthenticated"),(0,n.kt)("td",{parentName:"tr",align:null})))))}c.isMDXComponent=!0}}]);