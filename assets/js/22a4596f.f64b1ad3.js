"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[7402],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),u=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?i.createElement(f,a(a({ref:t},l),{},{components:n})):i.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},50781:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=n(87462),r=(n(67294),n(3905));const o={sidebar_position:5},a="Session Id Authenticator",s={unversionedId:"guides/authentication/session-id",id:"guides/authentication/session-id",title:"Session Id Authenticator",description:"Session Id Authenticator is a built in Authenticator that will allow clients to reconnect to a server without requiring them to fully authenticate again.",source:"@site/docs/guides/authentication/session-id.md",sourceDirName:"guides/authentication",slug:"/guides/authentication/session-id",permalink:"/Mirage/docs/guides/authentication/session-id",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/guides/authentication/session-id.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"Basic Authenticator",permalink:"/Mirage/docs/guides/authentication/basic-authenticator"},next:{title:"Community Guides",permalink:"/Mirage/docs/guides/community-guides/"}},c={},u=[{value:"CreateSession component",id:"createsession-component",level:2}],l={toc:u};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,i.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"session-id-authenticator"},"Session Id Authenticator"),(0,r.kt)("p",null,"Session Id Authenticator is a built in Authenticator that will allow clients to reconnect to a server without requiring them to fully authenticate again."),(0,r.kt)("p",null,"When using this you have 2 options, either use ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateSession")," component to automatically create and send session id. Or manually control it using ",(0,r.kt)("inlineCode",{parentName:"p"},"ClientIdStore")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateOrRefreshSession()"),"."),(0,r.kt)("p",null,"Session id is only valid for a set amount of time, this can be set in the inspector and defaults to 1 day (1440 minutes)."),(0,r.kt)("h2",{id:"createsession-component"},"CreateSession component"),(0,r.kt)("p",null,"CreateSession will automatically send a message to the server if the client has valid session id when they connect. "),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"create session inspector",src:n(70528).Z,width:"626",height:"471"})))}d.isMDXComponent=!0},70528:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/CreateSession-b1f7d3fabccd5a79ab6ff26ea9cf09f3.png"}}]);