"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[8268],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=i.createContext({}),l=function(e){var t=i.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return i.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),f=n,b=p["".concat(o,".").concat(f)]||p[f]||d[f]||a;return r?i.createElement(b,s(s({ref:t},u),{},{components:r})):i.createElement(b,s({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=p;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,r)}p.displayName="MDXCreateElement"},47423:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=r(87462),n=(r(67294),r(3905));const a={id:"WeaverWriteAsGenericAttribute",title:"WeaverWriteAsGenericAttribute"},s="Class WeaverWriteAsGenericAttribute",c={unversionedId:"reference/Mirage.Serialization/WeaverWriteAsGenericAttribute",id:"reference/Mirage.Serialization/WeaverWriteAsGenericAttribute",title:"WeaverWriteAsGenericAttribute",description:"Tells Weaver to serialize a type as generic instead of creating a custom functions.",source:"@site/docs/reference/Mirage.Serialization/WeaverWriteAsGenericAttribute.md",sourceDirName:"reference/Mirage.Serialization",slug:"/reference/Mirage.Serialization/WeaverWriteAsGenericAttribute",permalink:"/Mirage/docs/reference/Mirage.Serialization/WeaverWriteAsGenericAttribute",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage.Serialization/WeaverWriteAsGenericAttribute.md",tags:[],version:"current",frontMatter:{id:"WeaverWriteAsGenericAttribute",title:"WeaverWriteAsGenericAttribute"},sidebar:"api",previous:{title:"WeaverSerializeCollectionAttribute",permalink:"/Mirage/docs/reference/Mirage.Serialization/WeaverSerializeCollectionAttribute"},next:{title:"Writer<T>",permalink:"/Mirage/docs/reference/Mirage.Serialization/Writer-1"}},o={},l=[{value:"Inheritance",id:"inheritance",level:5},{value:"Inherited Members",id:"inherited-members",level:5},{value:"Syntax",id:"syntax",level:5}],u={toc:l};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-weaverwriteasgenericattribute"},"Class WeaverWriteAsGenericAttribute"),(0,n.kt)("p",null,"Tells Weaver to serialize a type as generic instead of creating a custom functions."),(0,n.kt)("p",null,"Use this when you have created and assigned your own Read/Write functions\nor when you can","'","t use extension methods for types and need to manually assign them."),(0,n.kt)("p",null,"This will cause Weaver to use the  and  generic functions instead of creating new ones.\nYou must set these functions manually when using this attribute."),(0,n.kt)("div",{class:"inheritance"},(0,n.kt)("h5",{id:"inheritance"},"Inheritance"),(0,n.kt)("div",{class:"level",style:{"--data-index":0}},"System.Object"),(0,n.kt)("div",{class:"level",style:{"--data-index":1}},"System.Attribute")),(0,n.kt)("h5",{id:"inherited-members"},"Inherited Members"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Show")),(0,n.kt)("h5",{id:"syntax"},"Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"[AttributeUsage(AttributeTargets.Class | AttributeTargets.Enum | AttributeTargets.Interface | AttributeTargets.Struct)]\npublic sealed class WeaverWriteAsGenericAttribute : Attribute, _Attribute\n")))}d.isMDXComponent=!0}}]);