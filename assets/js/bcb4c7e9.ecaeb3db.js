"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[1762],{3905:(e,t,a)=>{a.d(t,{Zo:()=>k,kt:()=>p});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},k=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,k=l(e,["components","mdxType","originalType","parentName"]),d=c(a),p=n,u=d["".concat(s,".").concat(p)]||d[p]||h[p]||i;return a?r.createElement(u,o(o({ref:t},k),{},{components:a})):r.createElement(u,o({ref:t},k))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},90703:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const i={id:"Mirage",title:"Mirage"},o="Mirage",l={unversionedId:"reference/Mirage/Mirage",id:"reference/Mirage/Mirage",title:"Mirage",description:"Classes",source:"@site/docs/reference/Mirage/index.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/",permalink:"/Mirage/docs/reference/Mirage/",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage/index.md",tags:[],version:"current",frontMatter:{id:"Mirage",title:"Mirage"},sidebar:"api",next:{title:"AddCharacterMessage",permalink:"/Mirage/docs/reference/Mirage/AddCharacterMessage"}},s={},c=[{value:"Classes",id:"classes",level:2},{value:"AutoPool&lt;T&gt;",id:"autopoolt",level:4},{value:"AutoPool&lt;T&gt;.Wrapper",id:"autopooltwrapper",level:4},{value:"CharacterSpawner",id:"characterspawner",level:4},{value:"ClientAttribute",id:"clientattribute",level:4},{value:"ClientObjectManager",id:"clientobjectmanager",level:4},{value:"ClientRpcAttribute",id:"clientrpcattribute",level:4},{value:"DeserializeFailedException",id:"deserializefailedexception",level:4},{value:"ExponentialMovingAverage",id:"exponentialmovingaverage",level:4},{value:"FoldoutEventAttribute",id:"foldouteventattribute",level:4},{value:"GameObjectExtensions",id:"gameobjectextensions",level:4},{value:"GameObjectSerializers",id:"gameobjectserializers",level:4},{value:"HasAuthorityAttribute",id:"hasauthorityattribute",level:4},{value:"HeadlessAutoStart",id:"headlessautostart",level:4},{value:"HeadlessFrameLimiter",id:"headlessframelimiter",level:4},{value:"HostRendererVisibility",id:"hostrenderervisibility",level:4},{value:"LocalPlayerAttribute",id:"localplayerattribute",level:4},{value:"MessageHandler",id:"messagehandler",level:4},{value:"MessageReceiverExtensions",id:"messagereceiverextensions",level:4},{value:"MessageWaiter&lt;T&gt;",id:"messagewaitert",level:4},{value:"MethodInvocationException",id:"methodinvocationexception",level:4},{value:"NetworkAnimator",id:"networkanimator",level:4},{value:"NetworkBehaviorSerializers",id:"networkbehaviorserializers",level:4},{value:"NetworkBehaviour",id:"networkbehaviour",level:4},{value:"NetworkClient",id:"networkclient",level:4},{value:"NetworkDiagnostics",id:"networkdiagnostics",level:4},{value:"NetworkExtensions",id:"networkextensions",level:4},{value:"NetworkIdentity",id:"networkidentity",level:4},{value:"NetworkIdentitySerializers",id:"networkidentityserializers",level:4},{value:"NetworkInspectorCallbacks",id:"networkinspectorcallbacks",level:4},{value:"NetworkManager",id:"networkmanager",level:4},{value:"NetworkManagerGUI",id:"networkmanagergui",level:4},{value:"NetworkManagerHud",id:"networkmanagerhud",level:4},{value:"NetworkMatchChecker",id:"networkmatchchecker",level:4},{value:"NetworkMessageAttribute",id:"networkmessageattribute",level:4},{value:"NetworkMethodAttribute",id:"networkmethodattribute",level:4},{value:"NetworkPingDisplay",id:"networkpingdisplay",level:4},{value:"NetworkPlayer",id:"networkplayer",level:4},{value:"NetworkPrefabs",id:"networkprefabs",level:4},{value:"NetworkProximityChecker",id:"networkproximitychecker",level:4},{value:"NetworkSceneChecker",id:"networkscenechecker",level:4},{value:"NetworkSceneManager",id:"networkscenemanager",level:4},{value:"NetworkServer",id:"networkserver",level:4},{value:"NetworkTime",id:"networktime",level:4},{value:"NetworkTransform",id:"networktransform",level:4},{value:"NetworkTransformBase",id:"networktransformbase",level:4},{value:"NetworkTransformBase.DataPoint",id:"networktransformbasedatapoint",level:4},{value:"NetworkTransformChild",id:"networktransformchild",level:4},{value:"NetworkVisibility",id:"networkvisibility",level:4},{value:"NetworkWorld",id:"networkworld",level:4},{value:"NetworkWorldExtensions",id:"networkworldextensions",level:4},{value:"NetworkedPrefabAttribute",id:"networkedprefabattribute",level:4},{value:"OnlineOfflineScene",id:"onlineofflinescene",level:4},{value:"PendingAsyncSpawn",id:"pendingasyncspawn",level:4},{value:"PipePeerConnection",id:"pipepeerconnection",level:4},{value:"PipePeerConnection.PipeEndPoint",id:"pipepeerconnectionpipeendpoint",level:4},{value:"PlayerSceneChangeEvent",id:"playerscenechangeevent",level:4},{value:"ReadOnlyInspectorAttribute",id:"readonlyinspectorattribute",level:4},{value:"SceneAttribute",id:"sceneattribute",level:4},{value:"SceneChangeFinishedEvent",id:"scenechangefinishedevent",level:4},{value:"SceneChangeStartedEvent",id:"scenechangestartedevent",level:4},{value:"SceneVisibilityChecker",id:"scenevisibilitychecker",level:4},{value:"ServerAttribute",id:"serverattribute",level:4},{value:"ServerObjectManager",id:"serverobjectmanager",level:4},{value:"ServerObjectManagerExtensions",id:"serverobjectmanagerextensions",level:4},{value:"ServerRpcAttribute",id:"serverrpcattribute",level:4},{value:"ShowInInspectorAttribute",id:"showininspectorattribute",level:4},{value:"ShowSyncSettingsAttribute",id:"showsyncsettingsattribute",level:4},{value:"SpawnEvent",id:"spawnevent",level:4},{value:"SpawnHandler",id:"spawnhandler",level:4},{value:"SpawnObjectException",id:"spawnobjectexception",level:4},{value:"StringHash",id:"stringhash",level:4},{value:"SyncPrefabSerialize",id:"syncprefabserialize",level:4},{value:"SyncVarAttribute",id:"syncvarattribute",level:4},{value:"SyncVarReceiver",id:"syncvarreceiver",level:4},{value:"SyncVarSender",id:"syncvarsender",level:4},{value:"Version",id:"version",level:4},{value:"Structs",id:"structs",level:2},{value:"AddCharacterMessage",id:"addcharactermessage",level:4},{value:"GameObjectSyncvar",id:"gameobjectsyncvar",level:4},{value:"NetworkBehaviorSyncvar",id:"networkbehaviorsyncvar",level:4},{value:"NetworkBehaviorSyncvar&lt;T&gt;",id:"networkbehaviorsyncvart",level:4},{value:"NetworkBehaviour.Id",id:"networkbehaviourid",level:4},{value:"NetworkDiagnostics.MessageInfo",id:"networkdiagnosticsmessageinfo",level:4},{value:"NetworkIdentitySyncvar",id:"networkidentitysyncvar",level:4},{value:"NetworkPingMessage",id:"networkpingmessage",level:4},{value:"NetworkPongMessage",id:"networkpongmessage",level:4},{value:"NetworkSpawnSettings",id:"networkspawnsettings",level:4},{value:"ObjectDestroyMessage",id:"objectdestroymessage",level:4},{value:"ObjectHideMessage",id:"objecthidemessage",level:4},{value:"RemoveAuthorityMessage",id:"removeauthoritymessage",level:4},{value:"RemoveCharacterMessage",id:"removecharactermessage",level:4},{value:"SceneMessage",id:"scenemessage",level:4},{value:"SceneNotReadyMessage",id:"scenenotreadymessage",level:4},{value:"SceneReadyMessage",id:"scenereadymessage",level:4},{value:"SpawnMessage",id:"spawnmessage",level:4},{value:"SpawnValues",id:"spawnvalues",level:4},{value:"SyncPrefab",id:"syncprefab",level:4},{value:"SyncSettings",id:"syncsettings",level:4},{value:"UpdateVarsMessage",id:"updatevarsmessage",level:4},{value:"Interfaces",id:"interfaces",level:2},{value:"IMessageReceiver",id:"imessagereceiver",level:4},{value:"IMessageSender",id:"imessagesender",level:4},{value:"INetIdGenerator",id:"inetidgenerator",level:4},{value:"INetworkPlayer",id:"inetworkplayer",level:4},{value:"INetworkVisibility",id:"inetworkvisibility",level:4},{value:"IObjectLocator",id:"iobjectlocator",level:4},{value:"IObjectOwner",id:"iobjectowner",level:4},{value:"ISceneLoader",id:"isceneloader",level:4},{value:"IVisibilityTracker",id:"ivisibilitytracker",level:4},{value:"Enums",id:"enums",level:2},{value:"Channel",id:"channel",level:4},{value:"CharacterSpawner.PlayerSpawnMethod",id:"characterspawnerplayerspawnmethod",level:4},{value:"ClientStoppedReason",id:"clientstoppedreason",level:4},{value:"ConnectState",id:"connectstate",level:4},{value:"NetworkFlags",id:"networkflags",level:4},{value:"NetworkManagerMode",id:"networkmanagermode",level:4},{value:"PendingAsyncSpawn.MessageType",id:"pendingasyncspawnmessagetype",level:4},{value:"RpcTarget",id:"rpctarget",level:4},{value:"SceneOperation",id:"sceneoperation",level:4},{value:"SyncActiveOption",id:"syncactiveoption",level:4},{value:"SyncFrom",id:"syncfrom",level:4},{value:"SyncHookType",id:"synchooktype",level:4},{value:"SyncTiming",id:"synctiming",level:4},{value:"SyncTo",id:"syncto",level:4},{value:"Delegates",id:"delegates",level:2},{value:"AuthorityChanged",id:"authoritychanged",level:4},{value:"DynamicSpawnHandlerDelegate",id:"dynamicspawnhandlerdelegate",level:4},{value:"MessageDelegate&lt;T&gt;",id:"messagedelegatet",level:4},{value:"MessageDelegateAsync&lt;T&gt;",id:"messagedelegateasynct",level:4},{value:"MessageDelegateWithPlayer&lt;T&gt;",id:"messagedelegatewithplayert",level:4},{value:"MessageDelegateWithPlayerAsync&lt;T&gt;",id:"messagedelegatewithplayerasynct",level:4},{value:"NetworkVisibility.VisibilityChanged",id:"networkvisibilityvisibilitychanged",level:4},{value:"SpawnHandlerAsyncDelegate",id:"spawnhandlerasyncdelegate",level:4},{value:"SpawnHandlerDelegate",id:"spawnhandlerdelegate",level:4},{value:"UnSpawnDelegate",id:"unspawndelegate",level:4}],k={toc:c};function h(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mirage"},"Mirage"),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("h4",{id:"autopoolt"},(0,n.kt)("a",{parentName:"h4",href:"./AutoPool-1"},"AutoPool","<","T",">")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Pool class that will create a Disposable wrapper around T so it can be used with any class automatically without additional setup")),(0,n.kt)("h4",{id:"autopooltwrapper"},(0,n.kt)("a",{parentName:"h4",href:"./AutoPool-1.Wrapper"},"AutoPool","<","T",">",".Wrapper")),(0,n.kt)("h4",{id:"characterspawner"},(0,n.kt)("a",{parentName:"h4",href:"./CharacterSpawner"},"CharacterSpawner")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Spawns a player as soon as the connection is authenticated")),(0,n.kt)("h4",{id:"clientattribute"},(0,n.kt)("a",{parentName:"h4",href:"./ClientAttribute"},"ClientAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Prevents this method from running if client is not active.\nCan only be used inside a NetworkBehaviour")),(0,n.kt)("h4",{id:"clientobjectmanager"},(0,n.kt)("a",{parentName:"h4",href:"./ClientObjectManager"},"ClientObjectManager")),(0,n.kt)("h4",{id:"clientrpcattribute"},(0,n.kt)("a",{parentName:"h4",href:"./ClientRpcAttribute"},"ClientRpcAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The server uses a Remote Procedure Call (RPC) to run this function on specific clients.\nNote that if you set the target as Connection, you need to pass a specific connection as a parameter of your method")),(0,n.kt)("h4",{id:"deserializefailedexception"},(0,n.kt)("a",{parentName:"h4",href:"./DeserializeFailedException"},"DeserializeFailedException")),(0,n.kt)("h4",{id:"exponentialmovingaverage"},(0,n.kt)("a",{parentName:"h4",href:"./ExponentialMovingAverage"},"ExponentialMovingAverage")),(0,n.kt)("h4",{id:"foldouteventattribute"},(0,n.kt)("a",{parentName:"h4",href:"./FoldoutEventAttribute"},"FoldoutEventAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Draws UnityEvent as a foldout")),(0,n.kt)("h4",{id:"gameobjectextensions"},(0,n.kt)("a",{parentName:"h4",href:"./GameObjectExtensions"},"GameObjectExtensions")),(0,n.kt)("h4",{id:"gameobjectserializers"},(0,n.kt)("a",{parentName:"h4",href:"./GameObjectSerializers"},"GameObjectSerializers")),(0,n.kt)("h4",{id:"hasauthorityattribute"},(0,n.kt)("a",{parentName:"h4",href:"./HasAuthorityAttribute"},"HasAuthorityAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Prevents players without authority from running this method.\nCan only be used inside a NetworkBehaviour")),(0,n.kt)("h4",{id:"headlessautostart"},(0,n.kt)("a",{parentName:"h4",href:"./HeadlessAutoStart"},"HeadlessAutoStart")),(0,n.kt)("h4",{id:"headlessframelimiter"},(0,n.kt)("a",{parentName:"h4",href:"./HeadlessFrameLimiter"},"HeadlessFrameLimiter")),(0,n.kt)("h4",{id:"hostrenderervisibility"},(0,n.kt)("a",{parentName:"h4",href:"./HostRendererVisibility"},"HostRendererVisibility")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Disables all Renders on GameObject when the NetworkIdentity is not visible too the host player because of a ")),(0,n.kt)("h4",{id:"localplayerattribute"},(0,n.kt)("a",{parentName:"h4",href:"./LocalPlayerAttribute"},"LocalPlayerAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Prevents nonlocal players from running this method.\nCan only be used inside a NetworkBehaviour")),(0,n.kt)("h4",{id:"messagehandler"},(0,n.kt)("a",{parentName:"h4",href:"./MessageHandler"},"MessageHandler")),(0,n.kt)("h4",{id:"messagereceiverextensions"},(0,n.kt)("a",{parentName:"h4",href:"./MessageReceiverExtensions"},"MessageReceiverExtensions")),(0,n.kt)("h4",{id:"messagewaitert"},(0,n.kt)("a",{parentName:"h4",href:"./MessageWaiter-1"},"MessageWaiter","<","T",">")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Register handler just for 1 message\nUseful on client when you want too receive a single auth message")),(0,n.kt)("h4",{id:"methodinvocationexception"},(0,n.kt)("a",{parentName:"h4",href:"./MethodInvocationException"},"MethodInvocationException")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Exception thrown if a guarded method is invoked incorrectly")),(0,n.kt)("h4",{id:"networkanimator"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkAnimator"},"NetworkAnimator")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"A component to synchronize animation states for networked objects.")),(0,n.kt)("h4",{id:"networkbehaviorserializers"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkBehaviorSerializers"},"NetworkBehaviorSerializers")),(0,n.kt)("h4",{id:"networkbehaviour"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkBehaviour"},"NetworkBehaviour")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Base class which should be inherited by scripts which contain networking functionality.")),(0,n.kt)("h4",{id:"networkclient"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkClient"},"NetworkClient")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This is a network client class used by the networking system. It contains a NetworkConnection that is used to connect to a network server.\nThe  handle connection state, messages handlers, and connection configuration. There can be many  instances in a process at a time, but only one that is connected to a game server () that uses spawned objects.\nhas an internal update function where it handles events from the transport layer. This includes asynchronous connect events, disconnect events and incoming data from a server.")),(0,n.kt)("h4",{id:"networkdiagnostics"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkDiagnostics"},"NetworkDiagnostics")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Provides profiling information from mirror\nA profiler can subscribe to these events and\npresent the data in a friendly way to the user")),(0,n.kt)("h4",{id:"networkextensions"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkExtensions"},"NetworkExtensions")),(0,n.kt)("h4",{id:"networkidentity"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkIdentity"},"NetworkIdentity")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The NetworkIdentity identifies objects across the network, between server and clients.\nIts primary data is a NetworkInstanceId which is allocated by the server and then set on clients.\nThis is used in network communications to be able to lookup game objects on different machines.")),(0,n.kt)("h4",{id:"networkidentityserializers"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkIdentitySerializers"},"NetworkIdentitySerializers")),(0,n.kt)("h4",{id:"networkinspectorcallbacks"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkInspectorCallbacks"},"NetworkInspectorCallbacks")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Callbacks for ")),(0,n.kt)("h4",{id:"networkmanager"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkManager"},"NetworkManager")),(0,n.kt)("h4",{id:"networkmanagergui"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkManagerGUI"},"NetworkManagerGUI")),(0,n.kt)("h4",{id:"networkmanagerhud"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkManagerHud"},"NetworkManagerHud")),(0,n.kt)("h4",{id:"networkmatchchecker"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkMatchChecker"},"NetworkMatchChecker")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Component that controls visibility of networked objects based on match id.\nAny object with this component on it will only be visible to other objects in the same match.\nThis would be used to isolate players to their respective matches within a single game server instance. ")),(0,n.kt)("h4",{id:"networkmessageattribute"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkMessageAttribute"},"NetworkMessageAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Tell the weaver to generate  reader and writer for a class")),(0,n.kt)("h4",{id:"networkmethodattribute"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkMethodAttribute"},"NetworkMethodAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Prevents this method from running unless the NetworkFlags match the current state\nCan only be used inside a NetworkBehaviour")),(0,n.kt)("h4",{id:"networkpingdisplay"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkPingDisplay"},"NetworkPingDisplay")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Component that will display the clients ping in milliseconds")),(0,n.kt)("h4",{id:"networkplayer"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkPlayer"},"NetworkPlayer")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"A High level network connection. This is used for connections from client-to-server and for connection from server-to-client.")),(0,n.kt)("h4",{id:"networkprefabs"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkPrefabs"},"NetworkPrefabs")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"A scriptable object that contains a list of prefabs that can be spawned on the network.")),(0,n.kt)("h4",{id:"networkproximitychecker"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkProximityChecker"},"NetworkProximityChecker")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Component that controls visibility of networked objects for players.\nAny object with this component on it will not be visible to players more than a (configurable) distance away.")),(0,n.kt)("h4",{id:"networkscenechecker"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkSceneChecker"},"NetworkSceneChecker")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Component that controls visibility of networked objects between scenes.\nAny object with this component on it will only be visible to other objects in the same scene\nThis would be used when the server has multiple additive subscenes loaded to isolate players to their respective subscenes")),(0,n.kt)("h4",{id:"networkscenemanager"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkSceneManager"},"NetworkSceneManager")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"NetworkSceneManager is an optional component that helps keep scene in sync between server and client.\nThe  loads scenes as instructed by the .\nThe  controls the currently active Scene and any additive Load/Unload.\nwhen a client connect NetworkSceneManager will send a message telling the new client to load the scene that is active on the server")),(0,n.kt)("h4",{id:"networkserver"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkServer"},"NetworkServer")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The NetworkServer.")),(0,n.kt)("h4",{id:"networktime"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkTime"},"NetworkTime")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Synchronize time between the server and the clients")),(0,n.kt)("h4",{id:"networktransform"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkTransform"},"NetworkTransform")),(0,n.kt)("h4",{id:"networktransformbase"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkTransformBase"},"NetworkTransformBase")),(0,n.kt)("h4",{id:"networktransformbasedatapoint"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkTransformBase.DataPoint"},"NetworkTransformBase.DataPoint")),(0,n.kt)("h4",{id:"networktransformchild"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkTransformChild"},"NetworkTransformChild")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"A component to synchronize the position of child transforms of networked objects.\nThere must be a NetworkTransform on the root object of the hierarchy. There can be multiple NetworkTransformChild components on an object. This does not use physics for synchronization, it simply synchronizes the localPosition and localRotation of the child transform and lerps towards the received values.")),(0,n.kt)("h4",{id:"networkvisibility"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkVisibility"},"NetworkVisibility")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"NetworkBehaviour that calculates if the gameObject should be visible to different players or not")),(0,n.kt)("h4",{id:"networkworld"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkWorld"},"NetworkWorld")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Holds collection of spawned network objects\nThis class works on both server and client")),(0,n.kt)("h4",{id:"networkworldextensions"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkWorldExtensions"},"NetworkWorldExtensions")),(0,n.kt)("h4",{id:"networkedprefabattribute"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkedPrefabAttribute"},"NetworkedPrefabAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Forces the user to provide a prefab that has a NetworkIdentity component and is registered.\nAlso provides a fix button to fix the prefab if it hasn","'","t been networked.")),(0,n.kt)("h4",{id:"onlineofflinescene"},(0,n.kt)("a",{parentName:"h4",href:"./OnlineOfflineScene"},"OnlineOfflineScene")),(0,n.kt)("h4",{id:"pendingasyncspawn"},(0,n.kt)("a",{parentName:"h4",href:"./PendingAsyncSpawn"},"PendingAsyncSpawn")),(0,n.kt)("h4",{id:"pipepeerconnection"},(0,n.kt)("a",{parentName:"h4",href:"./PipePeerConnection"},"PipePeerConnection")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"A  that is directly sends data to a ")),(0,n.kt)("h4",{id:"pipepeerconnectionpipeendpoint"},(0,n.kt)("a",{parentName:"h4",href:"./PipePeerConnection.PipeEndPoint"},"PipePeerConnection.PipeEndPoint")),(0,n.kt)("h4",{id:"playerscenechangeevent"},(0,n.kt)("a",{parentName:"h4",href:"./PlayerSceneChangeEvent"},"PlayerSceneChangeEvent")),(0,n.kt)("h4",{id:"readonlyinspectorattribute"},(0,n.kt)("a",{parentName:"h4",href:"./ReadOnlyInspectorAttribute"},"ReadOnlyInspectorAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Makes field readonly in inspector.\nThis is useful for fields that are set by code, but are shown iin inpector for debuggiing")),(0,n.kt)("h4",{id:"sceneattribute"},(0,n.kt)("a",{parentName:"h4",href:"./SceneAttribute"},"SceneAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Converts a string property into a Scene property in the inspector")),(0,n.kt)("h4",{id:"scenechangefinishedevent"},(0,n.kt)("a",{parentName:"h4",href:"./SceneChangeFinishedEvent"},"SceneChangeFinishedEvent")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Event fires from INetworkSceneManager when a scene change finishes on either Server or Client.\nScene - Loaded scene\nSceneOperation - Scene change type (Normal, Additive Load, Additive Unload).")),(0,n.kt)("h4",{id:"scenechangestartedevent"},(0,n.kt)("a",{parentName:"h4",href:"./SceneChangeStartedEvent"},"SceneChangeStartedEvent")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Event fires from INetworkSceneManager when a scene change begins on either Server or Client.\nScene - Name or path of the scene that","'","s about to be loaded\nSceneOperation - Scene change type (Normal, Additive Load, Additive Unload).")),(0,n.kt)("h4",{id:"scenevisibilitychecker"},(0,n.kt)("a",{parentName:"h4",href:"./SceneVisibilityChecker"},"SceneVisibilityChecker")),(0,n.kt)("h4",{id:"serverattribute"},(0,n.kt)("a",{parentName:"h4",href:"./ServerAttribute"},"ServerAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Prevents a method from running if server is not active.\nCan only be used inside a NetworkBehaviour")),(0,n.kt)("h4",{id:"serverobjectmanager"},(0,n.kt)("a",{parentName:"h4",href:"./ServerObjectManager"},"ServerObjectManager")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The ServerObjectManager.")),(0,n.kt)("h4",{id:"serverobjectmanagerextensions"},(0,n.kt)("a",{parentName:"h4",href:"./ServerObjectManagerExtensions"},"ServerObjectManagerExtensions")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Extra helper methods for  that dont add any extra logic")),(0,n.kt)("h4",{id:"serverrpcattribute"},(0,n.kt)("a",{parentName:"h4",href:"./ServerRpcAttribute"},"ServerRpcAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Call this from a client to run this function on the server.\nMake sure to validate input etc. It","'","s not possible to call this from a server.")),(0,n.kt)("h4",{id:"showininspectorattribute"},(0,n.kt)("a",{parentName:"h4",href:"./ShowInInspectorAttribute"},"ShowInInspectorAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Used to show private SyncList in the inspector,\nUse instead of SerializeField for non Serializable types ")),(0,n.kt)("h4",{id:"showsyncsettingsattribute"},(0,n.kt)("a",{parentName:"h4",href:"./ShowSyncSettingsAttribute"},"ShowSyncSettingsAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Add to NetworkBehaviour to force SyncSettings to be drawn, even if there are no syncvars")),(0,n.kt)("h4",{id:"spawnevent"},(0,n.kt)("a",{parentName:"h4",href:"./SpawnEvent"},"SpawnEvent")),(0,n.kt)("h4",{id:"spawnhandler"},(0,n.kt)("a",{parentName:"h4",href:"./SpawnHandler"},"SpawnHandler")),(0,n.kt)("h4",{id:"spawnobjectexception"},(0,n.kt)("a",{parentName:"h4",href:"./SpawnObjectException"},"SpawnObjectException")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Exception thrown when spawning fails")),(0,n.kt)("h4",{id:"stringhash"},(0,n.kt)("a",{parentName:"h4",href:"./StringHash"},"StringHash")),(0,n.kt)("h4",{id:"syncprefabserialize"},(0,n.kt)("a",{parentName:"h4",href:"./SyncPrefabSerialize"},"SyncPrefabSerialize")),(0,n.kt)("h4",{id:"syncvarattribute"},(0,n.kt)("a",{parentName:"h4",href:"./SyncVarAttribute"},"SyncVarAttribute")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"SyncVars are used to synchronize a variable from the server to all clients automatically.\nValue must be changed on server, not directly by clients.  Hook parameter allows you to define a client-side method to be invoked when the client gets an update from the server.")),(0,n.kt)("h4",{id:"syncvarreceiver"},(0,n.kt)("a",{parentName:"h4",href:"./SyncVarReceiver"},"SyncVarReceiver")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Class that handles syncvar message and passes it to correct ")),(0,n.kt)("h4",{id:"syncvarsender"},(0,n.kt)("a",{parentName:"h4",href:"./SyncVarSender"},"SyncVarSender")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Class that Syncs syncvar and other  State")),(0,n.kt)("h4",{id:"version"},(0,n.kt)("a",{parentName:"h4",href:"./Version"},"Version")),(0,n.kt)("h2",{id:"structs"},"Structs"),(0,n.kt)("h4",{id:"addcharactermessage"},(0,n.kt)("a",{parentName:"h4",href:"./AddCharacterMessage"},"AddCharacterMessage")),(0,n.kt)("h4",{id:"gameobjectsyncvar"},(0,n.kt)("a",{parentName:"h4",href:"./GameObjectSyncvar"},"GameObjectSyncvar")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"backing struct for a NetworkIdentity when used as a syncvar\nthe weaver will replace the syncvar with this struct.")),(0,n.kt)("h4",{id:"networkbehaviorsyncvar"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkBehaviorSyncvar"},"NetworkBehaviorSyncvar")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"backing struct for a NetworkIdentity when used as a syncvar\nthe weaver will replace the syncvar with this struct.")),(0,n.kt)("h4",{id:"networkbehaviorsyncvart"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkBehaviorSyncvar-1"},"NetworkBehaviorSyncvar","<","T",">")),(0,n.kt)("h4",{id:"networkbehaviourid"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkBehaviour.Id"},"NetworkBehaviour.Id")),(0,n.kt)("h4",{id:"networkdiagnosticsmessageinfo"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkDiagnostics.MessageInfo"},"NetworkDiagnostics.MessageInfo")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Describes an outgoing message")),(0,n.kt)("h4",{id:"networkidentitysyncvar"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkIdentitySyncvar"},"NetworkIdentitySyncvar")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"backing struct for a NetworkIdentity when used as a syncvar\nthe weaver will replace the syncvar with this struct.")),(0,n.kt)("h4",{id:"networkpingmessage"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkPingMessage"},"NetworkPingMessage")),(0,n.kt)("h4",{id:"networkpongmessage"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkPongMessage"},"NetworkPongMessage")),(0,n.kt)("h4",{id:"networkspawnsettings"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkSpawnSettings"},"NetworkSpawnSettings")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Spawn Settings for ")),(0,n.kt)("h4",{id:"objectdestroymessage"},(0,n.kt)("a",{parentName:"h4",href:"./ObjectDestroyMessage"},"ObjectDestroyMessage")),(0,n.kt)("h4",{id:"objecthidemessage"},(0,n.kt)("a",{parentName:"h4",href:"./ObjectHideMessage"},"ObjectHideMessage")),(0,n.kt)("h4",{id:"removeauthoritymessage"},(0,n.kt)("a",{parentName:"h4",href:"./RemoveAuthorityMessage"},"RemoveAuthorityMessage")),(0,n.kt)("h4",{id:"removecharactermessage"},(0,n.kt)("a",{parentName:"h4",href:"./RemoveCharacterMessage"},"RemoveCharacterMessage")),(0,n.kt)("h4",{id:"scenemessage"},(0,n.kt)("a",{parentName:"h4",href:"./SceneMessage"},"SceneMessage")),(0,n.kt)("h4",{id:"scenenotreadymessage"},(0,n.kt)("a",{parentName:"h4",href:"./SceneNotReadyMessage"},"SceneNotReadyMessage")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Sent to client to mark their scene as not ready\nClient can sent  once its scene is ready again")),(0,n.kt)("h4",{id:"scenereadymessage"},(0,n.kt)("a",{parentName:"h4",href:"./SceneReadyMessage"},"SceneReadyMessage")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Sent to indicate the scene is finished loading")),(0,n.kt)("h4",{id:"spawnmessage"},(0,n.kt)("a",{parentName:"h4",href:"./SpawnMessage"},"SpawnMessage")),(0,n.kt)("h4",{id:"spawnvalues"},(0,n.kt)("a",{parentName:"h4",href:"./SpawnValues"},"SpawnValues")),(0,n.kt)("h4",{id:"syncprefab"},(0,n.kt)("a",{parentName:"h4",href:"./SyncPrefab"},"SyncPrefab")),(0,n.kt)("h4",{id:"syncsettings"},(0,n.kt)("a",{parentName:"h4",href:"./SyncSettings"},"SyncSettings")),(0,n.kt)("h4",{id:"updatevarsmessage"},(0,n.kt)("a",{parentName:"h4",href:"./UpdateVarsMessage"},"UpdateVarsMessage")),(0,n.kt)("h2",{id:"interfaces"},"Interfaces"),(0,n.kt)("h4",{id:"imessagereceiver"},(0,n.kt)("a",{parentName:"h4",href:"./IMessageReceiver"},"IMessageReceiver")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"An object that can receive messages")),(0,n.kt)("h4",{id:"imessagesender"},(0,n.kt)("a",{parentName:"h4",href:"./IMessageSender"},"IMessageSender")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"An object that can send messages")),(0,n.kt)("h4",{id:"inetidgenerator"},(0,n.kt)("a",{parentName:"h4",href:"./INetIdGenerator"},"INetIdGenerator")),(0,n.kt)("h4",{id:"inetworkplayer"},(0,n.kt)("a",{parentName:"h4",href:"./INetworkPlayer"},"INetworkPlayer")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"An object owned by a player that can: send/receive messages, have network visibility, be an object owner, authenticated permissions, and load scenes.\nMay be from the server to client or from client to server")),(0,n.kt)("h4",{id:"inetworkvisibility"},(0,n.kt)("a",{parentName:"h4",href:"./INetworkVisibility"},"INetworkVisibility")),(0,n.kt)("h4",{id:"iobjectlocator"},(0,n.kt)("a",{parentName:"h4",href:"./IObjectLocator"},"IObjectLocator")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"An object that implements this interface can find objects by their net id\nThis is used by readers when trying to deserialize gameobjects")),(0,n.kt)("h4",{id:"iobjectowner"},(0,n.kt)("a",{parentName:"h4",href:"./IObjectOwner"},"IObjectOwner")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"An object that can own networked objects")),(0,n.kt)("h4",{id:"isceneloader"},(0,n.kt)("a",{parentName:"h4",href:"./ISceneLoader"},"ISceneLoader")),(0,n.kt)("h4",{id:"ivisibilitytracker"},(0,n.kt)("a",{parentName:"h4",href:"./IVisibilityTracker"},"IVisibilityTracker")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"An object that can observe NetworkIdentities.\nthis is useful for interest management")),(0,n.kt)("h2",{id:"enums"},"Enums"),(0,n.kt)("h4",{id:"channel"},(0,n.kt)("a",{parentName:"h4",href:"./Channel"},"Channel")),(0,n.kt)("h4",{id:"characterspawnerplayerspawnmethod"},(0,n.kt)("a",{parentName:"h4",href:"./CharacterSpawner.PlayerSpawnMethod"},"CharacterSpawner.PlayerSpawnMethod")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Enumeration of methods of where to spawn player objects in multiplayer games.")),(0,n.kt)("h4",{id:"clientstoppedreason"},(0,n.kt)("a",{parentName:"h4",href:"./ClientStoppedReason"},"ClientStoppedReason")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Reason why Client was stopped or disconnected")),(0,n.kt)("h4",{id:"connectstate"},(0,n.kt)("a",{parentName:"h4",href:"./ConnectState"},"ConnectState")),(0,n.kt)("h4",{id:"networkflags"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkFlags"},"NetworkFlags")),(0,n.kt)("h4",{id:"networkmanagermode"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkManagerMode"},"NetworkManagerMode")),(0,n.kt)("h4",{id:"pendingasyncspawnmessagetype"},(0,n.kt)("a",{parentName:"h4",href:"./PendingAsyncSpawn.MessageType"},"PendingAsyncSpawn.MessageType")),(0,n.kt)("h4",{id:"rpctarget"},(0,n.kt)("a",{parentName:"h4",href:"./RpcTarget"},"RpcTarget")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Used by ClientRpc to tell mirage who to send remote call to")),(0,n.kt)("h4",{id:"sceneoperation"},(0,n.kt)("a",{parentName:"h4",href:"./SceneOperation"},"SceneOperation")),(0,n.kt)("h4",{id:"syncactiveoption"},(0,n.kt)("a",{parentName:"h4",href:"./SyncActiveOption"},"SyncActiveOption")),(0,n.kt)("h4",{id:"syncfrom"},(0,n.kt)("a",{parentName:"h4",href:"./SyncFrom"},"SyncFrom")),(0,n.kt)("h4",{id:"synchooktype"},(0,n.kt)("a",{parentName:"h4",href:"./SyncHookType"},"SyncHookType")),(0,n.kt)("h4",{id:"synctiming"},(0,n.kt)("a",{parentName:"h4",href:"./SyncTiming"},"SyncTiming")),(0,n.kt)("h4",{id:"syncto"},(0,n.kt)("a",{parentName:"h4",href:"./SyncTo"},"SyncTo")),(0,n.kt)("h2",{id:"delegates"},"Delegates"),(0,n.kt)("h4",{id:"authoritychanged"},(0,n.kt)("a",{parentName:"h4",href:"./AuthorityChanged"},"AuthorityChanged")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Event that can be used to check authority")),(0,n.kt)("h4",{id:"dynamicspawnhandlerdelegate"},(0,n.kt)("a",{parentName:"h4",href:"./DynamicSpawnHandlerDelegate"},"DynamicSpawnHandlerDelegate")),(0,n.kt)("h4",{id:"messagedelegatet"},(0,n.kt)("a",{parentName:"h4",href:"./MessageDelegate-1"},"MessageDelegate","<","T",">")),(0,n.kt)("h4",{id:"messagedelegateasynct"},(0,n.kt)("a",{parentName:"h4",href:"./MessageDelegateAsync-1"},"MessageDelegateAsync","<","T",">")),(0,n.kt)("h4",{id:"messagedelegatewithplayert"},(0,n.kt)("a",{parentName:"h4",href:"./MessageDelegateWithPlayer-1"},"MessageDelegateWithPlayer","<","T",">")),(0,n.kt)("h4",{id:"messagedelegatewithplayerasynct"},(0,n.kt)("a",{parentName:"h4",href:"./MessageDelegateWithPlayerAsync-1"},"MessageDelegateWithPlayerAsync","<","T",">")),(0,n.kt)("h4",{id:"networkvisibilityvisibilitychanged"},(0,n.kt)("a",{parentName:"h4",href:"./NetworkVisibility.VisibilityChanged"},"NetworkVisibility.VisibilityChanged")),(0,n.kt)("h4",{id:"spawnhandlerasyncdelegate"},(0,n.kt)("a",{parentName:"h4",href:"./SpawnHandlerAsyncDelegate"},"SpawnHandlerAsyncDelegate")),(0,n.kt)("h4",{id:"spawnhandlerdelegate"},(0,n.kt)("a",{parentName:"h4",href:"./SpawnHandlerDelegate"},"SpawnHandlerDelegate")),(0,n.kt)("h4",{id:"unspawndelegate"},(0,n.kt)("a",{parentName:"h4",href:"./UnSpawnDelegate"},"UnSpawnDelegate")))}h.isMDXComponent=!0}}]);