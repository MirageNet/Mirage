"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[2477],{3905:(e,t,r)=>{r.d(t,{Zo:()=>k,kt:()=>d});var a=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},k=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,k=l(e,["components","mdxType","originalType","parentName"]),p=s(r),d=i,h=p["".concat(c,".").concat(d)]||p[d]||u[d]||n;return r?a.createElement(h,o(o({ref:t},k),{},{components:r})):a.createElement(h,o({ref:t},k))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<n;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},58383:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var a=r(87462),i=(r(67294),r(3905));const n={id:"Mirage.Serialization",title:"Mirage.Serialization"},o="Mirage.Serialization",l={unversionedId:"reference/Mirage.Serialization/Mirage.Serialization",id:"reference/Mirage.Serialization/Mirage.Serialization",title:"Mirage.Serialization",description:"Classes",source:"@site/docs/reference/Mirage.Serialization/index.md",sourceDirName:"reference/Mirage.Serialization",slug:"/reference/Mirage.Serialization/",permalink:"/Mirage/docs/reference/Mirage.Serialization/",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage.Serialization/index.md",tags:[],version:"current",frontMatter:{id:"Mirage.Serialization",title:"Mirage.Serialization"},sidebar:"api",previous:{title:"ServerRpcSender",permalink:"/Mirage/docs/reference/Mirage.RemoteCalls/ServerRpcSender"},next:{title:"AnglePacker",permalink:"/Mirage/docs/reference/Mirage.Serialization/AnglePacker"}},c={},s=[{value:"Classes",id:"classes",level:2},{value:"AnglePacker",id:"anglepacker",level:4},{value:"BitCountAttribute",id:"bitcountattribute",level:4},{value:"BitCountFromRangeAttribute",id:"bitcountfromrangeattribute",level:4},{value:"BitHelper",id:"bithelper",level:4},{value:"BitMask",id:"bitmask",level:4},{value:"CollectionExtensions",id:"collectionextensions",level:4},{value:"CompressedExtensions",id:"compressedextensions",level:4},{value:"FloatPackAttribute",id:"floatpackattribute",level:4},{value:"FloatPacker",id:"floatpacker",level:4},{value:"FromBitCount",id:"frombitcount",level:4},{value:"GenericTypesSerializationExtensions",id:"generictypesserializationextensions",level:4},{value:"MessageIdCache&lt;T&gt;",id:"messageidcachet",level:4},{value:"MessagePacker",id:"messagepacker",level:4},{value:"MirageNetworkReader",id:"miragenetworkreader",level:4},{value:"MirageTypesExtensions",id:"miragetypesextensions",level:4},{value:"NetworkReader",id:"networkreader",level:4},{value:"NetworkReaderPool",id:"networkreaderpool",level:4},{value:"NetworkWriter",id:"networkwriter",level:4},{value:"NetworkWriterPool",id:"networkwriterpool",level:4},{value:"PackedExtensions",id:"packedextensions",level:4},{value:"PooledNetworkReader",id:"poolednetworkreader",level:4},{value:"PooledNetworkWriter",id:"poolednetworkwriter",level:4},{value:"QuaternionPackAttribute",id:"quaternionpackattribute",level:4},{value:"QuaternionPacker",id:"quaternionpacker",level:4},{value:"Reader&lt;T&gt;",id:"readert",level:4},{value:"StringExtensions",id:"stringextensions",level:4},{value:"SystemTypesExtensions",id:"systemtypesextensions",level:4},{value:"UnityTypesExtensions",id:"unitytypesextensions",level:4},{value:"VarDoublePacker",id:"vardoublepacker",level:4},{value:"VarFloatPacker",id:"varfloatpacker",level:4},{value:"VarIntAttribute",id:"varintattribute",level:4},{value:"VarIntBlocksAttribute",id:"varintblocksattribute",level:4},{value:"VarIntBlocksPacker",id:"varintblockspacker",level:4},{value:"VarIntPacker",id:"varintpacker",level:4},{value:"VarVector2Packer",id:"varvector2packer",level:4},{value:"VarVector3Packer",id:"varvector3packer",level:4},{value:"Vector2PackAttribute",id:"vector2packattribute",level:4},{value:"Vector2Packer",id:"vector2packer",level:4},{value:"Vector3PackAttribute",id:"vector3packattribute",level:4},{value:"Vector3Packer",id:"vector3packer",level:4},{value:"WeaverIgnoreAttribute",id:"weaverignoreattribute",level:4},{value:"WeaverSerializeCollectionAttribute",id:"weaverserializecollectionattribute",level:4},{value:"WeaverWriteAsGenericAttribute",id:"weaverwriteasgenericattribute",level:4},{value:"Writer&lt;T&gt;",id:"writert",level:4},{value:"ZigZag",id:"zigzag",level:4},{value:"ZigZagEncodeAttribute",id:"zigzagencodeattribute",level:4}],k={toc:s};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mirageserialization"},"Mirage.Serialization"),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("h4",{id:"anglepacker"},(0,i.kt)("a",{parentName:"h4",href:"./AnglePacker"},"AnglePacker")),(0,i.kt)("h4",{id:"bitcountattribute"},(0,i.kt)("a",{parentName:"h4",href:"./BitCountAttribute"},"BitCountAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Tells weaver how many bits to sue for field\nOnly works with integer fields (byte, int, ulong, enums etc)")),(0,i.kt)("p",null,"NOTE: bits are truncated when using this, so signed values will lose their sign. Use  as well if value might be negative"),(0,i.kt)("p",null,"Also See: Bit Packing Documentation"),(0,i.kt)("h4",{id:"bitcountfromrangeattribute"},(0,i.kt)("a",{parentName:"h4",href:"./BitCountFromRangeAttribute"},"BitCountFromRangeAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Calculates bitcount from then given min/max values and then packs using\nAlso See: Bit Packing Documentation")),(0,i.kt)("h4",{id:"bithelper"},(0,i.kt)("a",{parentName:"h4",href:"./BitHelper"},"BitHelper")),(0,i.kt)("h4",{id:"bitmask"},(0,i.kt)("a",{parentName:"h4",href:"./BitMask"},"BitMask")),(0,i.kt)("h4",{id:"collectionextensions"},(0,i.kt)("a",{parentName:"h4",href:"./CollectionExtensions"},"CollectionExtensions")),(0,i.kt)("h4",{id:"compressedextensions"},(0,i.kt)("a",{parentName:"h4",href:"./CompressedExtensions"},"CompressedExtensions")),(0,i.kt)("h4",{id:"floatpackattribute"},(0,i.kt)("a",{parentName:"h4",href:"./FloatPackAttribute"},"FloatPackAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Packs a float field, clamped from -max to +max, with\nAlso See: Bit Packing Documentation")),(0,i.kt)("h4",{id:"floatpacker"},(0,i.kt)("a",{parentName:"h4",href:"./FloatPacker"},"FloatPacker")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Helps compresses a float into a reduced number of bits")),(0,i.kt)("h4",{id:"frombitcount"},(0,i.kt)("a",{parentName:"h4",href:"./FromBitCount"},"FromBitCount")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The max value for N number of bits")),(0,i.kt)("h4",{id:"generictypesserializationextensions"},(0,i.kt)("a",{parentName:"h4",href:"./GenericTypesSerializationExtensions"},"GenericTypesSerializationExtensions")),(0,i.kt)("h4",{id:"messageidcachet"},(0,i.kt)("a",{parentName:"h4",href:"./MessageIdCache-1"},"MessageIdCache","<","T",">")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Class that will cache the ID for type T\navoids needing to calculate the stable hash of the full name each time a message is sent")),(0,i.kt)("h4",{id:"messagepacker"},(0,i.kt)("a",{parentName:"h4",href:"./MessagePacker"},"MessagePacker")),(0,i.kt)("h4",{id:"miragenetworkreader"},(0,i.kt)("a",{parentName:"h4",href:"./MirageNetworkReader"},"MirageNetworkReader")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NetworkReader but has a ObjectLocator field that can be used by Reader functions to fetch NetworkIdentity")),(0,i.kt)("h4",{id:"miragetypesextensions"},(0,i.kt)("a",{parentName:"h4",href:"./MirageTypesExtensions"},"MirageTypesExtensions")),(0,i.kt)("h4",{id:"networkreader"},(0,i.kt)("a",{parentName:"h4",href:"./NetworkReader"},"NetworkReader")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Bit writer, writes values to a buffer on a bit level\nUse  to reduce memory allocation")),(0,i.kt)("h4",{id:"networkreaderpool"},(0,i.kt)("a",{parentName:"h4",href:"./NetworkReaderPool"},"NetworkReaderPool")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Holds static reference to  of ")),(0,i.kt)("h4",{id:"networkwriter"},(0,i.kt)("a",{parentName:"h4",href:"./NetworkWriter"},"NetworkWriter")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Bit writer, writes values to a buffer on a bit level\nUse  to reduce memory allocation")),(0,i.kt)("h4",{id:"networkwriterpool"},(0,i.kt)("a",{parentName:"h4",href:"./NetworkWriterPool"},"NetworkWriterPool")),(0,i.kt)("h4",{id:"packedextensions"},(0,i.kt)("a",{parentName:"h4",href:"./PackedExtensions"},"PackedExtensions")),(0,i.kt)("h4",{id:"poolednetworkreader"},(0,i.kt)("a",{parentName:"h4",href:"./PooledNetworkReader"},"PooledNetworkReader")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NetworkReader to be used with ")),(0,i.kt)("h4",{id:"poolednetworkwriter"},(0,i.kt)("a",{parentName:"h4",href:"./PooledNetworkWriter"},"PooledNetworkWriter")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NetworkWriter to be used with ")),(0,i.kt)("h4",{id:"quaternionpackattribute"},(0,i.kt)("a",{parentName:"h4",href:"./QuaternionPackAttribute"},"QuaternionPackAttribute")),(0,i.kt)("h4",{id:"quaternionpacker"},(0,i.kt)("a",{parentName:"h4",href:"./QuaternionPacker"},"QuaternionPacker")),(0,i.kt)("h4",{id:"readert"},(0,i.kt)("a",{parentName:"h4",href:"./Reader-1"},"Reader","<","T",">")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"a class that holds readers for the different types\nNote that c# creates a different static variable for each\ntype\nThis will be populated by the weaver")),(0,i.kt)("h4",{id:"stringextensions"},(0,i.kt)("a",{parentName:"h4",href:"./StringExtensions"},"StringExtensions")),(0,i.kt)("h4",{id:"systemtypesextensions"},(0,i.kt)("a",{parentName:"h4",href:"./SystemTypesExtensions"},"SystemTypesExtensions")),(0,i.kt)("h4",{id:"unitytypesextensions"},(0,i.kt)("a",{parentName:"h4",href:"./UnityTypesExtensions"},"UnityTypesExtensions")),(0,i.kt)("h4",{id:"vardoublepacker"},(0,i.kt)("a",{parentName:"h4",href:"./VarDoublePacker"},"VarDoublePacker")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Packs a double using  and ")),(0,i.kt)("h4",{id:"varfloatpacker"},(0,i.kt)("a",{parentName:"h4",href:"./VarFloatPacker"},"VarFloatPacker")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Packs a float using  and ")),(0,i.kt)("h4",{id:"varintattribute"},(0,i.kt)("a",{parentName:"h4",href:"./VarIntAttribute"},"VarIntAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Tells weaver the max range for small, medium and large values.\nAllows small values to be sent using less bits\nOnly works with integer fields (byte, int, ulong, enums etc)")),(0,i.kt)("h4",{id:"varintblocksattribute"},(0,i.kt)("a",{parentName:"h4",href:"./VarIntBlocksAttribute"},"VarIntBlocksAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Tells weaver the block size to use for packing int values\nAllows small values to be sent using less bits\nOnly works with integer fields (byte, int, ulong, enums etc)")),(0,i.kt)("h4",{id:"varintblockspacker"},(0,i.kt)("a",{parentName:"h4",href:"./VarIntBlocksPacker"},"VarIntBlocksPacker")),(0,i.kt)("h4",{id:"varintpacker"},(0,i.kt)("a",{parentName:"h4",href:"./VarIntPacker"},"VarIntPacker")),(0,i.kt)("h4",{id:"varvector2packer"},(0,i.kt)("a",{parentName:"h4",href:"./VarVector2Packer"},"VarVector2Packer")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Packs a vector3 using  and ")),(0,i.kt)("h4",{id:"varvector3packer"},(0,i.kt)("a",{parentName:"h4",href:"./VarVector3Packer"},"VarVector3Packer")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Packs a vector3 using  and ")),(0,i.kt)("h4",{id:"vector2packattribute"},(0,i.kt)("a",{parentName:"h4",href:"./Vector2PackAttribute"},"Vector2PackAttribute")),(0,i.kt)("h4",{id:"vector2packer"},(0,i.kt)("a",{parentName:"h4",href:"./Vector2Packer"},"Vector2Packer")),(0,i.kt)("h4",{id:"vector3packattribute"},(0,i.kt)("a",{parentName:"h4",href:"./Vector3PackAttribute"},"Vector3PackAttribute")),(0,i.kt)("h4",{id:"vector3packer"},(0,i.kt)("a",{parentName:"h4",href:"./Vector3Packer"},"Vector3Packer")),(0,i.kt)("h4",{id:"weaverignoreattribute"},(0,i.kt)("a",{parentName:"h4",href:"./WeaverIgnoreAttribute"},"WeaverIgnoreAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Tells Weaver to ignore an Extension method")),(0,i.kt)("h4",{id:"weaverserializecollectionattribute"},(0,i.kt)("a",{parentName:"h4",href:"./WeaverSerializeCollectionAttribute"},"WeaverSerializeCollectionAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Tells weaver to use this method to write a generic type or collection\nCan also be used for other generic types like Nullable")),(0,i.kt)("h4",{id:"weaverwriteasgenericattribute"},(0,i.kt)("a",{parentName:"h4",href:"./WeaverWriteAsGenericAttribute"},"WeaverWriteAsGenericAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Tells Weaver to serialize a type as generic instead of creating a custom functions.")),(0,i.kt)("p",null,"Use this when you have created and assigned your own Read/Write functions\nor when you can","'","t use extension methods for types and need to manually assign them."),(0,i.kt)("p",null,"This will cause Weaver to use the  and  generic functions instead of creating new ones.\nYou must set these functions manually when using this attribute."),(0,i.kt)("h4",{id:"writert"},(0,i.kt)("a",{parentName:"h4",href:"./Writer-1"},"Writer","<","T",">")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"a class that holds writers for the different types\nNote that c# creates a different static variable for each\ntype\nThis will be populated by the weaver")),(0,i.kt)("h4",{id:"zigzag"},(0,i.kt)("a",{parentName:"h4",href:"./ZigZag"},"ZigZag")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"See zigzag encoding")),(0,i.kt)("h4",{id:"zigzagencodeattribute"},(0,i.kt)("a",{parentName:"h4",href:"./ZigZagEncodeAttribute"},"ZigZagEncodeAttribute")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Used along size  to encodes a integer value using  so that both positive and negative values can be sent\nAlso See: Bit Packing Documentation")))}u.isMDXComponent=!0}}]);