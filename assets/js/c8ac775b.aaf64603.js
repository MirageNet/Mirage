"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[5568],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>g});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=a.createContext({}),s=function(e){var r=a.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=s(e.components);return a.createElement(o.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(t),g=n,k=u["".concat(o,".").concat(g)]||u[g]||p[g]||l;return t?a.createElement(k,i(i({ref:r},d),{},{components:t})):a.createElement(k,i({ref:r},d))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var l=t.length,i=new Array(l);i[0]=u;var c={};for(var o in r)hasOwnProperty.call(r,o)&&(c[o]=r[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<l;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},950:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var a=t(87462),n=(t(67294),t(3905));const l={id:"NetworkManager",title:"NetworkManager"},i="Class NetworkManager",c={unversionedId:"reference/Mirage/NetworkManager",id:"reference/Mirage/NetworkManager",title:"NetworkManager",description:"Inheritance",source:"@site/docs/reference/Mirage/NetworkManager.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/NetworkManager",permalink:"/Mirage/docs/reference/Mirage/NetworkManager",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage/NetworkManager.md",tags:[],version:"current",frontMatter:{id:"NetworkManager",title:"NetworkManager"},sidebar:"api",previous:{title:"NetworkInspectorCallbacks",permalink:"/Mirage/docs/reference/Mirage/NetworkInspectorCallbacks"},next:{title:"NetworkManagerGUI",permalink:"/Mirage/docs/reference/Mirage/NetworkManagerGUI"}},o={},s=[{value:"Inheritance",id:"inheritance",level:5},{value:"Syntax",id:"syntax",level:5},{value:"Fields",id:"fields",level:3},{value:"Server",id:"server",level:4},{value:"Declaration",id:"declaration",level:5},{value:"Client",id:"client",level:4},{value:"Declaration",id:"declaration-1",level:5},{value:"NetworkSceneManager",id:"networkscenemanager",level:4},{value:"Declaration",id:"declaration-2",level:5},{value:"ServerObjectManager",id:"serverobjectmanager",level:4},{value:"Declaration",id:"declaration-3",level:5},{value:"ClientObjectManager",id:"clientobjectmanager",level:4},{value:"Declaration",id:"declaration-4",level:5},{value:"ValidateReferences",id:"validatereferences",level:4},{value:"Declaration",id:"declaration-5",level:5},{value:"Properties",id:"properties",level:3},{value:"IsNetworkActive",id:"isnetworkactive",level:4},{value:"Declaration",id:"declaration-6",level:5},{value:"NetworkMode",id:"networkmode",level:4},{value:"Declaration",id:"declaration-7",level:5}],d={toc:s};function p(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-networkmanager"},"Class NetworkManager"),(0,n.kt)("div",{class:"inheritance"},(0,n.kt)("h5",{id:"inheritance"},"Inheritance"),(0,n.kt)("div",{class:"level",style:{"--data-index":0}},"System.Object")),(0,n.kt)("h5",{id:"syntax"},"Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public class NetworkManager : MonoBehaviour\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"server"},"Server"),(0,n.kt)("h5",{id:"declaration"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkServer Server\n")),(0,n.kt)("h4",{id:"client"},"Client"),(0,n.kt)("h5",{id:"declaration-1"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkClient Client\n")),(0,n.kt)("h4",{id:"networkscenemanager"},"NetworkSceneManager"),(0,n.kt)("h5",{id:"declaration-2"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkSceneManager NetworkSceneManager\n")),(0,n.kt)("h4",{id:"serverobjectmanager"},"ServerObjectManager"),(0,n.kt)("h5",{id:"declaration-3"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public ServerObjectManager ServerObjectManager\n")),(0,n.kt)("h4",{id:"clientobjectmanager"},"ClientObjectManager"),(0,n.kt)("h5",{id:"declaration-4"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public ClientObjectManager ClientObjectManager\n")),(0,n.kt)("h4",{id:"validatereferences"},"ValidateReferences"),(0,n.kt)("h5",{id:"declaration-5"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public bool ValidateReferences\n")),(0,n.kt)("h3",{id:"properties"},"Properties"),(0,n.kt)("h4",{id:"isnetworkactive"},"IsNetworkActive"),(0,n.kt)("p",null,"True if the server or client is started and running\nThis is set True in StartServer / StartClient, and set False in StopServer / StopClient"),(0,n.kt)("h5",{id:"declaration-6"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsNetworkActive { get; }\n")),(0,n.kt)("h4",{id:"networkmode"},"NetworkMode"),(0,n.kt)("p",null,"helper enum to know if we started the NetworkManager as server/client/host."),(0,n.kt)("h5",{id:"declaration-7"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkManagerMode NetworkMode { get; }\n")))}p.isMDXComponent=!0}}]);