"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[4077],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=s(n),p=a,f=m["".concat(l,".").concat(p)]||m[p]||u[p]||o;return n?r.createElement(f,c(c({ref:t},d),{},{components:n})):r.createElement(f,c({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={id:"Commands",title:"Commands"},c="Enum Commands",i={unversionedId:"reference/Mirage.SocketLayer/Commands",id:"reference/Mirage.SocketLayer/Commands",title:"Commands",description:"Small message used to control a connection",source:"@site/docs/reference/Mirage.SocketLayer/Commands.md",sourceDirName:"reference/Mirage.SocketLayer",slug:"/reference/Mirage.SocketLayer/Commands",permalink:"/Mirage/docs/reference/Mirage.SocketLayer/Commands",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage.SocketLayer/Commands.md",tags:[],version:"current",frontMatter:{id:"Commands",title:"Commands"},sidebar:"api",previous:{title:"ByteUtils",permalink:"/Mirage/docs/reference/Mirage.SocketLayer/ByteUtils"},next:{title:"Config",permalink:"/Mirage/docs/reference/Mirage.SocketLayer/Config"}},l={},s=[{value:"Syntax",id:"syntax",level:5},{value:"Fields",id:"fields",level:3},{value:"ConnectRequest",id:"connectrequest",level:4},{value:"Declaration",id:"declaration",level:5},{value:"ConnectionAccepted",id:"connectionaccepted",level:4},{value:"Declaration",id:"declaration-1",level:5},{value:"ConnectionRejected",id:"connectionrejected",level:4},{value:"Declaration",id:"declaration-2",level:5},{value:"Disconnect",id:"disconnect",level:4},{value:"Declaration",id:"declaration-3",level:5}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"enum-commands"},"Enum Commands"),(0,a.kt)("p",null,"Small message used to control a connection"),(0,a.kt)("p",null," and Commands uses their own byte/enum to split up the flow and add struture to the code."),(0,a.kt)("h5",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public enum Commands\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"connectrequest"},"ConnectRequest"),(0,a.kt)("p",null,"Sent from client to request to connect to server"),(0,a.kt)("h5",{id:"declaration"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"ConnectRequest = 1\n")),(0,a.kt)("h4",{id:"connectionaccepted"},"ConnectionAccepted"),(0,a.kt)("p",null,"Sent when Server accepts client"),(0,a.kt)("h5",{id:"declaration-1"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"ConnectionAccepted = 2\n")),(0,a.kt)("h4",{id:"connectionrejected"},"ConnectionRejected"),(0,a.kt)("p",null,"Sent when server rejects client"),(0,a.kt)("h5",{id:"declaration-2"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"ConnectionRejected = 3\n")),(0,a.kt)("h4",{id:"disconnect"},"Disconnect"),(0,a.kt)("p",null,"Sent from client or server to close connection"),(0,a.kt)("h5",{id:"declaration-3"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"Disconnect = 4\n")))}u.isMDXComponent=!0}}]);