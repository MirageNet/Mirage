"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[3722],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>u});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(r),u=n,y=m["".concat(c,".").concat(u)]||m[u]||p[u]||i;return r?a.createElement(y,o(o({ref:t},d),{},{components:r})):a.createElement(y,o({ref:t},d))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},46878:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const i={id:"IDataHandler",title:"IDataHandler"},o="Interface IDataHandler",l={unversionedId:"reference/Mirage.SocketLayer/IDataHandler",id:"reference/Mirage.SocketLayer/IDataHandler",title:"IDataHandler",description:"Handles data from SocketLayer",source:"@site/docs/reference/Mirage.SocketLayer/IDataHandler.md",sourceDirName:"reference/Mirage.SocketLayer",slug:"/reference/Mirage.SocketLayer/IDataHandler",permalink:"/Mirage/docs/reference/Mirage.SocketLayer/IDataHandler",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/main/doc/docs/reference/Mirage.SocketLayer/IDataHandler.md",tags:[],version:"current",frontMatter:{id:"IDataHandler",title:"IDataHandler"},sidebar:"api",previous:{title:"IConnection",permalink:"/Mirage/docs/reference/Mirage.SocketLayer/IConnection"},next:{title:"IEndPoint",permalink:"/Mirage/docs/reference/Mirage.SocketLayer/IEndPoint"}},c={},s=[{value:"Syntax",id:"syntax",level:5},{value:"Methods",id:"methods",level:3},{value:"ReceiveMessage(IConnection, ArraySegment&lt;Byte&gt;)",id:"receivemessageiconnection-arraysegmentbyte",level:4},{value:"Declaration",id:"declaration",level:5},{value:"Parameters",id:"parameters",level:5}],d={toc:s};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"interface-idatahandler"},"Interface IDataHandler"),(0,n.kt)("p",null,"Handles data from SocketLayer\nA high level script should implement this interface give it to Peer when it is created"),(0,n.kt)("h5",{id:"syntax"},"Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public interface IDataHandler\n")),(0,n.kt)("h3",{id:"methods"},"Methods"),(0,n.kt)("h4",{id:"receivemessageiconnection-arraysegmentbyte"},"ReceiveMessage(IConnection, ArraySegment","<","Byte",">",")"),(0,n.kt)("p",null,"Receives a new Packet from low level"),(0,n.kt)("h5",{id:"declaration"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"void ReceiveMessage(IConnection connection, ArraySegment<byte> message)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Mirage.SocketLayer.IConnection"),(0,n.kt)("td",{parentName:"tr",align:null},"connection"),(0,n.kt)("td",{parentName:"tr",align:null},"connection that sent data")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"System.ArraySegment","<","System.Byte",">"),(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"Single message received by peer")))))}p.isMDXComponent=!0}}]);