// DO NOT EDIT: GENERATED BY BitCountFromRangeTestGenerator.cs

using System;
using System.Collections;
using Mirage.Serialization;
using Mirage.Tests.Runtime.ClientServer;
using NUnit.Framework;
using UnityEngine;
using UnityEngine.TestTools;

namespace Mirage.Tests.Runtime.Generated.BitCountFromRangeAttributeTests
{
    [System.Serializable]
    public enum MyByteEnum : byte
    {
        None = 0,
        Slow = 1,
        Fast = 2,
        ReallyFast = 3,
    }
    public class BitCountRangeBehaviour_MyByteEnum_0_3 : NetworkBehaviour
    {
        [BitCountFromRange(0, 3)]
        [SyncVar] public MyByteEnum myValue;
    }
    public class BitCountRangeTest_MyByteEnum_0_3 : ClientServerSetup<BitCountRangeBehaviour_MyByteEnum_0_3>
    {
        const MyByteEnum value = (MyByteEnum)3;

        [Test]
        public void SyncVarIsBitPacked()
        {
            serverComponent.myValue = value;

            using (PooledNetworkWriter writer = NetworkWriterPool.GetWriter())
            {
                serverComponent.SerializeSyncVars(writer, true);

                Assert.That(writer.BitPosition, Is.EqualTo(2));

                using (PooledNetworkReader reader = NetworkReaderPool.GetReader(writer.ToArraySegment()))
                {
                    clientComponent.DeserializeSyncVars(reader, true);
                    Assert.That(reader.BitPosition, Is.EqualTo(2));

                    Assert.That(clientComponent.myValue, Is.EqualTo(value));
                }
            }
        }
    }
}
