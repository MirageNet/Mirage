// DO NOT EDIT: GENERATED BY VarIntBlocksTestGenerator.cs

using System;
using System.Collections;
using Mirage.Serialization;
using Mirage.Tests.Runtime.ClientServer;
using NUnit.Framework;
using UnityEngine;
using UnityEngine.TestTools;

namespace Mirage.Tests.Runtime.Generated.VarIntBlocksTests
{
    [System.Flags, System.Serializable]
    public enum MyEnumByte : byte
    {
        None = 0,
        HasHealth = 1,
        HasArmor = 2,
        HasGun = 4,
        HasAmmo = 8,
        HasLeftHand = 16,
        HasRightHand = 32,
        HasHead = 64,
    }
    public class VarIntBlocksBehaviour_MyEnumByte_4 : NetworkBehaviour
    {
        [VarIntBlocks(4)]
        [SyncVar] public MyEnumByte myValue;
    }
    public class VarIntBlocksTest_MyEnumByte_4 : ClientServerSetup<VarIntBlocksBehaviour_MyEnumByte_4>
    {
        [Test]
        [TestCase((MyEnumByte)0, 5)]
        [TestCase((MyEnumByte)4, 5)]
        [TestCase((MyEnumByte)16, 10)]
        [TestCase((MyEnumByte)64, 10)]

        public void SyncVarIsBitPacked(MyEnumByte value, int expectedBitCount)
        {
            serverComponent.myValue = value;

            using (PooledNetworkWriter writer = NetworkWriterPool.GetWriter())
            {
                serverComponent.SerializeSyncVars(writer, true);

                Assert.That(writer.BitPosition, Is.EqualTo(expectedBitCount));

                using (PooledNetworkReader reader = NetworkReaderPool.GetReader(writer.ToArraySegment()))
                {
                    clientComponent.DeserializeSyncVars(reader, true);
                    Assert.That(reader.BitPosition, Is.EqualTo(expectedBitCount));

                    Assert.That(clientComponent.myValue, Is.EqualTo(value));
                }
            }
        }
    }
}
